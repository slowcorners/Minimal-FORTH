                                                      ; ----------------------------------------------------------------------
                                                      ; M i n i m a l - F O R T H
                                                      ;
                                                      ; A minimal FORTH for the Minimal-CPU.
                                                      ;
                                                      ; Date:         2021-03-24
                                                      ; Version:      0.1
                                                      ; Adaptation:   Nils "slowcorners" Kullberg
                                                      ; License:      MIT Open Source Initiative
                                                      ;
                                                      ;
                                                      ; FIG-FORTH WAS ORIGINALLY DEVELOPED BY:
                                                      ; FORTH INTEREST GROUP / FORTH IMPLEMENTATION TEAM
                                                      ; P.O.BOX 1105
                                                      ; SAN CARLOS, CA. 94701
                                                      ;
                                                      ; THIS COMPILER EXISTS THANKS TO ALL THE WONDERFUL PEOPLE OF THE
                                                      ; FORTH INTEREST GROUP. IT IS THEIR DEDICATION AND GENEROSITY WHICH
                                                      ; STILL TODAY MAKES THESE NEW ADAPTATIONS POSSIBLE.
                                                      ;
                                                      ; MAY THIS COMPILER BE A SMALL TRIBUTE TO ALL THOSE INDIVIDUALS OF THE
                                                      ; FORTH INTEREST GROUP AS WELL AS SLU4 WHOSE COUNTLESS HOURS AND
                                                      ; INGENIOUS DETAILS HAVE MADE THE MINIMAL-CPU COME INTO EXISTENCE.
                                                      ;
                                                      ; NILS "SLOWCORNERS" KULLBERG
                                                      ; LUND, SWEDEN
                                                      ; MARCH 2021, IN THE MIDDLE OF THE COVID-19 PANDEMIC
                                                      ;
                                                      ; ----------------------------------------------------------------------
                                                      
                                                              ORG     0x8000
                                                              
                                                      
                                                      ; INCLUDE         defs.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; GLOBAL DEFINES
                                                      ;
                                                      
                                                      CH_BEL      EQU     7
                                                      CH_BSP      EQU     8
                                                      CH_LF       EQU     10
                                                      CH_CR       EQU     13
                                                      CH_ESC      EQU     27
                                                      CH_BL       EQU     32
                                                      CH_DQUOTE   EQU     34
                                                      CH_BSL      EQU     92
                                                      CH_DEL      EQU     127
                                                      
                                                      MAGIC       EQU     0x205C      ; Magic cookie
                                                                                      ; : actually "\ " as an integer
                                                                                      ; : used by COLD and ABORT
                                                      
                                                      ; INCLUDE         boot-table.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; BOOT TABLE
                                                      
8000 14 C1 97                                         ORIGIN: JPA     CENT            ;  0: COLD start
8003 00                                                       NOP
8004 14 D3 97                                                 JPA     WENT            ;  4: WARM start
8007 00                                                       NOP
8008 00 00                                                    DW      0               ;  8: Processor type in radix 36
800A 00 00                                                    DW      0               ; 10: Revision
800C EB A2                                                    DW      HFORTH          ; 12: Pointer to latest word defined
800E 08 00                                                    DW      CH_BSP          ; 14: Backspace character
8010 89 F6                                                    DW      XUP             ; 16: Pointer to initial user area
8012 B4 F5                                                    DW      XSP             ; 18: Initial data stack pointer
8014 88 F6                                                    DW      XRP             ; 20: Initial return stack pointer
8016 B5 F5                                                    DW      XTIB            ; 22: Pointer to terminal input buffer
8018 1F 00                                                    DW      31              ; 24: Maximum FORTH word name length
801A 00 00                                                    DW      0               ; 26: Initial WARNING mode
801C FD A2                                                    DW      XDP             ; 28: Initial FENCE
801E FD A2                                                    DW      XDP             ; 30: Initial HERE
8020 FB A2                                                    DW      XXVOC           ; 32: Pointer to initial VOC-LINK
8022 D9 F6                                                    DW      DSKBF           ; 34: Initial FIRST
8024 E1 FE                                                    DW      ENDBF           ; 36: Initial LIMIT
8026 00 00                                                    DW      0               ; 38: unused
8028 00 00                                                    DW      0               ; 40: unused
                                                      
                                                      ; INCLUDE         helpers.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; HELPER FUNCTIONS
                                                      ;
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (IP)+
                                                      
802A 1D E2 FE                                         _LIT:   LDR     IP
802D 16 EC FE                                                 STA     R1.0
8030 2E E2 FE                                                 INW     IP
8033 1D E2 FE                                                 LDR     IP
8036 16 ED FE                                                 STA     R1.1
8039 2E E2 FE                                                 INW     IP
803C 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       IP = IP + (IP)+
                                                      
803D 1D E2 FE                                         _BRAN:  LDR     IP
8040 16 EC FE                                                 STA     R1.0
8043 2E E2 FE                                                 INW     IP
8046 1D E2 FE                                                 LDR     IP
8049 16 ED FE                                                 STA     R1.1
804C 2F E2 FE                                                 DEW     IP
804F 15 EC FE                                                 LDA     R1.0
8052 28 E2 FE                                                 ADB     IP.0
8055 15 ED FE                                                 LDA     R1.1
8058 2A E3 FE                                                 ACB     IP.1
805B 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (SP) "half function"
                                                      
805C 1D E6 FE                                         _GET1_: LDR     SP
805F 16 EC FE                                                 STA     R1.0
8062 2E E6 FE                                                 INW     SP
8065 1D E6 FE                                                 LDR     SP
8068 16 ED FE                                                 STA     R1.1
806B 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (SP)
                                                      
806C 38 5C 80                                         _GET1:  JPS     _GET1_
806F 2F E6 FE                                                 DEW     SP
8072 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (SP)+
                                                      
8073 38 5C 80                                         _POP1:  JPS     _GET1_
8076 2E E6 FE                                                 INW     SP
8079 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1X = (SP)+
                                                      
807A 1D E6 FE                                         _DPOP1: LDR     SP
807D 16 EE FE                                                 STA     R1.2
8080 2E E6 FE                                                 INW     SP
8083 1D E6 FE                                                 LDR     SP
8086 16 EF FE                                                 STA     R1.3
8089 2E E6 FE                                                 INW     SP
808C 1D E6 FE                                                 LDR     SP
808F 16 EC FE                                                 STA     R1.0
8092 2E E6 FE                                                 INW     SP
8095 1D E6 FE                                                 LDR     SP
8098 16 ED FE                                                 STA     R1.1
809B 2E E6 FE                                                 INW     SP
809E 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R2 = (SP) "half function"
                                                      
809F 1D E6 FE                                         _GET2_: LDR     SP
80A2 16 F0 FE                                                 STA     R2.0
80A5 2E E6 FE                                                 INW     SP
80A8 1D E6 FE                                                 LDR     SP
80AB 16 F1 FE                                                 STA     R2.1
80AE 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R2 = (SP)
                                                      
80AF 38 9F 80                                         _GET2:  JPS     _GET2_
80B2 2F E6 FE                                                 DEW     SP
80B5 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (SP)+
                                                      
80B6 38 9F 80                                         _POP2:  JPS     _GET2_
80B9 2E E6 FE                                                 INW     SP
80BC 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R2X = (SP)+
                                                      
80BD 1D E6 FE                                         _DPOP2: LDR     SP
80C0 16 F2 FE                                                 STA     R2.2
80C3 2E E6 FE                                                 INW     SP
80C6 1D E6 FE                                                 LDR     SP
80C9 16 F3 FE                                                 STA     R2.3
80CC 2E E6 FE                                                 INW     SP
80CF 1D E6 FE                                                 LDR     SP
80D2 16 F0 FE                                                 STA     R2.0
80D5 2E E6 FE                                                 INW     SP
80D8 1D E6 FE                                                 LDR     SP
80DB 16 F1 FE                                                 STA     R2.1
80DE 2E E6 FE                                                 INW     SP
80E1 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R3 = (SP) "half function"
                                                      
80E2 1D E6 FE                                         _GET3_: LDR     SP
80E5 16 F4 FE                                                 STA     R3.0
80E8 2E E6 FE                                                 INW     SP
80EB 1D E6 FE                                                 LDR     SP
80EE 16 F5 FE                                                 STA     R3.1
80F1 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R3 = (SP)
                                                      
80F2 38 E2 80                                         _GET3:  JPS     _GET3_
80F5 2F E6 FE                                                 DEW     SP
80F8 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R3 = (SP)+
                                                      
80F9 38 E2 80                                         _POP3:  JPS     _GET3_
80FC 2E E6 FE                                                 INW     SP
80FF 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R3 = (SP)+
                                                      ;       R2 = (SP)+
                                                      ;       R1 = (SP)+
                                                      
8100 38 F9 80                                         _POP321: JPS    _POP3
8103 38 B6 80                                         _POP21: JPS     _POP2
8106 38 73 80                                                 JPS     _POP1
8109 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (RP) "half function"
                                                      
810A 1D E8 FE                                         _RGET1_: LDR    RP
810D 16 EC FE                                                 STA     R1.0
8110 2E E8 FE                                                 INW     RP
8113 1D E8 FE                                                 LDR     RP
8116 16 ED FE                                                 STA     R1.1
8119 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (RP)
                                                      
811A 38 0A 81                                         _RGET1: JPS     _RGET1_
811D 2F E8 FE                                                 DEW     RP
8120 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (RP)+
                                                      
8121 38 0A 81                                         _RPOP1: JPS     _RGET1_
8124 2E E8 FE                                                 INW     RP
8127 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R2 = (RP) "half function"
                                                      
8128 1D E8 FE                                         _RGET2_: LDR    RP
812B 16 F0 FE                                                 STA     R2.0
812E 2E E8 FE                                                 INW     RP
8131 1D E8 FE                                                 LDR     RP
8134 16 F1 FE                                                 STA     R2.1
8137 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R2 = (RP)
                                                      
8138 38 28 81                                         _RGET2: JPS     _RGET2_
813B 2F E8 FE                                                 DEW     RP
813E 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (RP)
                                                      
813F 38 28 81                                         _RPOP2: JPS     _RGET2_
8142 2E E8 FE                                                 INW     RP
8145 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R3 = (RP) "half function"
                                                      
8146 1D E8 FE                                         _RGET3_: LDR    RP
8149 16 F4 FE                                                 STA     R3.0
814C 2E E8 FE                                                 INW     RP
814F 1D E8 FE                                                 LDR     RP
8152 16 F5 FE                                                 STA     R3.1
8155 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R3 = (RP)
                                                      
8156 38 46 81                                         _RGET3: JPS     _RGET3_
8159 2F E8 FE                                                 DEW     RP
815C 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R3 = (RP)
                                                      
815D 38 46 81                                         _RPOP3: JPS     _RGET3_
8160 2E E8 FE                                                 INW     RP
8163 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (SP) = R1 "half function"
                                                      
8164 15 ED FE                                         _PUT1_: LDA     R1.1
8167 1E E6 FE                                                 STR     SP
816A 2F E6 FE                                                 DEW     SP
816D 15 EC FE                                                 LDA     R1.0
8170 1E E6 FE                                                 STR     SP
8173 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (SP) = R1
                                                      
8174 2E E6 FE                                         _PUT1:  INW     SP
8177 38 64 81                                                 JPS     _PUT1_
817A 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       -(SP) = R1
                                                      
817B 2F E6 FE                                         _PUSH1: DEW     SP
817E 38 64 81                                                 JPS     _PUT1_
8181 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (SP) = R2 "half function"
                                                      
8182 15 F1 FE                                         _PUT2_: LDA     R2.1
8185 1E E6 FE                                                 STR     SP
8188 2F E6 FE                                                 DEW     SP
818B 15 F0 FE                                                 LDA     R2.0
818E 1E E6 FE                                                 STR     SP
8191 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (SP) = R2
                                                      
8192 2E E6 FE                                         _PUT2:  INW     SP
8195 38 82 81                                                 JPS     _PUT2_
8198 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       -(SP) = R2
                                                      
8199 2F E6 FE                                         _PUSH2: DEW     SP
819C 38 82 81                                                 JPS     _PUT2_
819F 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (SP) = R3 "half function"
                                                      
81A0 15 F5 FE                                         _PUT3_: LDA     R3.1
81A3 1E E6 FE                                                 STR     SP
81A6 2F E6 FE                                                 DEW     SP
81A9 15 F4 FE                                                 LDA     R3.0
81AC 1E E6 FE                                                 STR     SP
81AF 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (SP) = R3
                                                      
81B0 2E E6 FE                                         _PUT3:  INW     SP
81B3 38 A0 81                                                 JPS     _PUT3_
81B6 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       -(SP) = R3
                                                      
81B7 2F E6 FE                                         _PUSH3: DEW     SP
81BA 38 A0 81                                                 JPS     _PUT3_
81BD 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (RP) = R1 "half function"
                                                      
81BE 15 ED FE                                         _RPUT1_: LDA    R1.1
81C1 1E E8 FE                                                 STR     RP
81C4 2F E8 FE                                                 DEW     RP
81C7 15 EC FE                                                 LDA     R1.0
81CA 1E E8 FE                                                 STR     RP
81CD 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (RP) = R1
                                                      
81CE 2E E8 FE                                         _RPUT1: INW     RP
81D1 38 BE 81                                                 JPS     _RPUT1_
81D4 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       -(RP) = R1
                                                      
81D5 2F E8 FE                                         _RPUSH1: DEW    RP
81D8 38 BE 81                                                 JPS     _RPUT1_
81DB 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (RP) = R2 "half function"
                                                      
81DC 15 F1 FE                                         _RPUT2_: LDA    R2.1
81DF 1E E8 FE                                                 STR     RP
81E2 2F E8 FE                                                 DEW     RP
81E5 15 F0 FE                                                 LDA     R2.0
81E8 1E E8 FE                                                 STR     RP
81EB 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (RP) = R2
                                                      
81EC 2E E8 FE                                         _RPUT2: INW     RP
81EF 38 DC 81                                                 JPS     _RPUT2_
81F2 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       -(RP) = R2
                                                      
81F3 2F E8 FE                                         _RPUSH2: DEW    RP
81F6 38 DC 81                                                 JPS     _RPUT2_
81F9 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (RP) = R3 "half function"
                                                      
81FA 15 F5 FE                                         _RPUT3_: LDA    R3.1
81FD 1E E8 FE                                                 STR     RP
8200 2F E8 FE                                                 DEW     RP
8203 15 F4 FE                                                 LDA     R3.0
8206 1E E8 FE                                                 STR     RP
8209 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (RP) = R3
                                                      
820A 2E E8 FE                                         _RPUT3: INW     RP
820D 38 FA 81                                                 JPS     _RPUT3_
8210 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       -(RP) = R3
                                                      
8211 2F E8 FE                                         _RPUSH3: DEW    RP
8214 38 FA 81                                                 JPS     _RPUT3_
8217 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = R1 + R2
                                                      
8218 15 EC FE                                         _ADD16: LDA     R1.0
821B 17 F0 FE                                                 ADA     R2.0
821E 16 EC FE                                                 STA     R1.0
8221 15 ED FE                                                 LDA     R1.1
8224 1A F1 FE                                                 ACA     R2.1
8227 16 ED FE                                                 STA     R1.1
822A 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1X = R1X + R2X
                                                      
822B 15 EC FE                                         _ADD32: LDA     R1.0
822E 17 F0 FE                                                 ADA     R2.0
8231 16 EC FE                                                 STA     R1.0
8234 15 ED FE                                                 LDA     R1.1
8237 1A F1 FE                                                 ACA     R2.1
823A 16 ED FE                                                 STA     R1.1
823D 15 EE FE                                                 LDA     R1.2
8240 1A F2 FE                                                 ACA     R2.2
8243 16 EE FE                                                 STA     R1.2
8246 15 EF FE                                                 LDA     R1.3
8249 1A F3 FE                                                 ACA     R2.3
824C 16 EF FE                                                 STA     R1.3
824F 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (R1)
                                                      
8250 1D EC FE                                         _ATR1:  LDR     R1              ; Get LSB
8253 16 EE FE                                                 STA     R1.2            ; ... Store temp
8256 2E EC FE                                                 INW     R1              ; Bump
8259 1D EC FE                                                 LDR     R1              ; Get MSB
825C 16 EF FE                                                 STA     R1.3            ; ... Store temp
825F 15 EE FE                                                 LDA     R1.2            ; Get temp LSB
8262 16 EC FE                                                 STA     R1.0            ; ... Store
8265 15 EF FE                                                 LDA     R1.3            ; Get temp MSB
8268 16 ED FE                                                 STA     R1.1            ; ... Store
826B 39                                                       RTS                     ; Done
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (R3)
                                                      
826C 1D F4 FE                                         _LD16:  LDR     R3
826F 16 EC FE                                                 STA     R1.0
8272 2E F4 FE                                                 INW     R3
8275 1D F4 FE                                                 LDR     R3
8278 16 ED FE                                                 STA     R1.1
827B 2F F4 FE                                                 DEW     R3
827E 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (R3) = R1
                                                      
827F 15 EC FE                                         _ST16:  LDA     R1.0
8282 1E F4 FE                                                 STR     R3
8285 2E F4 FE                                                 INW     R3
8288 15 ED FE                                                 LDA     R1.1
828B 1E F4 FE                                                 STR     R3
828E 2F F4 FE                                                 DEW     R3
8291 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1.0 = R1.0 & R2.0
                                                      
8292 0E 08                                            _AND8:  LDI     8               ; Load bit counter
8294 16 F8 FE                                                 STA     BC              ; :
8297 15 F0 FE                                         _AND81: LDA     R2.0            ; Load second operand
829A 05                                                       LSL                     ; Shift 2b7 into C
829B 16 F0 FE                                                 STA     R2.0            ; Store shifted second operand
829E 15 EC FE                                                 LDA     R1.0            ; Load first operand
82A1 3C AA 82                                                 BCC     _AND82          ; If C is clear: Shift in a zero
                                                              ; 2b7 is set
82A4 11 00                                                    CPI     0               ; Is first operand < 0, i.e. is 1b7 set?
82A6 3F AA 82                                                 BMI     _AND82           ; N is set: 1b7 is set
                                                              ; 1b7 is clear
82A9 03                                                       CLC                     ; 1b7 is clear: Clear C
82AA 06                                               _AND82: ROL                     ; Shift C into result
82AB 16 EC FE                                                 STA     R1.0            ; Store first operand/result
82AE 27 F8 FE                                                 DEB     BC              ; All bits done?
82B1 3A 97 82                                                 BNE     _AND81          ;   NO: Do one more
82B4 39                                                       RTS                     ;   YES: All done
                                                      
                                                      ; ------------------------------
                                                      ;       R1.0 = R1.0 | R2.0
                                                      
82B5 0E 08                                            _OR8:   LDI     8               ; Load bit counter
82B7 16 F8 FE                                                 STA     BC              ; :
82BA 15 F0 FE                                         _OR810: LDA     R2.0            ; Load second operand
82BD 05                                                       LSL                     ; Shift 2b7 into C
82BE 16 F0 FE                                                 STA     R2.0            ; Store shifted second operand
82C1 15 EC FE                                                 LDA     R1.0            ; Load first operand
82C4 3D CD 82                                                 BCS     _OR820          ; If C is set, shift it into result
                                                              ; 2b7 is clear
82C7 11 00                                                    CPI     0               ; Is first operand < 0, i.e. is 1b7 set?
82C9 3F CD 82                                                 BMI     _OR820          ; N is clear: 1b7 is clear
                                                              ; 1b7 is clear
82CC 03                                                       CLC                     ; Neither bit is set: Clear C 
82CD 06                                               _OR820: ROL                     ; Shift C into result
82CE 16 EC FE                                                 STA     R1.0            ; Store first operand/result
82D1 27 F8 FE                                                 DEB     BC              ; All bits done?
82D4 3A BA 82                                                 BNE     _OR810          ;   NO: Do one more
82D7 39                                                       RTS                     ;   YES: All done
                                                      
                                                      ; ------------------------------
                                                      ;       R1.0 = R1.0 ^ R2.0
                                                      
82D8 0E 08                                            _XOR8:  LDI     8               ; Load bit counter
82DA 16 F8 FE                                                 STA     BC              ; :
82DD 15 F0 FE                                         _XOR81: LDA     R2.0            ; Get second operand
82E0 05                                                       LSL                     ; Shift b7 into C
82E1 16 F0 FE                                                 STA     R2.0            ; Store shifted second operand
82E4 15 EC FE                                                 LDA     R1.0            ; Load first operand
82E7 3D F2 82                                                 BCS     _XOR82          ; C is set, check 1b7 for zero
                                                              ; 2b7 is clear
82EA 11 00                                                    CPI     0               ; Is first operand < 0, i.e. is b7 set?
82EC 3F F8 82                                                 BMI     _XOR84          ; 1b7 is set and 2b7 is clear, shift in C which is set
82EF 14 F7 82                                                 JPA     _XOR83          ; 1b7 and 2b7 are both zero, clear C and shift in 
                                                              ; 2b7 is set, check 1b7 for zero
82F2 11 00                                            _XOR82: CPI     0
82F4 3E F8 82                                                 BPL     _XOR84          ; If 1b7 is zero, shift in C which is set
82F7 03                                               _XOR83: CLC                     ; 1b7 and 2b7 are equal, shift in a zero
82F8 06                                               _XOR84: ROL                     ; Shift whatever is in C into result
82F9 16 EC FE                                                 STA     R1.0            ; Store first operand/result
82FC 27 F8 FE                                                 DEB     BC              ; All bits done?
82FF 3A DD 82                                                 BNE     _XOR81          ;   NO: Do one more
8302 39                                                       RTS                     ;   YES: All done
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = ~R1
                                                      
8303 15 EF FE                                         _NOT32: LDA     R1.3            ; Negate MSB
8306 0B                                                       NEG                     ; Two-complement negation
8307 10 01                                                    SBI     1               ; Adjust to bitwise not
8309 16 EF FE                                                 STA     R1.3            ; Store negated MSB
830C 15 EE FE                                                 LDA     R1.2            ; Negate byte2
830F 0B                                                       NEG                     ; Two-complement negation
8310 10 01                                                    SBI     1               ; Adjust to bitwise not
8312 16 EE FE                                                 STA     R1.2            ; Store negated byte2
8315 15 ED FE                                         _NOT16: LDA     R1.1            ; Negate byte1
8318 0B                                                       NEG                     ; Two-complement negation
8319 10 01                                                    SBI     1               ; Adjust to bitwise not
831B 16 ED FE                                                 STA     R1.1            ; Store negated byte1
831E 15 EC FE                                                 LDA     R1.0            ; Negate LSB
8321 0B                                                       NEG                     ; Two-complement negation
8322 10 01                                                    SBI     1               ; Adjust to bitwise not
8324 16 EC FE                                                 STA     R1.0            ; Store negated LSB
8327 39                                                       RTS                     ; Done
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = -R1
                                                      
8328 38 15 83                                         _NEG16: JPS     _NOT16          ; Bitwise NOT R1
832B 15 EC FE                                                 LDA     R1.0            ; Add one to make it 2-complement
832E 0F 01                                                    ADI     1               ; :
8330 16 EC FE                                                 STA     R1.0            ; :
8333 15 ED FE                                                 LDA     R1.1            ; :
8336 12 00                                                    ACI     0               ; :
8338 16 ED FE                                                 STA     R1.1            ; :
833B 39                                                       RTS                     ; Done
                                                      
                                                      ; ------------------------------
                                                      ;       R1X = -R1X
                                                      
833C 38 03 83                                         _NEG32: JPS     _NOT32          ; Bitwise NOT R1X
833F 15 EC FE                                                 LDA     R1.0            ; Add one to make it 2-complement
8342 0F 01                                                    ADI     1               ; :
8344 16 EC FE                                                 STA     R1.0            ; :
8347 15 ED FE                                                 LDA     R1.1            ; :
834A 12 00                                                    ACI     0               ; :
834C 16 ED FE                                                 STA     R1.1            ; :
834F 15 EE FE                                                 LDA     R1.2            ; :
8352 12 00                                                    ACI     0               ; :
8354 16 EE FE                                                 STA     R1.2            ; :
8357 15 EF FE                                                 LDA     R1.3            ; :
835A 12 00                                                    ACI     0               ; :
835C 16 EF FE                                                 STA     R1.3            ; :
835F 39                                                       RTS                     ; Done
                                                      
                                                      ; ------------------------------
                                                      ;       R1 <-> R2
                                                      
8360 38 7B 81                                         _XCH16: JPS     _PUSH1          ; Temp = R1
8363 15 F0 FE                                                 LDA     R2.0            ; R1 = R2
8366 16 EC FE                                                 STA     R1.0            ; :
8369 15 F1 FE                                                 LDA     R2.1            ; :
836C 16 ED FE                                                 STA     R1.1            ; :
836F 38 B6 80                                                 JPS     _POP2           ; R2 = Temp
8372 39                                                       RTS                     ; Done
                                                      
                                                      ; ------------------------------
                                                      ;       _USER
                                                      ; NOTE: Index number in R2
                                                      
8373 15 EA FE                                         _USER:  LDA     UP.0            ; R3 = UP
8376 16 F4 FE                                                 STA     R3.0            ; :
8379 15 EB FE                                                 LDA     UP.1            ; :
837C 16 F5 FE                                                 STA     R3.1            ; :
837F 15 F0 FE                                                 LDA     R2.0            ; Get index number
8382 30 F4 FE                                                 ADW     R3              ; Compute addr
8385 39                                                       RTS                     ; Done
                                                      
                                                      ; ------------------------------
                                                      ;       __PICK
                                                      ; NOTE: Index number on Minimal stack
                                                      
8386 15 E6 FE                                         __PICK: LDA     SP.0            ; R3 = SP
8389 16 F4 FE                                                 STA     R3.0            ; :
838C 15 E7 FE                                                 LDA     SP.1            ; :
838F 16 F5 FE                                                 STA     R3.1            ; :
8392 34 03                                                    LDS     3               ; Get index number
8394 05                                                       LSL                     ; : word index --> byte index
8395 30 F4 FE                                                 ADW     R3              ; Compute addr
8398 38 6C 82                                                 JPS     _LD16           ; Get the n:th word from stack
839B 39                                                       RTS                     ; Done
                                                      
                                                      ; ------------------------------
                                                      ;       _ROLL
                                                      ; NOTE: Index number on Minimal stack
                                                      
839C 34 03                                            __ROLL: LDS     3               ; Get index number
839E 16 F7 FE                                                 STA     R3.3            ; Prepare loop counter
83A1 36                                                       PHS                     ; Push as parameter for _PICK
83A2 38 F4 89                                                 JPS     _PICK           ; Pick n:th element in R1
83A5 37                                                       PLS                     ; Cleanup stack
                                                              ; Set up source pointer (R2) for move
83A6 15 F4 FE                                                 LDA     R3.0            ; :
83A9 16 F0 FE                                                 STA     R2.0            ; :
83AC 15 F5 FE                                                 LDA     R3.1            ; :
83AF 16 F1 FE                                                 STA     R2.1            ; :
83B2 2F F0 FE                                                 DEW     R2              ; :
83B5 2F F0 FE                                                 DEW     R2              ; :
                                                              ; All moved already?
83B8 15 F7 FE                                         _ROL10: LDA     R3.3            ; Get loop counter
83BB 11 00                                                    CPI     0               ; Zero?
83BD 3B E2 83                                                 BEQ     _ROL99          ; YES: We are done
                                                              ; Move one word down in the stack
83C0 1D F0 FE                                                 LDR     R2              ; Move word
83C3 1E F4 FE                                                 STR     R3              ; :
83C6 2E F0 FE                                                 INW     R2              ; :
83C9 2E F4 FE                                                 INW     R3              ; :
83CC 1D F0 FE                                                 LDR     R2              ; :
83CF 1E F4 FE                                                 STR     R3              ; :
                                                              ; Bump pointers upwards in the stack
83D2 0E 03                                                    LDI     3               ; :
83D4 31 F0 FE                                                 SBW     R2              ; :
83D7 0E 03                                                    LDI     3               ; :
83D9 31 F4 FE                                                 SBW     R3              ; :
                                                              ; Decrement counter
83DC 27 F7 FE                                                 DEB     R3.3            ; Decrement loop counter
83DF 14 B8 83                                                 JPA     _ROL10          ; Go for another round
                                                              ; All done
83E2 38 74 81                                         _ROL99: JPS     _PUT1           ; Replace top of stack with R1
83E5 39                                                       RTS                     ; :
                                                      
                                                      ; ------------------------------
                                                      ;       _SWAP8
                                                      ; Swaps R1.1 <-> R1.0
                                                      ;       R2.1 <-> R2.0
                                                      
83E6 15 EC FE                                         _SWAP8: LDA     R1.0
83E9 16 F9 FE                                                 STA     TMP
83EC 15 ED FE                                                 LDA     R1.1
83EF 16 EC FE                                                 STA     R1.0
83F2 15 F9 FE                                                 LDA     TMP
83F5 16 ED FE                                                 STA     R1.1
83F8 15 F0 FE                                                 LDA     R2.0
83FB 16 F9 FE                                                 STA     TMP
83FE 15 F1 FE                                                 LDA     R2.1
8401 16 F0 FE                                                 STA     R2.0
8404 15 F9 FE                                                 LDA     TMP
8407 16 F1 FE                                                 STA     R2.1
840A 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = R1 & R2
                                                      
840B 38 92 82                                         _AND16: JPS     _AND8
840E 38 E6 83                                                 JPS     _SWAP8
8411 38 92 82                                                 JPS     _AND8
8414 38 E6 83                                                 JPS     _SWAP8
8417 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = R1 | R2
                                                      
8418 38 B5 82                                         _OR16:  JPS     _OR8
841B 38 E6 83                                                 JPS     _SWAP8
841E 38 B5 82                                                 JPS     _OR8
8421 38 E6 83                                                 JPS     _SWAP8
8424 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = R1 ^ R2
                                                      
8425 38 D8 82                                         _XOR16: JPS     _XOR8
8428 38 E6 83                                                 JPS     _SWAP8
842B 38 D8 82                                                 JPS     _XOR8
842E 38 E6 83                                                 JPS     _SWAP8
8431 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R3X = R1X * R2X
                                                      
8432 0E 10                                            _UMULT: LDI     16              ; Set bit counter
8434 16 F8 FE                                                 STA     BC
8437 0E 00                                                    LDI     0               ; R3X = 0
8439 16 F4 FE                                                 STA     R3.0            ; :
843C 16 F5 FE                                                 STA     R3.1            ; :
843F 16 F6 FE                                                 STA     R3.2            ; :
8442 16 F7 FE                                                 STA     R3.3            ; :
8445 16 EE FE                                                 STA     R1.2            ; R1H = 0
8448 16 EF FE                                                 STA     R1.3            ; :
844B 15 F1 FE                                         _UMU10: LDA     R2.1            ; R2 >> 1
844E 07                                                       LSR                     ; :
844F 16 F1 FE                                                 STA     R2.1            ; :
8452 15 F0 FE                                                 LDA     R2.0            ; :
8455 08                                                       ROR                     ; :
8456 16 F0 FE                                                 STA     R2.0            ; :
8459 3C 80 84                                                 BCC     _UMU20          ; No carry, no add
845C 15 F4 FE                                                 LDA     R3.0            ; R3X = R3X + R1X
845F 17 EC FE                                                 ADA     R1.0            ; :
8462 16 F4 FE                                                 STA     R3.0            ; :
8465 15 F5 FE                                                 LDA     R3.1            ; :
8468 1A ED FE                                                 ACA     R1.1            ; :
846B 16 F5 FE                                                 STA     R3.1            ; :
846E 15 F6 FE                                                 LDA     R3.2            ; :
8471 1A EE FE                                                 ACA     R1.2            ; :
8474 16 F6 FE                                                 STA     R3.2            ; :
8477 15 F7 FE                                                 LDA     R3.3            ; :
847A 1A EF FE                                                 ACA     R1.3            ; :
847D 16 F7 FE                                                 STA     R3.3            ; :
8480 15 EC FE                                         _UMU20: LDA     R1.0            ; R1X << 1
8483 05                                                       LSL                     ; :
8484 16 EC FE                                                 STA     R1.0            ; :
8487 15 ED FE                                                 LDA     R1.1            ; :
848A 06                                                       ROL                     ; :
848B 16 ED FE                                                 STA     R1.1            ; :
848E 15 EE FE                                                 LDA     R1.2            ; :
8491 06                                                       ROL                     ; :
8492 16 EE FE                                                 STA     R1.2            ; :
8495 15 EF FE                                                 LDA     R1.3            ; :
8498 06                                                       ROL                     ; :
8499 16 EF FE                                                 STA     R1.3            ; :
849C 27 F8 FE                                                 DEB     BC              ; Decrement bit counter
849F 3A 4B 84                                                 BNE     _UMU10          ; Not zero, more bits to go
84A2 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1X / R2L
                                                      ;       R1H: Quotient
                                                      ;       R1L: Remainder
                                                      
84A3 0E 10                                            _UDIV:  LDI     16              ; Set bit counter
84A5 16 F8 FE                                                 STA     BC              ; :
                                                              
84A8 15 EC FE                                         _UDI10: LDA     R1.0            ; R1X = R1X << 1
84AB 05                                                       LSL                     ; :
84AC 16 EC FE                                                 STA     R1.0            ; :
84AF 15 ED FE                                                 LDA     R1.1            ; :
84B2 06                                                       ROL                     ; :
84B3 16 ED FE                                                 STA     R1.1            ; :
84B6 15 EE FE                                                 LDA     R1.2            ; :
84B9 06                                                       ROL                     ; :
84BA 16 EE FE                                                 STA     R1.2            ; :
84BD 15 EF FE                                                 LDA     R1.3            ; :
84C0 06                                                       ROL                     ; :
84C1 16 EF FE                                                 STA     R1.3            ; :
                                                      
84C4 15 EE FE                                                 LDA     R1.2            ; R3H = R1H
84C7 16 F6 FE                                                 STA     R3.2            ; :
84CA 15 EF FE                                                 LDA     R1.3            ; :
84CD 16 F7 FE                                                 STA     R3.3            ; :
                                                              
84D0 15 F6 FE                                                 LDA     R3.2            ; R3H = R3H - R2L
84D3 18 F0 FE                                                 SBA     R2.0            ; :
84D6 16 F6 FE                                                 STA     R3.2            ; :
84D9 15 F7 FE                                                 LDA     R3.3            ; :
84DC 1B F1 FE                                                 SCA     R2.1            ; :
84DF 16 F7 FE                                                 STA     R3.3            ; :
                                                              
84E2 3C F4 84                                                 BCC     _UDI20
                                                              
84E5 15 F6 FE                                                 LDA     R3.2            ; R1H = R3H
84E8 16 EE FE                                                 STA     R1.2            ; :
84EB 15 F7 FE                                                 LDA     R3.3            ; :
84EE 16 EF FE                                                 STA     R1.3            ; :
                                                              
84F1 2E EC FE                                                 INW     R1.0            ; R1L++
                                                              
84F4 27 F8 FE                                         _UDI20: DEB     BC              ; All bits done?
84F7 3A A8 84                                                 BNE     _UDI10          ; NO: Loop again
                                                              
84FA 39                                                       RTS
                                                      ; INCLUDE         debug.asm
                                                      
                                                      ; INCLUDE         inner.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; INNER INTERPRETER
                                                      
84FB 2F E6 FE                                         IPUSH:  DEW     SP              ; -(SP) = R1H
84FE 15 EF FE                                                 LDA     R1.3
8501 1E E6 FE                                                 STR     SP
8504 2F E6 FE                                                 DEW     SP
8507 15 EE FE                                                 LDA     R1.2
850A 1E E6 FE                                                 STR     SP
850D 2F E6 FE                                         PUSH:   DEW     SP              ; -(SP) = R1L
8510 15 ED FE                                                 LDA     R1.1
8513 1E E6 FE                                                 STR     SP
8516 2F E6 FE                                                 DEW     SP
8519 15 EC FE                                                 LDA     R1.0
851C 1E E6 FE                                                 STR     SP
851F 1D E2 FE                                         NEXT:   LDR     IP              ; WA = (IP)+
8522 16 E4 FE                                                 STA     WA.0
8525 2E E2 FE                                                 INW     IP
8528 1D E2 FE                                                 LDR     IP
852B 16 E5 FE                                                 STA     WA.1
852E 2E E2 FE                                                 INW     IP
8531 1D E4 FE                                         NEXT10: LDR     WA              ; BC/TMP = (WA)+
8534 16 F8 FE                                                 STA     BC
8537 2E E4 FE                                                 INW     WA
853A 1D E4 FE                                                 LDR     WA
853D 16 F9 FE                                                 STA     TMP
8540 2E E4 FE                                                 INW     WA
8543 26 FB FE                                                 INB     CLK0            ; Increment the fake clock tick counter
8546 3A 58 85                                                 BNE     NEXT20          ; :
8549 26 FC FE                                                 INB     CLK1            ; :
854C 3A 58 85                                                 BNE     NEXT20          ; :
854F 26 FD FE                                                 INB     CLK2            ; :
8552 3A 58 85                                                 BNE     NEXT20          ; :
8555 26 FE FE                                                 INB     CLK3            ; :
8558 1C F8 FE                                         NEXT20: JPR     BC              ; jump @(BC/TMP)
                                                      
                                                      ; ------------------------------
                                                      ;       Push TRUE and FALSE
                                                      
855B 2C EC FE                                         PUSHT:  CLW     R1              ; A zero
855E 2F EC FE                                                 DEW     R1              ; Make it into a -1 i.e. TRUE flag
8561 14 0D 85                                                 JPA     PUSH
                                                      
8564 2C EC FE                                         PUSHF:  CLW     R1              ; A zero
8567 14 0D 85                                                 JPA     PUSH
                                                      
                                                      ; ------------------------------
                                                      ;       Push R1X, MSB as TOS
                                                      
856A 2F E6 FE                                         DPUSH:  DEW     SP              ; -(SP) = R1X
856D 15 ED FE                                                 LDA     R1.1
8570 1E E6 FE                                                 STR     SP
8573 2F E6 FE                                                 DEW     SP
8576 15 EC FE                                                 LDA     R1.0
8579 1E E6 FE                                                 STR     SP
857C 2F E6 FE                                                 DEW     SP
857F 15 EF FE                                                 LDA     R1.3
8582 1E E6 FE                                                 STR     SP
8585 2F E6 FE                                                 DEW     SP
8588 15 EE FE                                                 LDA     R1.2
858B 1E E6 FE                                                 STR     SP
858E 14 1F 85                                                 JPA     NEXT
                                                      
                                                      ; INCLUDE         primaries.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; FORTH PRIMARIES
                                                      ;
                                                      
8591 83 4C 49 D4                                      HLIT:   DB      ^3 "LI" ^'T'                            ; ***** LIT
8595 00 00                                                    DW      0
8597 99 85                                            LIT:    DW      LIT0
8599 38 2A 80                                         LIT0:   JPS     _LIT            ; R1 = (IP)+
859C 14 0D 85                                                 JPA     PUSH            ; -(SP) = R1; NEXT
                                                      
859F 87 45 58 45 43 55 54 C5                          HEXEC:  DB      ^7 "EXECUT" ^'E'                        ; ***** EXECUTE
85A7 91 85                                                    DW      HLIT
85A9 AB 85                                            EXEC:   DW      EXEC0
85AB 1D E6 FE                                         EXEC0:  LDR     SP              ; WA = (SP)+
85AE 16 E4 FE                                                 STA     WA.0
85B1 2E E6 FE                                                 INW     SP
85B4 1D E6 FE                                                 LDR     SP
85B7 16 E5 FE                                                 STA     WA.1
85BA 2E E6 FE                                                 INW     SP
85BD 14 31 85                                                 JPA     NEXT10          ; jump @(WA)+
                                                      
85C0 86 42 52 41 4E 43 C8                             HBRAN:  DB      ^6 "BRANC" ^'H'                         ; ***** BRANCH
85C7 9F 85                                                    DW      HEXEC
85C9 CB 85                                            BRAN:   DW      BRAN0
85CB 38 3D 80                                         BRAN0:  JPS     _BRAN           ; IP = IP + (IP)
85CE 14 1F 85                                                 JPA     NEXT
                                                      
85D1 87 30 42 52 41 4E 43 C8                          HZBRAN: DB      ^7 "0BRANC" ^'H'                        ; ***** 0BRANCH
85D9 C0 85                                                    DW      HBRAN
85DB DD 85                                            ZBRAN:  DW      ZBRAN0
85DD 1D E6 FE                                         ZBRAN0: LDR     SP
85E0 11 00                                                    CPI     0               ; Low byte non-zero?
85E2 3A F6 85                                                 BNE     ZBRA10          ; YES: Do not branch
85E5 2E E6 FE                                                 INW     SP
85E8 1D E6 FE                                                 LDR     SP
85EB 11 00                                                    CPI     0               ; High byte non-zero?
85ED 3A F9 85                                                 BNE     ZBRA20          ; YES: Do not branch
85F0 2E E6 FE                                                 INW     SP
85F3 14 CB 85                                                 JPA     BRAN0           ; IP = IP + (IP); NEXT
85F6 2E E6 FE                                         ZBRA10: INW     SP
85F9 2E E6 FE                                         ZBRA20: INW     SP
85FC 2E E2 FE                                                 INW     IP              ; Just skip jump offset
85FF 2E E2 FE                                                 INW     IP
8602 14 1F 85                                                 JPA     NEXT
                                                      
8605 87 28 2B 4C 4F 4F 50 A9                          HXPLOO: DB      ^7 "(+LOOP" ^')'                        ; ***** (+LOOP)
860D D1 85                                                    DW      HZBRAN
860F 11 86                                            XPLOO:  DW      XPLOO0
8611 38 AF 80                                         XPLOO0: JPS     _GET2           ; R2 = (SP) [only copying increment]
8614 38 21 81                                                 JPS     _RPOP1          ; R1 = (RP)+
8617 38 18 82                                                 JPS     _ADD16          ; R1 = counter'
861A 38 38 81                                                 JPS     _RGET2          ; R2 = limit
861D 38 D5 81                                                 JPS     _RPUSH1         ; -(RP) = R1'
8620 38 F9 80                                                 JPS     _POP3           ; R3 = (SP)+ [now popping incr]
8623 15 F5 FE                                                 LDA     R3.1            ; Is increment negative?
8626 11 00                                                    CPI     0               ; :
8628 3E 2E 86                                                 BPL     XPLO10
                                                              ; Handle negative increment
862B 38 60 83                                                 JPS     _XCH16          ; R1 <-> R2
                                                              ; Compare counter to limit
862E 15 ED FE                                         XPLO10: LDA     R1.1            ; Compare MSB
8631 19 F1 FE                                                 CPA     R2.1            ; :
8634 3F CB 85                                                 BMI     BRAN0           ; R2 is greater, continue looping
8637 3B 3D 86                                                 BEQ     XPLO20          ; MSBs are equal, check LSBs
863A 14 46 86                                                 JPA     XPLO30          ; R1 is greater, stop looping
                                                              ; MSBs are equal
863D 15 EC FE                                         XPLO20: LDA     R1.0            ; Compare LSB
8640 19 F0 FE                                                 CPA     R2.0            
8643 3F CB 85                                                 BMI     BRAN0           ; R2 is greater, continue looping
                                                              ; Limit reached, cleanup rstack and stop looping
8646 0E 04                                            XPLO30: LDI     4               ; Drop loop counter ...
8648 30 E8 FE                                                 ADW     RP              ; ... and loop limit
864B 0E 02                                                    LDI     2               ; Skip branch offset
864D 30 E2 FE                                                 ADW     IP              ; :
8650 14 1F 85                                                 JPA     NEXT
                                                      
8653 86 28 4C 4F 4F 50 A9                             HXLOOP: DB      ^6 "(LOOP" ^')'                         ; ***** (LOOP)
865A 05 86                                                    DW      HXPLOO
865C 5E 86                                            XLOOP:  DW      XLOOP0
865E 2C EC FE                                         XLOOP0: CLW     R1              ; Push a one
8661 2E EC FE                                                 INW     R1              ; :
8664 38 7B 81                                                 JPS     _PUSH1          ; :
8667 14 11 86                                                 JPA     XPLOO0          ; (+LOOP)
                                                      
866A 84 28 44 4F A9                                   HXDO:   DB      ^4 "(DO" ^')'                           ; ***** (DO)
866F 53 86                                                    DW      HXLOOP
8671 73 86                                            XDO:    DW      XDO0
8673 38 03 81                                         XDO0:   JPS     _POP21          ; Loop counter, limit
8676 38 D5 81                                                 JPS     _RPUSH1         ; Push limit onto rstack
8679 38 F3 81                                                 JPS     _RPUSH2         ; Push loop counter onto rstack
867C 14 1F 85                                                 JPA     NEXT
                                                      
867F 81 C9                                            HI:     DB      ^1 ^'I'                                 ; ***** I
8681 6A 86                                                    DW      HXDO
8683 85 86                                            I:      DW      I0
8685 38 1A 81                                         I0:     JPS     _RGET1          ; Get loop counter
8688 14 0D 85                                                 JPA     PUSH            ; Push it onto dstack
                                                      
868B 85 44 49 47 49 D4                                HDIGIT: DB      ^5 "DIGI" ^'T'                          ; ***** DIGIT
8691 7F 86                                                    DW      HI
8693 95 86                                            DIGIT:  DW      DIGIT0
8695 38 03 81                                         DIGIT0: JPS     _POP21          ; R2 = base, R1 = char
8698 15 EC FE                                                 LDA     R1.0            ; Get character into A
869B 11 41                                                    CPI     'A'             ; Greater or equal to 'A'?
869D 3F AA 86                                                 BMI     DIGI10          ; NO: Then it has to be '0' - '9'
86A0 11 5B                                                    CPI     '['             ; Less than '[' (i.e. 'A' - 'Z')?
86A2 3E C6 86                                                 BPL     DIGI88          ; NO: Not a digit
86A5 10 37                                                    SBI     55              ; A becomes 10
86A7 14 B4 86                                                 JPA     DIGI20          ; Go check against base
                                                              ; '0' - '9' case
86AA 10 30                                            DIGI10: SBI     '0'             ; Assume '0' - '9'
86AC 3F C6 86                                                 BMI     DIGI88          ; Oops! Negative, not a digit
86AF 11 0A                                                    CPI     10              ; Greater than 9?
86B1 3E C6 86                                                 BPL     DIGI88          ; YES: Not a digit
                                                              ; Check result against base
86B4 19 F0 FE                                         DIGI20: CPA     R2.0            ; Less than base?
86B7 3F BD 86                                                 BMI     DIGI77          ; YES: Conversion done
86BA 14 C6 86                                                 JPA     DIGI88          ; NO: Not a digit
                                                              ; Conversion successful
86BD 16 EC FE                                         DIGI77: STA     R1.0            ; Store binary value
86C0 38 7B 81                                                 JPS     _PUSH1          ; Push the value
86C3 14 5B 85                                                 JPA     PUSHT           ; Push TRUE; NEXT
                                                              ; Not a digit
86C6 14 64 85                                         DIGI88: JPA     PUSHF           ; Push FALSE; NEXT
                                                      
86C9 86 28 46 49 4E 44 A9                             HPFIND: DB      ^6 "(FIND" ^')'                         ; ***** (FIND)
86D0 8B 86                                                    DW      HDIGIT
86D2 D4 86                                            PFIND:  DW      PFIND0
86D4 38 73 80                                         PFIND0: JPS     _POP1           ; NFA
86D7 38 F9 80                                                 JPS     _POP3           ; String address
86DA 15 F4 FE                                         PFIN10: LDA     R3.0            ; R2 = R3 (string address)
86DD 16 F0 FE                                                 STA     R2.0            ; :
86E0 15 F5 FE                                                 LDA     R3.1            ; :
86E3 16 F1 FE                                                 STA     R2.1            ; :
                                                              ; Fast comparison of length bytes
86E6 1D EC FE                                                 LDR     R1              ; Get lByte
86E9 16 EE FE                                                 STA     R1.2            ; ... Store as potential result
86EC 05                                                       LSL                     ; lByte &= 0x3F
86ED 05                                                       LSL                     ; :
86EE 07                                                       LSR                     ; :
86EF 07                                                       LSR                     ; :
86F0 16 F2 FE                                                 STA     R2.2            ; R2.2 is counter for string match
86F3 21 F0 FE                                                 CPR     R2              ; lByte == string length?
86F6 3A 15 87                                                 BNE     PFIN25          ; NO: Move over to next header
                                                              ; Length bytes match, check names
86F9 2E EC FE                                         PFIN20: INW     R1              ; Bump pointers
86FC 2E F0 FE                                                 INW     R2              ; :
86FF 1D EC FE                                                 LDR     R1              ; Get char from dictionary
8702 05                                                       LSL                     ; char &= 0x7F
8703 07                                                       LSR                     ; :
8704 21 F0 FE                                                 CPR     R2              ; Is it a match with search string?
8707 3A 21 87                                                 BNE     PFIN30          ; NO: Look at next header in dictionary
870A 27 F2 FE                                                 DEB     R2.2            ; YES: Decrement character counter
870D 11 00                                                    CPI     0               ; At end of string?
870F 3B 42 87                                                 BEQ     PFIN77          ; YES: This is the word we are looking for
8712 14 F9 86                                                 JPA     PFIN20          ; Match so far, try next char
                                                              ; Step to next header in dictionary
8715 05                                               PFIN25: LSL                     ; Eliminate potential smudge bit
8716 05                                                       LSL                     ; A = A & 0x1F
8717 05                                                       LSL                     ; lByte consists of [^ISnnnnn]
8718 07                                                       LSR                     ; :
8719 07                                                       LSR                     ; :
871A 07                                                       LSR                     ; :
871B 16 F2 FE                                                 STA     R2.2            ; : also update char counter
871E 2E EC FE                                                 INW     R1              ; Bump NFA pointer to actual characters
8721 2E EC FE                                         PFIN30: INW     R1              ; Bump NFA pointer
8724 27 F2 FE                                                 DEB     R2.2            ; Decrement character counter
8727 11 00                                                    CPI     0               ; End of name field?
8729 3A 21 87                                                 BNE     PFIN30          ; NO: Step to next char
872C 38 50 82                                                 JPS     _ATR1           ; YES: R1 = (R1)
872F 15 ED FE                                                 LDA     R1.1            ; At end of dictionary?
8732 11 00                                                    CPI     0               ; :
8734 3A DA 86                                                 BNE     PFIN10          ; NO: Try this word for match
8737 15 EC FE                                                 LDA     R1.0            ; :
873A 11 00                                                    CPI     0               ; :
873C 3A DA 86                                                 BNE     PFIN10          ; NO: Try this word for match
                                                              ; Word not found, return a single FALSE
873F 14 64 85                                         PFIN88: JPA     PUSHF           ; Done
                                                              ; Word found, return PFA, lByte, TRUE
8742 0E 05                                            PFIN77: LDI     5               ; Bump ptr to PFA
8744 30 EC FE                                                 ADW     R1              ; :
8747 38 7B 81                                                 JPS     _PUSH1          ; Push PFA
874A 15 EE FE                                                 LDA     R1.2            ; Get stored length byte
874D 16 EC FE                                                 STA     R1.0            ; :
8750 24 ED FE                                                 CLB     R1.1            ; Clear MSB
8753 38 7B 81                                                 JPS     _PUSH1          ; Push length byte
8756 14 5B 85                                                 JPA     PUSHT           ; Done
                                                      
8759 87 45 4E 43 4C 4F 53 C5                          HENCL:  DB      ^7 "ENCLOS" ^'E'                        ; ***** ENCLOSE
8761 C9 86                                                    DW      HPFIND
8763 65 87                                            ENCL:   DW      ENCL0
8765 38 F9 80                                         ENCL0:  JPS     _POP3           ; Get delimiter char
8768 38 6C 80                                                 JPS     _GET1           ; Get addr of input
876B 2C F0 FE                                                 CLW     R2              ; Initialize char index
                                                              ; Scan preceeding delimiters
876E 1D EC FE                                         ENCL10: LDR     R1              ; Get char from input
8771 11 00                                                    CPI     0               ; Is it <NUL>?
8773 3B AB 87                                                 BEQ     ENCL50          ; YES: <NUL> before first non-delimiter
8776 19 F4 FE                                                 CPA     R3.0            ; Is it a delimiter?
8779 3A 85 87                                                 BNE     ENCL20          ; NO: We have the start of next token
877C 2E EC FE                                                 INW     R1              ; Bump to next char ...
877F 2E F0 FE                                                 INW     R2              ; ... also increase index
8782 14 6E 87                                                 JPA     ENCL10          ; Go back to look at next char
                                                              ; Start of token
8785 38 99 81                                         ENCL20: JPS     _PUSH2          ; Push result n1 (first char of token)
8788 1D EC FE                                         ENCL30: LDR     R1              ; Get char from input
878B 11 00                                                    CPI     0               ; Is it <NUL>?
878D 3B B1 87                                                 BEQ     ENCL60          ; YES: <NUL> found
8790 19 F4 FE                                                 CPA     R3.0            ; Is it a delimiter?
8793 3B 9F 87                                                 BEQ     ENCL40          ; YES: We have the end of the token
8796 2E EC FE                                                 INW     R1              ; Bump to next char ...
8799 2E F0 FE                                                 INW     R2              ; ... also increase index
879C 14 88 87                                                 JPA     ENCL30          ; Go back to look at next char
                                                              ; End of token
879F 38 99 81                                         ENCL40: JPS     _PUSH2          ; Push result n2 (ending delimiter)
87A2 2E F0 FE                                                 INW     R2              ; Also push n3 ...
87A5 38 99 81                                                 JPS     _PUSH2          ; : ... (index to first non-scanned char)
87A8 14 1F 85                                                 JPA     NEXT            ; Done
                                                              ; <NUL> word found
87AB 38 99 81                                         ENCL50: JPS     _PUSH2          ; Push i (index to <NUL>)
87AE 2E F0 FE                                                 INW     R2              ; Push i + 1 (a null is one character long)
                                                              ; Token ends with a <NUL>
87B1 38 99 81                                         ENCL60: JPS     _PUSH2          ; :
87B4 38 99 81                                                 JPS     _PUSH2          ; :
87B7 14 1F 85                                                 JPA     NEXT            ; Done
                                                      
                                                      ; NOTE: EMIT, KEY, ?TERMINAL and CR moved to "extras" as they have been
                                                      ;       implemented as vectored functions in Minimal-FORTH
                                                      
87BA 85 43 4D 4F 56 C5                                HCMOVE: DB      ^5 "CMOV" ^'E'                          ; ***** CMOVE
87C0 59 87                                                    DW      HENCL
87C2 C4 87                                            CMOVE:  DW      CMOVE0
87C4 38 00 81                                         CMOVE0: JPS     _POP321         ; R3 = count, R2 = dst, R1 = src
87C7 1D EC FE                                         CMOV10: LDR     R1              ; Get byte from source
87CA 1E F0 FE                                                 STR     R2              ; Store to destination
87CD 2E EC FE                                                 INW     R1              ; Bump source pointer
87D0 2E F0 FE                                                 INW     R2              ; Bump destination pointer
87D3 2F F4 FE                                                 DEW     R3              ; Decrement count
87D6 15 F4 FE                                                 LDA     R3.0            ; Low byte zero?
87D9 11 00                                                    CPI     0               ; :
87DB 3A C7 87                                                 BNE     CMOV10          ; NO: One more byte
87DE 15 F5 FE                                                 LDA     R3.1            ; High byte zero?
87E1 11 00                                                    CPI     0               ; :
87E3 3A C7 87                                                 BNE     CMOV10          ; NO: One more byte
87E6 14 1F 85                                                 JPA     NEXT            ; YES: Count zero. Done.
                                                      
87E9 82 55 AA                                         HUSTAR: DB      ^2 "U" ^'*'                             ; ***** U*
87EC BA 87                                                    DW      HCMOVE
87EE F0 87                                            USTAR:  DW      USTAR0
87F0 38 03 81                                         USTAR0: JPS     _POP21          ; R2 = oper2, R1 = oper1
87F3 38 32 84                                                 JPS     _UMULT          ; u32 = u16 * u16
87F6 2F E6 FE                                                 DEW     SP              ; -(SP) = R3X
87F9 15 F5 FE                                                 LDA     R3.1            ; :
87FC 1E E6 FE                                                 STR     SP              ; :
87FF 2F E6 FE                                                 DEW     SP              ; :
8802 15 F4 FE                                                 LDA     R3.0            ; :
8805 1E E6 FE                                                 STR     SP              ; :
8808 2F E6 FE                                                 DEW     SP              ; :
880B 15 F7 FE                                                 LDA     R3.3            ; :
880E 1E E6 FE                                                 STR     SP              ; :
8811 2F E6 FE                                                 DEW     SP              ; :
8814 15 F6 FE                                                 LDA     R3.2            ; :
8817 1E E6 FE                                                 STR     SP              ; :
881A 14 1F 85                                                 JPA     NEXT            ; Done
                                                      
881D 82 55 AF                                         HUSLAS: DB      ^2 "U" ^'/'                             ; ***** U/
8820 E9 87                                                    DW      HUSTAR
8822 24 88                                            USLAS:  DW      USLAS0
8824 38 03 81                                         USLAS0: JPS     _POP21          ; R2 = divisor, R1 = dividend-hi
8827 15 EC FE                                                 LDA     R1.0            ; Move high part to R1.2 and R1.3
882A 16 EE FE                                                 STA     R1.2            ; :
882D 15 ED FE                                                 LDA     R1.1            ; :
8830 16 EF FE                                                 STA     R1.3            ; :
8833 38 73 80                                                 JPS     _POP1           ; dividend, low 16b
8836 38 A3 84                                                 JPS     _UDIV           ; u32 / u16 --> quot_u16, rem_u16
8839 14 FB 84                                                 JPA     IPUSH           ; Push R1H; Push R1L; NEXT
                                                      
883C 83 41 4E C4                                      HAND:   DB      ^3 "AN" ^'D'                            ; ***** AND
8840 1D 88                                                    DW      HUSLAS
8842 44 88                                            AND:    DW      AND0
8844 38 03 81                                         AND0:   JPS     _POP21          ; R2 = oper2, R1 = oper1
8847 38 0B 84                                                 JPS     _AND16          ; R1 = R1 & R2
884A 14 0D 85                                                 JPA     PUSH            ; Done
                                                      
884D 82 4F D2                                         HOR:    DB      ^2 "O" ^'R'                             ; ***** OR
8850 3C 88                                                    DW      HAND
8852 54 88                                            OR:     DW      OR0
8854 38 03 81                                         OR0:    JPS     _POP21          ; R2 = oper2, R1 = oper1
8857 38 18 84                                                 JPS     _OR16           ; R1 = R1 | R2
885A 14 0D 85                                                 JPA     PUSH            ; Done
                                                      
885D 83 58 4F D2                                      HXOR:   DB      ^3 "XO" ^'R'                            ; ***** XOR
8861 4D 88                                                    DW      HOR
8863 65 88                                            XOR:    DW      XOR0
8865 38 03 81                                         XOR0:   JPS     _POP21          ; R2 = oper2, R1 = oper1
8868 38 25 84                                                 JPS     _XOR16          ; R1 = R1 ^ R2
886B 14 0D 85                                                 JPA     PUSH            ; Done
                                                      
886E 83 4E 4F D4                                      HNOT:   DB      ^3 "NO" ^'T'                            ; ***** NOT
8872 5D 88                                                    DW      HXOR
8874 53 89                                            NOT:    DW      ZEQU
                                                      
8876 83 53 50 C0                                      HSPAT:  DB      ^3 "SP" ^'@'                            ; ***** SP@
887A 6E 88                                                    DW      HNOT
887C 7E 88                                            SPAT:   DW      SPAT0
887E 15 E6 FE                                         SPAT0:  LDA     SP.0            ; Get stack pointer
8881 16 EC FE                                                 STA     R1.0            ; : into R1
8884 15 E7 FE                                                 LDA     SP.1            ; :
8887 16 ED FE                                                 STA     R1.1            ; :
888A 14 0D 85                                                 JPA     PUSH            ; Push R1; NEXT
                                                      
888D 83 53 50 A1                                      HSPSTO: DB      ^3 "SP" ^'!'                            ; ***** SP!
8891 76 88                                                    DW      HSPAT
8893 95 88                                            SPSTO:  DW      SPSTO0
8895 0E 12                                            SPSTO0: LDI     18              ; Index of SP0
8897 16 F0 FE                                                 STA     R2.0            ; : in boot table
889A 38 C4 8C                                                 JPS     _PORIG          ; R3 = &bootTable[R2]
889D 38 6C 82                                                 JPS     _LD16           ; R1 = XSP
88A0 15 EC FE                                                 LDA     R1.0            ; SP = R1
88A3 16 E6 FE                                                 STA     SP.0            ; :
88A6 15 ED FE                                                 LDA     R1.1            ; :
88A9 16 E7 FE                                                 STA     SP.1            ; :
88AC 14 1F 85                                                 JPA     NEXT            ; Done
                                                      
88AF 83 52 50 A1                                      HRPSTO: DB      ^3 "RP" ^'!'                            ; ***** RP!
88B3 8D 88                                                    DW      HSPSTO
88B5 B7 88                                            RPSTO:  DW      RPSTO0
88B7 0E 14                                            RPSTO0: LDI     20              ; Index of SP0
88B9 16 F0 FE                                                 STA     R2.0            ; : in boot table
88BC 38 C4 8C                                                 JPS     _PORIG          ; R3 = &bootTable[R2]
88BF 38 6C 82                                                 JPS     _LD16           ; R1 = XRP
88C2 15 EC FE                                                 LDA     R1.0            ; SP = R1
88C5 16 E8 FE                                                 STA     RP.0            ; :
88C8 15 ED FE                                                 LDA     R1.1            ; :
88CB 16 E9 FE                                                 STA     RP.1            ; :
88CE 14 1F 85                                                 JPA     NEXT            ; Done
                                                      
88D1 83 55 50 A1                                      HUPSTO: DB      ^3 "UP" ^'!'                            ; ***** UP!
88D5 AF 88                                                    DW      HRPSTO
88D7 D9 88                                            UPSTO:  DW      UPSTO0
88D9 0E 10                                            UPSTO0: LDI     16              ; Index of UP0
88DB 16 F0 FE                                                 STA     R2.0            ; : in boot table
88DE 38 C4 8C                                                 JPS     _PORIG          ; R3 = &bootTable[R2]
88E1 38 6C 82                                                 JPS     _LD16           ; R1 = XUP
88E4 15 EC FE                                                 LDA     R1.0            ; UP = R1
88E7 16 EA FE                                                 STA     UP.0            ; :
88EA 15 ED FE                                                 LDA     R1.1            ; :
88ED 16 EB FE                                                 STA     UP.1            ; :
88F0 14 1F 85                                                 JPA     NEXT            ; Done
                                                      
88F3 82 3B D3                                         HSEMIS: DB      ^2 ";" ^'S'                             ; ***** ;S
88F6 AF 88                                                    DW      HRPSTO
88F8 FA 88                                            SEMIS:  DW      SEMIS0
88FA 1D E8 FE                                         SEMIS0: LDR     RP              ; IP = (RP)+
88FD 16 E2 FE                                                 STA     IP.0            ; :
8900 2E E8 FE                                                 INW     RP              ; :
8903 1D E8 FE                                                 LDR     RP              ; :
8906 16 E3 FE                                                 STA     IP.1            ; :
8909 2E E8 FE                                                 INW     RP              ; :
890C 14 1F 85                                                 JPA     NEXT            ; Done
                                                      
890F 85 4C 45 41 56 C5                                HLEAVE: DB      ^5 "LEAV" ^'E'                          ; ***** LEAVE
8915 F3 88                                                    DW      HSEMIS
8917 19 89                                            LEAVE:  DW      LEAVE0
8919 38 21 81                                         LEAVE0: JPS     _RPOP1          ; 2(RP) = (RP)
891C 38 CE 81                                                 JPS     _RPUT1          ; :
891F 38 D5 81                                                 JPS     _RPUSH1         ; :
8922 14 1F 85                                                 JPA     NEXT
                                                      
8925 82 3E D2                                         HTOR:   DB      ^2 ">" ^'R'                             ; ***** >R
8928 0F 89                                                    DW      HLEAVE
892A 2C 89                                            TOR:    DW      TOR0
892C 38 73 80                                         TOR0:   JPS     _POP1           ; -(RP) = (SP)+
892F 38 D5 81                                                 JPS     _RPUSH1         ; :
8932 14 1F 85                                                 JPA     NEXT
                                                      
8935 82 52 BE                                         HFROMR: DB      ^2 "R" ^'>'                             ; ***** R>
8938 25 89                                                    DW      HTOR
893A 3C 89                                            FROMR:  DW      FROMR0
893C 38 21 81                                         FROMR0: JPS     _RPOP1          ; -(SP) = (RP)+
893F 14 0D 85                                                 JPA     PUSH            ; :
                                                      
8942 81 D2                                            HR:     DB      ^1 ^'R'                                 ; ***** R
8944 35 89                                                    DW      HFROMR
8946 48 89                                            R:      DW      R0
8948 38 1A 81                                         R0:     JPS     _RGET1          ; -(SP) = (RP)
894B 14 0D 85                                                 JPA     PUSH            ; :
                                                      
894E 82 30 BD                                         HZEQU:  DB      ^2 "0" ^'='                             ; ***** 0=
8951 42 89                                                    DW      HR
8953 55 89                                            ZEQU:   DW      ZEQU0
8955 38 73 80                                         ZEQU0:  JPS     _POP1
8958 38 5E 89                                                 JPS     _ZEQU
895B 14 0D 85                                                 JPA     PUSH
                                                              ;
895E 15 EC FE                                         _ZEQU:  LDA     R1.0            ; Get LSB
8961 11 00                                                    CPI     0               ; Is it zero?
8963 3A 75 89                                                 BNE     _ZEQ10          ; NO: Return false flag
8966 15 ED FE                                                 LDA     R1.1            ; Get MSB
8969 11 00                                                    CPI     0               ; Is it zero?
896B 3A 75 89                                                 BNE     _ZEQ10          ; NO: Return false flag
                                                              ; Zero case
896E 2C EC FE                                                 CLW     R1              ; True flag
8971 2F EC FE                                                 DEW     R1              ; :
8974 39                                                       RTS                     ; Done
                                                              ; Non-zero case
8975 2C EC FE                                         _ZEQ10: CLW     R1              ; False flag
8978 39                                                       RTS                     ; Done
                                                      
8979 82 30 BC                                         HZLESS: DB      ^2 "0" ^'<'                             ; ***** 0<
897C 4E 89                                                    DW      HZEQU
897E 80 89                                            ZLESS:  DW      ZLESS0
8980 38 73 80                                         ZLESS0: JPS     _POP1
8983 38 89 89                                                 JPS     _ZLESS
8986 14 0D 85                                                 JPA     PUSH
                                                              ;
8989 15 ED FE                                         _ZLESS: LDA     R1.1            ; Get MSB
898C 11 00                                                    CPI     0               ; Is it negative?
898E 3F 95 89                                                 BMI     _ZLE10          ; YES: Return true flag
                                                              ; Zero or positive case
8991 2C EC FE                                                 CLW     R1              ; NO: Return false flag
8994 39                                                       RTS                     ; Done
                                                              ; Negative case
8995 2C EC FE                                         _ZLE10: CLW     R1              ; True flag
8998 2F EC FE                                                 DEW     R1              ; :
899B 39                                                       RTS                     ; Done
                                                      
899C 81 AB                                            HPLUS:  DB      ^1 ^'+'                                 ; ***** +
899E 79 89                                                    DW      HZLESS
89A0 A2 89                                            PLUS:   DW      PLUS0
89A2 38 03 81                                         PLUS0:  JPS     _POP21          ; R2 = oper2, R1 = oper1
89A5 38 18 82                                                 JPS     _ADD16          ; R1 = R1 + R2
89A8 14 0D 85                                                 JPA     PUSH            ; -(SP) = R1; NEXT
                                                      
89AB 82 44 AB                                         HDPLUS: DB      ^2 "D" ^'+'                             ; ***** D+
89AE 9C 89                                                    DW      HPLUS
89B0 B2 89                                            DPLUS:  DW      DPLUS0
89B2 38 BD 80                                         DPLUS0: JPS     _DPOP2          ; Get second operand
89B5 38 7A 80                                                 JPS     _DPOP1          ; Get first operand
89B8 38 2B 82                                                 JPS     _ADD32          ; R1X = R1X + R2X
89BB 14 6A 85                                                 JPA     DPUSH           ; -(SP) = R1X; NEXT
                                                      
89BE 85 4D 49 4E 55 D3                                HMINUS: DB      ^5 "MINU" ^'S'                          ; ***** MINUS
89C4 AB 89                                                    DW      HDPLUS
89C6 C8 89                                            MINUS:  DW      MINUS0
89C8 38 73 80                                         MINUS0: JPS     _POP1           ; Get operand
89CB 38 28 83                                                 JPS     _NEG16          ; Negate
89CE 14 0D 85                                                 JPA     PUSH
                                                      
89D1 86 44 4D 49 4E 55 D3                             HDMINU: DB      ^6 "DMINU" ^'S'                         ; ***** DMINUS
89D8 BE 89                                                    DW      HMINUS
89DA DC 89                                            DMINU:  DW      DMINU0
89DC 38 7A 80                                         DMINU0: JPS     _DPOP1          ; Get operand
89DF 38 3C 83                                                 JPS     _NEG32          ; Negate
89E2 14 6A 85                                                 JPA     DPUSH
                                                      
89E5 84 50 49 43 CB                                   HPICK:  DB      ^4 "PIC" ^'K'                           ; ***** PICK
89EA D1 89                                                    DW      HDMINU
89EC EE 89                                            PICK:   DW      PICK0
89EE 38 F4 89                                         PICK0:  JPS     _PICK
89F1 14 1F 85                                                 JPA     NEXT
                                                              ;
89F4 38 73 80                                         _PICK:  JPS     _POP1           ; Get index number
89F7 15 EC FE                                                 LDA     R1.0            ; Push onto Minimal stack
89FA 36                                                       PHS                     ; :
89FB 38 86 83                                                 JPS     __PICK          ; R1 = n(SP)
89FE 37                                                       PLS                     ; Remove index number
89FF 38 7B 81                                                 JPS     _PUSH1          ; -(SP) = R1
8A02 39                                                       RTS                     ; Done
                                                      
8A03 84 52 4F 4C CC                                   HROLL:  DB      ^4 "ROL" ^'L'                           ; ***** ROLL
8A08 E5 89                                                    DW      HPICK
8A0A 0C 8A                                            ROLL:   DW      ROLL0
8A0C 38 12 8A                                         ROLL0:  JPS     _ROLL
8A0F 14 1F 85                                                 JPA     NEXT
                                                              ;
8A12 38 73 80                                         _ROLL:  JPS     _POP1           ; Get index number
8A15 15 EC FE                                                 LDA     R1.0            ; Push onto Minimal stack
8A18 36                                                       PHS                     ; :
8A19 38 9C 83                                                 JPS     __ROLL          ; R1 = n(SP)
8A1C 37                                                       PLS                     ; Remove index number
8A1D 39                                                       RTS                     ; Done
                                                      
8A1E 84 4F 56 45 D2                                   HOVER:  DB      ^4 "OVE" ^'R'                           ; ***** OVER
8A23 03 8A                                                    DW      HROLL
8A25 27 8A                                            OVER:   DW      OVER0
8A27 38 2D 8A                                         OVER0:  JPS     _OVER
8A2A 14 1F 85                                                 JPA     NEXT
                                                              ;
8A2D 38 B6 80                                         _OVER:  JPS     _POP2           ; n1 n2 -- n1 n2 n1
8A30 38 6C 80                                                 JPS     _GET1           ; :
8A33 38 99 81                                                 JPS     _PUSH2          ; :
8A36 38 7B 81                                                 JPS     _PUSH1          ; :
8A39 39                                                       RTS
                                                      
8A3A 84 44 52 4F D0                                   HDROP:  DB      ^4 "DRO" ^'P'                           ; **** DROP
8A3F 1E 8A                                                    DW      HOVER
8A41 43 8A                                            DROP:   DW      DROP0
8A43 38 49 8A                                         DROP0:  JPS     _DROP
8A46 14 1F 85                                                 JPA     NEXT
                                                              ;
8A49 0E 02                                            _DROP:  LDI     2               ; n1 --
8A4B 30 E6 FE                                                 ADW     SP              ; :
8A4E 39                                                       RTS                     ; Done
                                                      
8A4F 84 53 57 41 D0                                   HSWAP:  DB      ^4 "SWA" ^'P'                           ; **** SWAP
8A54 3A 8A                                                    DW      HDROP
8A56 58 8A                                            SWAP:   DW      SWAP0
8A58 38 5E 8A                                         SWAP0:  JPS     _SWAP
8A5B 14 1F 85                                                 JPA     NEXT
                                                              ;
8A5E 38 03 81                                         _SWAP:  JPS     _POP21          ; n1 n2 -- n2 n1
8A61 38 99 81                                                 JPS     _PUSH2          ; :
8A64 38 7B 81                                                 JPS     _PUSH1          ; :
8A67 39                                                       RTS                     ; Done
                                                      
8A68 83 44 55 D0                                      HDUP:   DB      ^3 "DU" ^'P'                            ; **** DUP
8A6C 4F 8A                                                    DW      HSWAP
8A6E 70 8A                                            DUP:    DW      DUP0
8A70 38 76 8A                                         DUP0:   JPS     _DUP
8A73 14 1F 85                                                 JPA     NEXT
                                                              ;
8A76 38 6C 80                                         _DUP:   JPS     _GET1           ; n1 -- n1 n1
8A79 38 7B 81                                                 JPS     _PUSH1          ; :
8A7C 39                                                       RTS
                                                      
8A7D 85 32 4F 56 45 D2                                HTOVER: DB      ^5 "2OVE" ^'R'                          ; ***** 2OVER
8A83 68 8A                                                    DW      HDUP
8A85 87 8A                                            TOVER:  DW      TOVER0
8A87 0E 03                                            TOVER0: LDI     3
8A89 36                                                       PHS
8A8A 38 F4 89                                                 JPS     _PICK           ; 3 PICK
8A8D 38 7B 81                                                 JPS     _PUSH1
8A90 38 F4 89                                                 JPS     _PICK           ; 3 PICK
8A93 37                                                       PLS
8A94 14 0D 85                                                 JPA     PUSH
                                                      
8A97 85 32 44 52 4F D0                                HTDROP: DB      ^5 "2DRO" ^'P'                          ; ***** 2DROP
8A9D 7D 8A                                                    DW      HTOVER
8A9F A1 8A                                            TDROP:  DW      TDROP0
8AA1 0E 04                                            TDROP0: LDI     4
8AA3 30 E6 FE                                                 ADW     SP
8AA6 14 1F 85                                                 JPA     NEXT
                                                      
8AA9 85 32 53 57 41 D0                                HTSWAP: DB      ^5 "2SWA" ^'P'                          ; ***** 2SWAP
8AAF 97 8A                                                    DW      HTDROP
8AB1 B3 8A                                            TSWAP:  DW      TSWAP0
8AB3 0E 03                                            TSWAP0: LDI     3
8AB5 36                                                       PHS
8AB6 38 12 8A                                                 JPS     _ROLL           ; 3 ROLL
8AB9 38 12 8A                                                 JPS     _ROLL           ; 3 ROLL
8ABC 37                                                       PLS
8ABD 14 1F 85                                                 JPA     NEXT
                                                      
8AC0 84 32 44 55 D0                                   HTDUP:  DB      ^4 "2DU" ^'P'                           ; ***** 2DUP
8AC5 A9 8A                                                    DW      HTSWAP
8AC7 C9 8A                                            TDUP:   DW      TDUP0
8AC9 38 B6 80                                         TDUP0:  JPS     _POP2           ; OVER
8ACC 38 6C 80                                                 JPS     _GET1           ; :
8ACF 38 99 81                                                 JPS     _PUSH2          ; :
8AD2 38 7B 81                                                 JPS     _PUSH1          ; :
8AD5 38 B6 80                                                 JPS     _POP2           ; OVER
8AD8 38 6C 80                                                 JPS     _GET1           ; :
8ADB 38 99 81                                                 JPS     _PUSH2          ; :
8ADE 14 0D 85                                                 JPA     PUSH            ; :
                                                      
                                                      
8AE1 82 2B A1                                         HPSTOR: DB      ^2 "+" ^'!'                             ; ***** +!
8AE4 C0 8A                                                    DW      HTDUP
8AE6 E8 8A                                            PSTOR:  DW      PSTOR0
8AE8 38 EE 8A                                         PSTOR0: JPS     _PSTOR
8AEB 14 1F 85                                                 JPA     NEXT
                                                              ;
8AEE 38 F9 80                                         _PSTOR: JPS     _POP3           ; R3 = addr
8AF1 38 B6 80                                                 JPS     _POP2           ; R2 = incr
8AF4 38 6C 82                                                 JPS     _LD16           ; R1 = (R3)
8AF7 38 18 82                                                 JPS     _ADD16          ; R1 = R1 + R2
8AFA 38 7F 82                                                 JPS     _ST16           ; (R3) = R1
8AFD 39                                                       RTS                     ; Done
                                                      
8AFE 86 54 4F 47 47 4C C5                             HTOGGL: DB      ^6 "TOGGL" ^'E'                         ; ***** TOGGLE
8B05 E1 8A                                                    DW      HPSTOR
8B07 09 8B                                            TOGGL:  DW      TOGGL0
8B09 38 B6 80                                         TOGGL0: JPS     _POP2           ; R2 = bit mask
8B0C 38 F2 80                                                 JPS     _GET3           ; R3 = addr (leave copy on stack)
8B0F 1D F4 FE                                                 LDR     R3              ; Get the byte
8B12 16 EC FE                                                 STA     R1.0            ; :
8B15 38 D8 82                                                 JPS     _XOR8           ; R1.0 = R1.0 ^ R2.0
8B18 38 F9 80                                                 JPS     _POP3           ; R3 = addr
8B1B 15 EC FE                                                 LDA     R1.0            ; Update the byte
8B1E 1E F4 FE                                                 STR     R3              ; :
8B21 14 1F 85                                                 JPA     NEXT            ; Done
                                                      
8B24 85 3E 42 41 4E CB                                HTBANK: DB      ^5 ">BAN" ^'K'                          ; >BANK
8B2A FE 8A                                                    DW      HTOGGL
8B2C 2E 8B                                            TBANK:  DW      TBANK0
8B2E 38 73 80                                         TBANK0: JPS     _POP1           ; Get bank number from data stack into R1
8B31 0E 3E                                                    LDI     62              ; Get index to user variable BANK
8B33 16 F0 FE                                                 STA     R2.0            ; : into R2.0
8B36 38 73 83                                                 JPS     _USER           ; R3 now contains absolute address of BANK
8B39 38 7F 82                                                 JPS     _ST16           ; Save the bank number in user variable BANK
8B3C 15 EC FE                                                 LDA     R1.0            ; Do the actual bank switch
8B3F 01                                                       BNK                     ; :
8B40 14 1F 85                                                 JPA     NEXT
                                                              
8B43 81 C0                                            HAT:    DB      ^1 ^'@'                                 ; ***** @
8B45 24 8B                                                    DW      HTBANK
8B47 49 8B                                            AT:     DW      AT0
8B49 38 4F 8B                                         AT0:    JPS     _AT
8B4C 14 1F 85                                                 JPA     NEXT
                                                              ;
8B4F 38 F9 80                                         _AT:    JPS     _POP3           ; R3 = addr
8B52 38 6C 82                                                 JPS     _LD16           ; R1 = (R3)
8B55 38 7B 81                                                 JPS     _PUSH1           ; -(SP) = R1
8B58 39                                                       RTS
                                                      
8B59 82 43 C0                                         HCAT:   DB      ^2 "C" ^'@'                             ; ***** C@
8B5C 43 8B                                                    DW      HAT
8B5E 60 8B                                            CAT:    DW      CAT0
8B60 2C EC FE                                         CAT0:   CLW     R1              ; R1 = 0
8B63 38 F9 80                                                 JPS     _POP3           ; R3 = addr
8B66 1D F4 FE                                                 LDR     R3              ; A = (R3)
8B69 16 EC FE                                                 STA     R1.0            ; R1 = A
8B6C 14 0D 85                                                 JPA     PUSH            ; -(SP) = R1; NEXT
                                                      
8B6F 81 A1                                            HSTORE: DB      ^1 ^'!'                                 ; ***** !
8B71 59 8B                                                    DW      HCAT
8B73 75 8B                                            STORE:  DW      STORE0
8B75 38 7B 8B                                         STORE0: JPS     _STORE
8B78 14 1F 85                                                 JPA     NEXT
                                                              ;
8B7B 38 F9 80                                         _STORE: JPS     _POP3           ; R3 = addr
8B7E 38 73 80                                                 JPS     _POP1           ; R1 = data
8B81 38 7F 82                                                 JPS     _ST16           ; (R3) = R1
8B84 39                                                       RTS                     ; Done
                                                      
8B85 82 43 A1                                         HCSTOR: DB      ^2 "C" ^'!'                             ; ***** C!
8B88 6F 8B                                                    DW      HSTORE
8B8A 8C 8B                                            CSTOR:  DW      CSTOR0
8B8C 38 03 81                                         CSTOR0: JPS     _POP21          ; R2 = addr, R1 = data
8B8F 15 EC FE                                                 LDA     R1.0            ; A = R1.0
8B92 1E F0 FE                                                 STR     R2              ; (R3) = A
8B95 14 1F 85                                                 JPA     NEXT            ; Done
                                                      
                                                      ; INCLUDE         precompiled.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; PRECOMPILED FORTH WORDS
                                                      ;
                                                      
8B98 C1 BA                                            HCOLON: DB      ^^1 ^':'                                ; ***** :
8B9A 85 8B                                                    DW      HCSTOR
8B9C B0 8B 58 90 13 90 9E 8D 47 8B 90 8D 73 8B        COLON:  DW      DOCOL QEXEC SCSP CURR AT CONT STORE
8BAA 9E 95 DD 90 44 91                                        DW      CREAT RBRAC PSCOD
8BB0 2F E8 FE                                         DOCOL:  DEW     RP              ; -(RP) = IP
8BB3 15 E3 FE                                                 LDA     IP.1            ; :
8BB6 1E E8 FE                                                 STR     RP              ; :
8BB9 2F E8 FE                                                 DEW     RP              ; :
8BBC 15 E2 FE                                                 LDA     IP.0            ; :
8BBF 1E E8 FE                                                 STR     RP              ; :
8BC2 15 E4 FE                                                 LDA     WA.0            ; IP = WA
8BC5 16 E2 FE                                                 STA     IP.0            ; :
8BC8 15 E5 FE                                                 LDA     WA.1            ; :
8BCB 16 E3 FE                                                 STA     IP.1            ; :
8BCE 14 1F 85                                                 JPA     NEXT
                                                      
8BD1 C1 BB                                            HSEMI:  DB      ^^1 ^';'                                ; ***** ;
8BD3 98 8B                                                    DW      HCOLON
8BD5 B0 8B 82 90 B9 90 F8 88 F2 90 CF 90 F8 88        SEMI:   DW      DOCOL QCSP COMP SEMIS SMUDG LBRAC SEMIS
                                                      
8BE3 88 43 4F 4E 53 54 41 4E D4                       HCON:   DB      ^8 "CONSTAN" ^'T'                       ; ***** CONSTANT
8BEC D1 8B                                                    DW      HSEMI
8BEE B0 8B 9E 95 F2 90 D0 8E 44 91                    CON:    DW      DOCOL CREAT SMUDG COMMA PSCOD
8BF8 1D E4 FE                                         DOCON:  LDR     WA              ; -(SP) = (WA)
8BFB 16 EC FE                                                 STA     R1.0            ; :
8BFE 2E E4 FE                                                 INW     WA              ; :
8C01 1D E4 FE                                                 LDR     WA              ; :
8C04 16 ED FE                                                 STA     R1.1            ; :
8C07 2F E4 FE                                                 DEW     WA              ; :
8C0A 14 0D 85                                                 JPA     PUSH            ; Done
                                                      
8C0D 88 56 41 52 49 41 42 4C C5                       HVAR:   DB      ^8 "VARIABL" ^'E'                       ; ***** VARIABLE
8C16 E3 8B                                                    DW      HCON
8C18 B0 8B EE 8B 44 91                                VAR:    DW      DOCOL CON PSCOD
8C1E 2F E6 FE                                         DOVAR:  DEW     SP              ; -(SP) = WA
8C21 15 E5 FE                                                 LDA     WA.1            ; :
8C24 1E E6 FE                                                 STR     SP              ; :
8C27 2F E6 FE                                                 DEW     SP              ; :
8C2A 15 E4 FE                                                 LDA     WA.0            ; :
8C2D 1E E6 FE                                                 STR     SP              ; :
8C30 14 1F 85                                                 JPA     NEXT            ; Done
                                                      
8C33 84 55 53 45 D2                                   HUSER:  DB      ^4 "USE" ^'R'                           ; ***** USER
8C38 0D 8C                                                    DW      HVAR
8C3A B0 8B EE 8B 44 91                                USER:   DW      DOCOL CON PSCOD
8C40 1D E4 FE                                         DOUSE:  LDR     WA              ; Compute UP[index]
8C43 17 EA FE                                                 ADA     UP.0            ; :
8C46 16 EC FE                                                 STA     R1.0            ; :
8C49 2E E4 FE                                                 INW     WA              ; :
8C4C 1D E4 FE                                                 LDR     WA              ; :
8C4F 1A EB FE                                                 ACA     UP.1            ; :
8C52 16 ED FE                                                 STA     R1.1            ; :
8C55 14 0D 85                                                 JPA     PUSH            ; Push address; NEXT
                                                      
                                                      ; ------------------------------
                                                      ; PRECOMPILED CONSTANTS
                                                      
8C58 82 2D B1                                         HMONE:  DB      ^2 "-" ^'1'                             ; ***** -1
8C5B 33 8C                                                    DW      HUSER
8C5D F8 8B FF FF                                      MONE:   DW      DOCON -1
                                                      
8C61 81 B0                                            HZERO:  DB      ^1 ^'0'                                 ; ***** 0
8C63 58 8C                                                    DW      HMONE
8C65 F8 8B 00 00                                      ZERO:   DW      DOCON 0
                                                      
8C69 81 B1                                            HONE:   DB      ^1 ^'1'                                 ; ***** 1
8C6B 61 8C                                                    DW      HZERO
8C6D F8 8B 01 00                                      ONE:    DW      DOCON 1
                                                      
8C71 81 B2                                            HTWO:   DB      ^1 ^'2'                                 ; ***** 2
8C73 69 8C                                                    DW      HONE
8C75 F8 8B 02 00                                      TWO:    DW      DOCON 2
                                                      
8C79 81 B3                                            HTHREE: DB      ^1 ^'3'                                 ; ***** 3
8C7B 71 8C                                                    DW      HTWO
8C7D F8 8B 03 00                                      THREE:  DW      DOCON 3
                                                      
8C81 82 42 CC                                         HBL:    DB      ^2 "B" ^'L'                             ; ***** BL
8C84 79 8C                                                    DW      HTHREE
8C86 F8 8B 20 00                                      BL:     DW      DOCON 32
                                                      
8C8A 83 43 2F CC                                      HCL:    DB      ^3 "C/" ^'L'                            ; ***** C/L
8C8E 81 8C                                                    DW      HBL
8C90 F8 8B 40 00                                      CL:     DW      DOCON 64
                                                      
8C94 85 42 2F 42 55 C6                                HBBUF:  DB      ^5 "B/BU" ^'F'                          ; ***** B/BUF
8C9A 8A 8C                                                    DW      HCL
8C9C F8 8B 00 04                                      BBUF:   DW      DOCON 1024
                                                      
8CA0 85 42 2F 53 43 D2                                HBSCR:  DB      ^5 "B/SC" ^'R'                          ; ***** B/SCR
8CA6 94 8C                                                    DW      HBBUF
8CA8 F8 8B 01 00                                      BSCR:   DW      DOCON 1
                                                      
8CAC 87 2B 4F 52 49 47 49 CE                          HPORIG: DB      ^7 "+ORIGI" ^'N'                        ; ***** +ORIGIN
8CB4 A0 8C                                                    DW      HBSCR
                                                              ; speed++
8CB6 B8 8C                                            PORIG:  DW      PORIG0 ; DOCOL LIT ORIGIN PLUS SEMIS
8CB8 38 B6 80                                         PORIG0: JPS     _POP2           ; R2 = offset
8CBB 38 C4 8C                                                 JPS     _PORIG          ; R3 = &ORIGIN[R2]
8CBE 38 B7 81                                                 JPS     _PUSH3          ; Push result
8CC1 14 1F 85                                                 JPA     NEXT            ; Done
                                                              ;
8CC4 0E 00                                            _PORIG: LDI     <ORIGIN         ; R3 = ORIGIN address
8CC6 16 F4 FE                                                 STA     R3.0            ; :
8CC9 0E 80                                                    LDI     >ORIGIN         ; :
8CCB 16 F5 FE                                                 STA     R3.1            ; :
8CCE 15 F0 FE                                                 LDA     R2.0            ; Get index number
8CD1 30 F4 FE                                                 ADW     R3              ; Compute addr
8CD4 39                                                       RTS                     ; Done
                                                      
8CD5 84 46 43 4C CB                                   HTICKS: DB      ^4 "FCL" ^'K'                          ; ***** FCLK
8CDA AC 8C                                                    DW      HPORIG
8CDC F8 8B FB FE                                      TICKS:  DW      DOCON CLK0
                                                      
                                                      ; ------------------------------
                                                      ; USER VARIABLES
                                                      
8CE0 82 53 B0                                         HSZERO: DB      ^2 "S" ^'0'                             ; ***** S0
8CE3 D5 8C                                                    DW      HTICKS
8CE5 40 8C 06 00                                      SZERO:  DW      DOUSE 6
                                                      
8CE9 82 52 B0                                         HRZERO: DB      ^2 "R" ^'0'                             ; ***** R0
8CEC E0 8C                                                    DW      HSZERO
8CEE 40 8C 08 00                                      RZERO:  DW      DOUSE 8
                                                      
8CF2 83 54 49 C2                                      HTIB:   DB      ^3 "TI" ^'B'                            ; ***** TIB
8CF6 E9 8C                                                    DW      HRZERO
8CF8 40 8C 0A 00                                      TIB:    DW      DOUSE 10
                                                      
8CFC 85 57 49 44 54 C8                                HWIDTH: DB      ^5 "WIDT" ^'H'                          ; ***** WIDTH
8D02 F2 8C                                                    DW      HTIB
8D04 40 8C 0C 00                                      WIDTH:  DW      DOUSE 12
                                                      
8D08 87 57 41 52 4E 49 4E C7                          HWARN:  DB      ^7 "WARNIN" ^'G'                        ; ***** WARNING
8D10 FC 8C                                                    DW      HWIDTH
8D12 40 8C 0E 00                                      WARN:   DW      DOUSE 14
                                                      
8D16 85 46 45 4E 43 C5                                HFENCE: DB      ^5 "FENC" ^'E'                          ; ***** FENCE
8D1C 08 8D                                                    DW      HWARN
8D1E 40 8C 10 00                                      FENCE:  DW      DOUSE 16
                                                      
8D22 82 44 D0                                         HDP:    DB      ^2 "D" ^'P'                             ; ***** DP
8D25 16 8D                                                    DW      HFENCE
8D27 40 8C 12 00                                      DP:     DW      DOUSE 18
                                                      
8D2B 88 56 4F 43 2D 4C 49 4E CB                       HVOCL:  DB      ^8 "VOC-LIN" ^'K'                       ; ***** VOC-LINK
8D34 22 8D                                                    DW      HDP
8D36 40 8C 14 00                                      VOCL:   DW      DOUSE 20
                                                      
8D3A 85 46 49 52 53 D4                                HFIRST: DB      ^5 "FIRS" ^'T'                          ; ***** FIRST
8D40 2B 8D                                                    DW      HVOCL
8D42 40 8C 16 00                                      FIRST:  DW      DOUSE 22
                                                      
8D46 85 4C 49 4D 49 D4                                HLIMIT: DB      ^5 "LIMI" ^'T'                          ; ***** LIMIT
8D4C 3A 8D                                                    DW      HFIRST
8D4E 40 8C 18 00                                      LIMIT:  DW      DOUSE 24
                                                      
8D52 83 42 4C CB                                      HBLK:   DB      ^3 "BL" ^'K'                            ; ***** BLK
8D56 46 8D                                                    DW      HLIMIT
8D58 40 8C 1E 00                                      BLK:    DW      DOUSE 30
                                                      
8D5C 82 49 C9                                         HIN:    DB      ^2 "I" ^'I'                             ; ***** IN
8D5F 52 8D                                                    DW      HBLK
8D61 40 8C 20 00                                      IN:     DW      DOUSE 32
                                                      
8D65 83 4F 55 D4                                      HOUT:   DB      ^3 "OU" ^'T'                            ; ***** OUT
8D69 5C 8D                                                    DW      HIN
8D6B 40 8C 22 00                                      OUT:    DW      DOUSE 34
                                                      
8D6F 83 53 43 D2                                      HSCR:   DB      ^3 "SC" ^'R'                            ; ***** SCR
8D73 65 8D                                                    DW      HOUT
8D75 40 8C 24 00                                      SCR:    DW      DOUSE 36
                                                      
8D79 86 4F 46 46 53 45 D4                             HOFFSE: DB      ^6 "OFFSE" ^'T'                         ; ***** OFFSET
8D80 6F 8D                                                    DW      HSCR
8D82 40 8C 26 00                                      OFFSE:  DW      DOUSE 38
                                                      
8D86 87 43 4F 4E 54 45 58 D4                          HCONT:  DB      ^7 "CONTEX" ^'T'                        ; ***** CONTEXT
8D8E 79 8D                                                    DW      HOFFSE
8D90 40 8C 28 00                                      CONT:   DW      DOUSE 40
                                                      
8D94 87 43 55 52 52 45 4E D4                          HCURR:  DB      ^7 "CURREN" ^'T'                        ; ***** CURRENT
8D9C 86 8D                                                    DW      HCONT
8D9E 40 8C 2A 00                                      CURR:   DW      DOUSE 42
                                                      
8DA2 85 53 54 41 54 C5                                HSTATE: DB      ^5 "STAT" ^'E'                          ; ***** STATE
8DA8 94 8D                                                    DW      HCURR
8DAA 40 8C 2C 00                                      STATE:  DW      DOUSE 44
                                                      
8DAE 84 42 41 53 C5                                   HBASE:  DB      ^4 "BAS" ^'E'                           ; ***** BASE
8DB3 A2 8D                                                    DW      HSTATE
8DB5 40 8C 2E 00                                      BASE:   DW      DOUSE 46
                                                      
8DB9 83 44 50 CC                                      HDPL:   DB      ^3 "DP" ^'L'                            ; ***** DPL
8DBD AE 8D                                                    DW      HBASE
8DBF 40 8C 32 00                                      DPL:    DW      DOUSE 50
                                                      
8DC3 83 46 4C C4                                      HFLD:   DB      ^3 "FL" ^'D'                            ; ***** FLD
8DC7 B9 8D                                                    DW      HDPL
8DC9 40 8C 34 00                                      FLD:    DW      DOUSE 52
                                                      
8DCD 83 43 53 D0                                      HCSP:   DB      ^3 "CS" ^'P'                            ; ***** CSP
8DD1 C3 8D                                                    DW      HFLD
8DD3 40 8C 34 00                                      CSP:    DW      DOUSE 52
                                                      
8DD7 82 52 A3                                         HRNUM:  DB      ^2 "R" ^'#'                             ; ***** R#
8DDA CD 8D                                                    DW      HCSP
8DDC 40 8C 36 00                                      RNUM:   DW      DOUSE 54
                                                      
8DE0 83 48 4C C4                                      HHLD:   DB      ^3 "HL" ^'D'                            ; ***** HLD
8DE4 D7 8D                                                    DW      HRNUM
8DE6 40 8C 38 00                                      HLD:    DW      DOUSE 56
                                                      
8DEA 83 55 53 C5                                      HUSE:   DB      ^3 "US" ^'E'                            ; ***** USE
8DEE E0 8D                                                    DW      HHLD
8DF0 40 8C 3A 00                                      USE:    DW      DOUSE 58
                                                      
8DF4 84 50 52 45 D6                                   HPREV:  DB      ^4 "PRE" ^'V'                           ; ***** PREV
8DF9 EA 8D                                                    DW      HUSE
8DFB 40 8C 3C 00                                      PREV:   DW      DOUSE 60
                                                      
8DFF 84 42 41 4E CB                                   HBANK:  DB      ^4 "BAN" ^'K'                           ; ***** BANK
8E04 F4 8D                                                    DW      HPREV
8E06 40 8C 3E 00                                      BANK:   DW      DOUSE 62
                                                      
8E0A 85 54 41 53 4B D3                                HTASKS: DB      ^5 "TASK" ^'S'                          ; ***** TASKS
8E10 FF 8D                                                    DW      HBANK
8E12 40 8C 40 00                                      TASKS:  DW      DOUSE 64
                                                      
                                                      ; END OF USER VARIABLES
                                                      ; ------------------------------
                                                      
8E16 82 3E BE                                         HRSHFT: DB      ^2 ">" ^'>'                             ; ***** >>
8E19 0A 8E                                                    DW      HTASKS
8E1B 1D 8E                                            RSHFT:  DW      RSHFT0
8E1D 38 03 81                                         RSHFT0: JPS     _POP21
8E20 15 ED FE                                         RSHF10: LDA     R1.1
8E23 07                                                       LSR
8E24 16 ED FE                                                 STA     R1.1
8E27 15 EC FE                                                 LDA     R1.0
8E2A 08                                                       ROR
8E2B 16 EC FE                                                 STA     R1.0
8E2E 27 F0 FE                                                 DEB     R2.0
8E31 3A 20 8E                                                 BNE     RSHF10
8E34 14 0D 85                                                 JPA     PUSH
                                                      
8E37 82 3C BC                                         HLSHFT: DB      ^2 "<" ^'<'                             ; ***** <<
8E3A 16 8E                                                    DW      HRSHFT
8E3C 3E 8E                                            LSHFT:  DW      LSHFT0
8E3E 38 03 81                                         LSHFT0: JPS     _POP21
8E41 15 EC FE                                         LSHF10: LDA     R1.0
8E44 05                                                       LSL
8E45 16 EC FE                                                 STA     R1.0
8E48 15 ED FE                                                 LDA     R1.1
8E4B 06                                                       ROL
8E4C 16 ED FE                                                 STA     R1.1
8E4F 27 F0 FE                                                 DEB     R2.0
8E52 3A 41 8E                                                 BNE     LSHF10
8E55 14 0D 85                                                 JPA     PUSH
                                                      
8E58 82 31 AB                                         HONEP:  DB      ^2 "1" ^'+'                             ; ***** 1+
8E5B 37 8E                                                    DW      HLSHFT
8E5D 5F 8E                                            ONEP:   DW      ONEP0
8E5F 38 73 80                                         ONEP0:  JPS     _POP1
8E62 2E EC FE                                                 INW     R1
8E65 14 0D 85                                                 JPA     PUSH
                                                      
8E68 82 32 AB                                         HTWOP:  DB      ^2 "2" ^'+'                             ; ***** 2+
8E6B 58 8E                                                    DW      HONEP
8E6D 6F 8E                                            TWOP:   DW      TWOP0
8E6F 38 73 80                                         TWOP0:  JPS     _POP1
8E72 0E 02                                                    LDI     2
8E74 30 EC FE                                                 ADW     R1
8E77 14 0D 85                                                 JPA     PUSH
                                                      
8E7A 84 48 45 52 C5                                   HHERE:  DB      ^4 "HER" ^'E'                           ; ***** HERE
8E7F 68 8E                                                    DW      HTWOP
                                                              ; speed++
8E81 83 8E                                            HERE:   DW      HERE0 ; DOCOL DP AT SEMIS
8E83 38 89 8E                                         HERE0:  JPS     _HERE
8E86 14 1F 85                                                 JPA     NEXT
                                                              ;
8E89 0E 12                                            _HERE:  LDI     18              ; USER[18] (DP)
8E8B 16 F0 FE                                                 STA     R2.0            ; :
8E8E 38 73 83                                                 JPS     _USER           ; R3 = &USER[18]
8E91 38 6C 82                                                 JPS     _LD16           ; R1 = USER[18]
8E94 38 7B 81                                                 JPS     _PUSH1          ; -(SP) = Result
8E97 39                                                       RTS                     ; Done
                                                      
8E98 85 41 4C 4C 4F D4                                HALLOT: DB      ^5 "ALLO" ^'T'                          ; ***** ALLOT
8E9E 7A 8E                                                    DW      HHERE
                                                              ; speed++
8EA0 A2 8E                                            ALLOT:  DW      ALLOT0 ; DOCOL DP PSTOR SEMIS
8EA2 38 A8 8E                                         ALLOT0: JPS     _ALLOT
8EA5 14 1F 85                                                 JPA     NEXT
                                                              ;
8EA8 0E 12                                            _ALLOT: LDI     18              ; USER[18] (DP)
8EAA 16 F0 FE                                                 STA     R2.0            ; :
8EAD 38 73 83                                                 JPS     _USER           ; R3 = &USER[18]
8EB0 38 6C 82                                                 JPS     _LD16           ; R1 = USER[18]
8EB3 38 B6 80                                                 JPS     _POP2           ; Get increment
8EB6 15 EC FE                                                 LDA     R1.0            ; LSB
8EB9 17 F0 FE                                                 ADA     R2.0            ; :
8EBC 16 EC FE                                                 STA     R1.0            ; :
8EBF 15 ED FE                                                 LDA     R1.1            ; MSB
8EC2 1A F1 FE                                                 ACA     R2.1            ; :
8EC5 16 ED FE                                                 STA     R1.1            ; :
8EC8 38 7F 82                                                 JPS     _ST16           ; :
8ECB 39                                                       RTS                     ; Done
                                                      
8ECC 81 AC                                            HCOMMA: DB      ^1 ^','                                 ; ***** ,
8ECE 98 8E                                                    DW      HALLOT
                                                              ; speed++
8ED0 D2 8E                                            COMMA:  DW      COMMA0 ; DOCOL HERE STORE TWO ALLOT SEMIS
8ED2 38 D8 8E                                         COMMA0: JPS     _COMMA
8ED5 14 1F 85                                                 JPA     NEXT
                                                              ;
8ED8 38 89 8E                                         _COMMA: JPS     _HERE           ; HERE
8EDB 38 7B 8B                                                 JPS     _STORE          ; STORE
8EDE 2C EC FE                                                 CLW     R1              ; 2 ALLOT
8EE1 0E 02                                                    LDI     2               ; :
8EE3 30 EC FE                                                 ADW     R1              ; :
8EE6 38 7B 81                                                 JPS     _PUSH1          ; :
8EE9 38 A8 8E                                                 JPS     _ALLOT          ; :
8EEC 39                                                       RTS                     ; Done
                                                      
8EED 81 AD                                            HSUB:   DB      ^1 ^'-'                                 ; ***** -
8EEF CC 8E                                                    DW      HCOMMA
                                                              ; speed++
8EF1 F3 8E                                            SUB:    DW      SUB0 ; DOCOL MINUS PLUS SEMIS
8EF3 38 03 81                                         SUB0:   JPS     _POP21          ; Get arguments
8EF6 38 FC 8E                                                 JPS     _SUB            ; Subtract
8EF9 14 0D 85                                                 JPA     PUSH            ; Done
                                                              ;
8EFC 15 EC FE                                         _SUB:   LDA     R1.0            ; LSB
8EFF 18 F0 FE                                                 SBA     R2.0            ; :
8F02 16 EC FE                                                 STA     R1.0            ; :
8F05 15 ED FE                                                 LDA     R1.1            ; MSB
8F08 1B F1 FE                                                 SCA     R2.1            ; :
8F0B 16 ED FE                                                 STA     R1.1            ; :
8F0E 39                                                       RTS                     ; Done
                                                      
8F0F 81 BD                                            HEQUAL: DB      ^1 ^'='                                 ; ***** =
8F11 ED 8E                                                    DW      HSUB
                                                              ; speed++
8F13 15 8F                                            EQUAL:  DW      EQUAL0 ; DOCOL SUB ZEQU SEMIS
8F15 38 03 81                                         EQUAL0: JPS     _POP21
8F18 38 FC 8E                                                 JPS     _SUB
8F1B 38 5E 89                                                 JPS     _ZEQU
8F1E 14 0D 85                                                 JPA     PUSH
                                                      
8F21 81 BC                                            HLESS:  DB      ^1 ^'<'                                 ; ***** <
8F23 0F 8F                                                    DW      HEQUAL
                                                              ; speed++
8F25 27 8F                                            LESS:   DW      LESS0 ; DOCOL SUB ZLESS SEMIS
8F27 38 03 81                                         LESS0:  JPS     _POP21
8F2A 38 FC 8E                                                 JPS     _SUB
8F2D 38 89 89                                                 JPS     _ZLESS
8F30 14 0D 85                                                 JPA     PUSH
                                                      
8F33 81 BE                                            HGREAT: DB      ^1 ^'>'                                 ; ***** >
8F35 21 8F                                                    DW      HLESS
                                                              ; speed++
8F37 39 8F                                            GREAT:  DW      GREAT0 ; DOCOL SWAP LESS SEMIS
8F39 38 5E 8A                                         GREAT0: JPS     _SWAP
8F3C 14 27 8F                                                 JPA     LESS0
                                                      
8F3F 83 52 4F D4                                      HROT:   DB      ^3 "RO" ^'T'                            ; ***** ROT
8F43 33 8F                                                    DW      HGREAT
8F45 47 8F                                            ROT:    DW      ROT0
8F47 38 00 81                                         ROT0:   JPS     _POP321
8F4A 38 99 81                                                 JPS     _PUSH2
8F4D 38 B7 81                                                 JPS     _PUSH3
8F50 14 0D 85                                                 JPA     PUSH
                                                      
8F53 85 53 50 41 43 C5                                HSPACE: DB      ^5 "SPAC" ^'E'                          ; ***** SPACE
8F59 3F 8F                                                    DW      HROT
8F5B B0 8B 86 8C 7C 9D F8 88                          SPACE:  DW      DOCOL BL EMIT SEMIS
                                                      
8F63 84 2D 44 55 D0                                   HDDUP:  DB      ^4 "-DU" ^'P'                           ; ***** -DUP
8F68 53 8F                                                    DW      HSPACE
8F6A 6C 8F                                            DDUP:   DW      DDUP0
8F6C 38 72 8F                                         DDUP0:  JPS     _DDUP
8F6F 14 1F 85                                                 JPA     NEXT
                                                              ;
8F72 38 6C 80                                         _DDUP:  JPS     _GET1
8F75 15 EC FE                                                 LDA     R1.0
8F78 11 00                                                    CPI     0
8F7A 3A 86 8F                                                 BNE     DDUP10
8F7D 15 ED FE                                                 LDA     R1.1
8F80 11 00                                                    CPI     0
8F82 3A 86 8F                                                 BNE     DDUP10
8F85 39                                                       RTS
8F86 38 7B 81                                         DDUP10: JPS     _PUSH1
8F89 39                                                       RTS
                                                      
8F8A 88 54 52 41 56 45 52 53 C5                       HTRAV:  DB      ^8 "TRAVERS" ^'E'                       ; ***** TRAVERSE
8F93 63 8F                                                    DW      HDDUP
8F95 B0 8B 56 8A                                      TRAV:   DW      DOCOL SWAP
8F99 25 8A A0 89 97 85 7F 00                          TRAV10: DW      OVER PLUS LIT 0x7F
8FA1 25 8A 5E 8B 25 8F DB 85 F0 FF                            DW      OVER CAT LESS ZBRAN +TRAV10
8FAB 56 8A 41 8A F8 88                                        DW      SWAP DROP SEMIS
                                                      
8FB1 86 4C 41 54 45 53 D4                             HLATES: DB      ^6 "LATES" ^'T'                         ; ***** LATEST
8FB8 8A 8F                                                    DW      HTRAV
8FBA B0 8B 9E 8D 47 8B 47 8B F8 88                    LATES:  DW      DOCOL CURR AT AT SEMIS
                                                      
8FC4 83 4C 46 C1                                      HLFA:   DB      ^3 "LF" ^'A'                            ; ***** LFA
8FC8 B1 8F                                                    DW      HLATES
8FCA B0 8B 97 85 04 00 F1 8E F8 88                    LFA:    DW      DOCOL LIT 4 SUB SEMIS
                                                      
8FD4 83 43 46 C1                                      HCFA:   DB      ^3 "CF" ^'A'                            ; ***** CFA
8FD8 C4 8F                                                    DW      HLFA
8FDA B0 8B 75 8C F1 8E F8 88                          CFA:    DW      DOCOL TWO SUB SEMIS
                                                      
8FE2 83 4E 46 C1                                      HNFA:   DB      ^3 "NF" ^'A'                            ; ***** NFA
8FE6 D4 8F                                                    DW      HCFA
8FE8 B0 8B 97 85 05 00 F1 8E 97 85 FF FF 95 8F F8 88  NFA:    DW      DOCOL LIT 5 SUB LIT -1 TRAV SEMIS
                                                      
8FF8 83 50 46 C1                                      HPFA:   DB      ^3 "PF" ^'A'                            ; ***** PFA
8FFC E2 8F                                                    DW      HNFA
8FFE B0 8B 6D 8C 95 8F 97 85 05 00 A0 89 F8 88        PFA:    DW      DOCOL ONE TRAV LIT 5 PLUS SEMIS
                                                      
                                                      ; ------------------------------
                                                      ; COMPILE TIME CHECKS
                                                      
900C 84 21 43 53 D0                                   HSCSP:  DB      ^4 "!CS" ^'P'                           ; ***** !CSP
9011 F8 8F                                                    DW      HPFA
9013 B0 8B 7C 88 D3 8D 73 8B F8 88                    SCSP:   DW      DOCOL SPAT CSP STORE SEMIS
                                                      
901D 86 3F 45 52 52 4F D2                             HQERR:  DB      ^6 "?ERRO" ^'R'                         ; ***** ?ERROR
9024 0C 90                                                    DW      HSCSP
9026 B0 8B 56 8A DB 85 08 00                          QERR:   DW      DOCOL SWAP ZBRAN +QERR10
902E 21 95 C9 85 04 00                                        DW      ERROR BRAN +QERR20
9034 41 8A                                            QERR10: DW      DROP
9036 F8 88                                            QERR20: DW      SEMIS
                                                      
9038 85 3F 43 4F 4D D0                                HQCOMP: DB      ^5 "?COM" ^'P'                          ; ***** ?COMP
903E 1D 90                                                    DW      HQERR
9040 B0 8B AA 8D 47 8B 53 89 97 85 11 00 26 90 F8 88  QCOMP:  DW      DOCOL STATE AT ZEQU LIT 17 QERR SEMIS
                                                      
9050 85 3F 45 58 45 C3                                HQEXEC: DB      ^5 "?EXE" ^'C'                          ; ***** ?EXEC
9056 38 90                                                    DW      HQCOMP
9058 B0 8B AA 8D 47 8B 97 85 12 00 26 90 F8 88        QEXEC:  DW      DOCOL STATE AT LIT 18 QERR SEMIS
                                                      
9066 86 3F 50 41 49 52 D3                             HQPAIR: DB      ^6 "?PAIR" ^'S'                         ; ***** ?PAIRS
906D 50 90                                                    DW      HQEXEC
906F B0 8B F1 8E 97 85 13 00 26 90 F8 88              QPAIR:  DW      DOCOL SUB LIT 19 QERR SEMIS
                                                      
907B 84 3F 43 53 D0                                   HQCSP:  DB      ^4 "?CS" ^'P'                           ; ***** ?CSP
9080 66 90                                                    DW      HQPAIR
9082 B0 8B 7C 88 D3 8D 47 8B F1 8E                    QCSP:   DW      DOCOL SPAT CSP AT SUB
908C 97 85 14 00 26 90 F8 88                                  DW      LIT 20 QERR SEMIS
                                                      
9094 88 3F 4C 4F 41 44 49 4E C7                       HQLOAD: DB      ^8 "?LOADIN" ^'G'                       ; ***** ?LOADING
909D 7B 90                                                    DW      HQCSP
909F B0 8B 58 8D 47 8B 53 89 97 85 16 00 26 90 F8 88  QLOAD:  DW      DOCOL BLK AT ZEQU LIT 22 QERR SEMIS
                                                      
                                                      ; ------------------------------
                                                      ; COMPILER WORDS
                                                      
90AF 87 43 4F 4D 50 49 4C C5                          HCOMP:  DB      ^7 "COMPIL" ^'E'                        ; ***** COMPILE
90B7 94 90                                                    DW      HQLOAD
90B9 B0 8B 40 90 3A 89 6E 8A                          COMP:   DW      DOCOL QCOMP FROMR DUP
90C1 6D 8E 2A 89 47 8B D0 8E F8 88                            DW      TWOP TOR AT COMMA SEMIS
                                                      
90CB C1 DB                                            HLBRAC: DB      ^^1 ^'['                                ; ***** [
90CD AF 90                                                    DW      HCOMP
90CF B0 8B 65 8C AA 8D 73 8B F8 88                    LBRAC:  DW      DOCOL ZERO STATE STORE SEMIS
                                                      
90D9 81 DD                                            HRBRAC: DB      ^1 ^']'                                 ; ***** ]
90DB CB 90                                                    DW      HLBRAC
90DD B0 8B 97 85 C0 00 AA 8D 73 8B F8 88              RBRAC:  DW      DOCOL LIT 0xC0 STATE STORE SEMIS
                                                      
90E9 86 53 4D 55 44 47 C5                             HSMUDG: DB      ^6 "SMUDG" ^'E'                         ; ***** SMUDGE
90F0 D9 90                                                    DW      HRBRAC
90F2 B0 8B BA 8F 97 85 20 00 07 8B F8 88              SMUDG:  DW      DOCOL LATES LIT 0x20 TOGGL SEMIS
                                                      
90FE 83 48 45 D8                                      HHEX:   DB      ^3 "HE" ^'X'                            ; ***** HEX
9102 E9 90                                                    DW      HSMUDG
9104 B0 8B 97 85 10 00 B5 8D 73 8B F8 88              HEX:    DW      DOCOL LIT 16 BASE STORE SEMIS
                                                      
9110 87 44 45 43 49 4D 41 CC                          HDEC:   DB      ^7 "DECIMA" ^'L'                        ; ***** DECIMAL
9118 FE 90                                                    DW      HHEX
911A B0 8B 97 85 0A 00 B5 8D 73 8B F8 88              DEC:    DW      DOCOL LIT 10 BASE STORE SEMIS
                                                      
9126 85 4F 43 54 41 CC                                HOCTAL: DB      ^5 "OCTA" ^'L'                          ; ***** OCTAL
912C 10 91                                                    DW      HDEC
912E B0 8B 97 85 08 00 B5 8D 73 8B F8 88              OCTAL:  DW      DOCOL LIT 8 BASE STORE SEMIS
                                                      
913A 87 28 3B 43 4F 44 45 A9                          HPSCOD: DB      ^7 "(;CODE" ^')'                        ; ***** (;CODE)
9142 26 91                                                    DW      HOCTAL
9144 B0 8B 3A 89 BA 8F FE 8F DA 8F 73 8B F8 88        PSCOD:  DW      DOCOL FROMR LATES PFA CFA STORE SEMIS
                                                      
9152 87 3C 42 55 49 4C 44 D3                          HBUILD: DB      ^7 "<BUILD" ^'S'                        ; ***** <BUILDS
915A 3A 91                                                    DW      HPSCOD
915C B0 8B 65 8C EE 8B F8 88                          BUILD:  DW      DOCOL ZERO CON SEMIS
                                                      
9164 85 44 4F 45 53 BE                                HDOES:  DB      ^5 "DOES" ^'>'                          ; ***** DOES>
916A 52 91                                                    DW      HBUILD
916C B0 8B 3A 89 BA 8F FE 8F 73 8B 44 91              DOES:   DW      DOCOL FROMR LATES PFA STORE PSCOD
9178 2F E8 FE                                         DODOE:  DEW     RP              ; -(RP) = IP
917B 15 E3 FE                                                 LDA     IP.1            ; :
917E 1E E8 FE                                                 STR     RP              ; :
9181 2F E8 FE                                                 DEW     RP              ; :
9184 15 E2 FE                                                 LDA     IP.0            ; :
9187 1E E8 FE                                                 STR     RP              ; :
918A 1D E4 FE                                                 LDR     WA              ; IP = (WA)+
918D 16 E2 FE                                                 STA     IP.0            ; :
9190 2E E4 FE                                                 INW     WA              ; :
9193 1D E4 FE                                                 LDR     WA              ; :
9196 16 E3 FE                                                 STA     IP.1            ; :
9199 2E E4 FE                                                 INW     WA              ; :
919C 2F E6 FE                                                 DEW     SP              ; -(SP) = WA
919F 15 E5 FE                                                 LDA     WA.1            ; :
91A2 1E E6 FE                                                 STR     SP              ; :
91A5 2F E6 FE                                                 DEW     SP              ; :
91A8 15 E4 FE                                                 LDA     WA.0            ; :
91AB 1E E6 FE                                                 STR     SP              ; :
91AE 14 1F 85                                                 JPA     NEXT            ; Done
                                                      
                                                      ; ------------------------------
                                                      ; MISC WORDS RELATED TO PRINTING
                                                      
91B1 85 43 4F 55 4E D4                                HCOUNT: DB      ^5 "COUN" ^'T'                          ; ***** COUNT
91B7 64 91                                                    DW      HDOES
91B9 B0 8B 6E 8A 5D 8E 56 8A 5E 8B F8 88              COUNT:  DW      DOCOL DUP ONEP SWAP CAT SEMIS
                                                      
91C5 84 54 59 50 C5                                   HTYPE:  DB      ^4 "TYP" ^'E'                           ; ***** TYPE
91CA B1 91                                                    DW      HCOUNT
91CC B0 8B 6A 8F DB 85 18 00                          TYPE:   DW      DOCOL DDUP ZBRAN +TYPE20
91D4 25 8A A0 89 56 8A 71 86                                  DW      OVER PLUS SWAP XDO
91DC 83 86 5E 8B 7C 9D 5C 86 F8 FF                    TYPE10: DW      I CAT EMIT XLOOP +TYPE10
91E6 C9 85 04 00                                              DW      BRAN +TYPE30
91EA 41 8A                                            TYPE20: DW      DROP
91EC F8 88                                            TYPE30: DW      SEMIS
                                                      
91EE 89 2D 54 52 41 49 4C 49 4E C7                    HDTRAI: DB      ^9 "-TRAILIN" ^'G'                      ; ***** -TRAILING
91F8 C5 91                                                    DW      HTYPE
91FA B0 8B 6E 8A 65 8C 71 86                          DTRAI:  DW      DOCOL DUP ZERO XDO
9202 25 8A 25 8A A0 89 6D 8C F1 8E                    DTRA10: DW      OVER OVER PLUS ONE SUB
920C 5E 8B 86 8C F1 8E DB 85 08 00                            DW      CAT BL SUB ZBRAN +DTRA20
9216 17 89 C9 85 06 00                                        DW      LEAVE BRAN +DTRA30
921C 6D 8C F1 8E                                      DTRA20: DW      ONE SUB
9220 5C 86 E0 FF                                      DTRA30: DW      XLOOP +DTRA10
9224 F8 88                                                    DW      SEMIS
                                                      
9226 84 28 2E 22 A9                                   HPDOTQ: DB      ^4 "(." '"' ^')'                        ; ***** (.")
922B EE 91                                                    DW      HDTRAI
922D B0 8B 46 89 B9 91 6E 8A 5D 8E                    PDOTQ:  DW      DOCOL R COUNT DUP ONEP
9237 3A 89 A0 89 2A 89 CC 91 F8 88                            DW      FROMR PLUS TOR TYPE SEMIS
                                                      
9241 C2 2E A2                                         HDOTQ:  DB      ^^2 "." ^'"'                            ; ***** ."
9244 26 92                                                    DW      HPDOTQ
9246 B0 8B 97 85 22 00 AA 8D 47 8B DB 85 14 00        DOTQ:   DW      DOCOL LIT '"' STATE AT ZBRAN +DOTQ10
9254 B9 90 2D 92 B3 93 81 8E 5E 8B 5D 8E                      DW      COMP PDOTQ WORD HERE CAT ONEP
9260 A0 8E C9 85 0A 00                                        DW      ALLOT BRAN +DOTQ20
9266 B3 93 81 8E B9 91 CC 91                          DOTQ10: DW      WORD HERE COUNT TYPE
926E F8 88                                            DOTQ20: DW      SEMIS
                                                      
                                                      ; ------------------------------
                                                      ; OUTER INTERPRETER
                                                      
9270 86 45 58 50 45 43 D4                             HEXPEC: DB      ^6 "EXPEC" ^'T'                         ; ***** EXPECT
9277 41 92                                                    DW      HDOTQ
9279 B0 8B 25 8A A0 89 25 8A 71 86                    EXPEC:  DW      DOCOL OVER PLUS OVER XDO
9283 BD 9D 6E 8A 97 85 0E 00 B6 8C                    EXPE10: DW      KEY DUP LIT 14 PORIG
928D 47 8B 13 8F DB 85 2A 00                                  DW      AT EQUAL ZBRAN +EXPE20
9295 41 8A 6E 8A 83 86 13 8F 6E 8A 3A 89 75 8C F1 8E          DW      DROP DUP I EQUAL DUP FROMR TWO SUB
92A5 A0 89 2A 89 DB 85 0A 00                                  DW      PLUS TOR ZBRAN +EXPE60
92AD 97 85 07 00 C9 85 06 00                                  DW      LIT CH_BEL BRAN +EXPE70
92B5 97 85 08 00                                      EXPE60: DW      LIT CH_BSP
92B9 C9 85 28 00                                      EXPE70: DW      BRAN +EXPE30
92BD 6E 8A 97 85 0A 00 13 8F DB 85 0E 00              EXPE20: DW      DUP LIT 10 EQUAL ZBRAN +EXPE40
92C9 17 89 41 8A 86 8C 65 8C C9 85 04 00                      DW      LEAVE DROP BL ZERO BRAN +EXPE50
92D5 6E 8A                                            EXPE40: DW      DUP
92D7 83 86 8A 8B 65 8C 83 86 5D 8E 73 8B              EXPE50: DW      I CSTOR ZERO I ONEP STORE
92E3 7C 9D 5C 86 9C FF                                EXPE30: DW      EMIT XLOOP +EXPE10
92E9 41 8A F8 88                                              DW      DROP SEMIS
                                                      
92ED 85 51 55 45 52 D9                                HQUERY: DB      ^5 "QUER" ^'Y'                          ; ***** QUERY
92F3 70 92                                                    DW      HEXPEC
92F5 B0 8B F8 8C 47 8B 97 85 50 00 79 92              QUERY:  DW      DOCOL TIB AT LIT 80 EXPEC
9301 65 8C 61 8D 73 8B F8 88                                  DW      ZERO IN STORE SEMIS
                                                      
9309 C1 80                                            HNULL:  DB      ^^1 ^0                                  ; ***** <the NULL word>
930B ED 92                                                    DW      HQUERY
930D B0 8B 58 8D 47 8B DB 85 26 00                    NULL:   DW      DOCOL BLK AT ZBRAN +NULL20
9317 6D 8C 58 8D E6 8A 65 8C 61 8D 73 8B                      DW      ONE BLK PSTOR ZERO IN STORE
9323 58 8D 47 8B A8 8C 91 99 53 89 DB 85 08 00                DW      BLK AT BSCR MOD ZEQU ZBRAN +NULL10
9331 58 90 3A 89 41 8A                                        DW      QEXEC FROMR DROP
9337 C9 85 06 00                                      NULL10: DW      BRAN +NULL30
933B 3A 89 41 8A                                      NULL20: DW      FROMR DROP
933F F8 88                                            NULL30: DW      SEMIS
                                                      
9341 84 46 49 4C CC                                   HFILL:  DB      ^4 "FIL" ^'L'                           ; ***** FILL
9346 09 93                                                    DW      HNULL
9348 B0 8B 56 8A 2A 89 25 8A 8A 8B 6E 8A              FILL:   DW      DOCOL SWAP TOR OVER CSTOR DUP
9354 5D 8E 3A 89 6D 8C F1 8E C2 87 F8 88                      DW      ONEP FROMR ONE SUB CMOVE SEMIS
                                                      
9360 85 45 52 41 53 C5                                HERASE: DB      ^5 "ERAS" ^'E'                          ; ***** ERASE
9366 41 93                                                    DW      HFILL
9368 B0 8B 65 8C 48 93 F8 88                          ERASE:  DW      DOCOL ZERO FILL SEMIS
                                                      
9370 86 42 4C 41 4E 4B D3                             HBLANK: DB      ^6 "BLANK" ^'S'                         ; ***** BLANKS
9377 60 93                                                    DW      HERASE
9379 B0 8B 86 8C 48 93 F8 88                          BLANK:  DW      DOCOL BL FILL SEMIS
                                                      
9381 84 48 4F 4C C4                                   HHOLD:  DB      ^4 "HOL" ^'D'                           ; ***** HOLD
9386 70 93                                                    DW      HBLANK
9388 B0 8B 97 85 FF FF E6 8D E6 8A                    HOLD:   DW      DOCOL LIT -1 HLD PSTOR
9392 E6 8D 47 8B 8A 8B F8 88                                  DW      HLD AT CSTOR SEMIS
                                                      
939A 83 50 41 C4                                      HPAD:   DB      ^3 "PA" ^'D'                            ; ***** PAD
939E 81 93                                                    DW      HHOLD
93A0 B0 8B 81 8E 97 85 54 00 A0 89 F8 88              PAD:    DW      DOCOL HERE LIT 84 PLUS SEMIS
                                                      
93AC 84 57 4F 52 C4                                   HWORD:  DB      ^4 "WOR" ^'D'                           ; ***** WORD
93B1 9A 93                                                    DW      HPAD
93B3 B0 8B 58 8D 47 8B DB 85 0C 00                    WORD:   DW      DOCOL BLK AT ZBRAN +WORD10
93BD 58 8D 47 8B 05 9B C9 85 06 00                            DW      BLK AT BLOCK BRAN +WORD20
93C7 F8 8C 47 8B                                      WORD10: DW      TIB AT
93CB 61 8D 47 8B A0 89 56 8A 63 87                    WORD20: DW      IN AT PLUS SWAP ENCL
93D5 81 8E 97 85 22 00 79 93 61 8D E6 8A                      DW      HERE LIT 34 BLANK IN PSTOR
93E1 25 8A F1 8E 2A 89 46 89 81 8E 8A 8B A0 89                DW      OVER SUB TOR R HERE CSTOR PLUS
93EF 81 8E 5D 8E 3A 89 C2 87 F8 88                            DW      HERE ONEP FROMR CMOVE SEMIS
                                                      
93F9 88 28 4E 55 4D 42 45 52 A9                       HPNUMB: DB      ^8 "(NUMBER" ^')'                       ; ***** (NUMBER)
9402 AC 93                                                    DW      HWORD
9404 B0 8B                                            PNUMB:  DW      DOCOL
9406 5D 8E 6E 8A 2A 89 5E 8B                          PNUM10: DW      ONEP DUP TOR CAT
940E B5 8D 47 8B 93 86 DB 85 2C 00                            DW      BASE AT DIGIT ZBRAN +PNUM30
9418 56 8A B5 8D 47 8B EE 87 41 8A 45 8F B5 8D 47 8B          DW      SWAP BASE AT USTAR DROP ROT BASE AT
9428 EE 87 B0 89 BF 8D 47 8B 5D 8E DB 85 08 00                DW      USTAR DPLUS DPL AT ONEP ZBRAN +PNUM20
9436 6D 8C BF 8D E6 8A                                        DW      ONE DPL PSTOR
943C 3A 89 C9 85 C6 FF                                PNUM20: DW      FROMR BRAN +PNUM10
9442 3A 89 F8 88                                      PNUM30: DW      FROMR SEMIS
                                                      
9446 86 4E 55 4D 42 45 D2                             HNUMB:  DB      ^6 "NUMBE" ^'R'                         ; ***** NUMBER
944D F9 93                                                    DW      HPNUMB
944F B0 8B 65 8C 65 8C 45 8F 6E 8A 5D 8E 5E 8B        NUMB:   DW      DOCOL ZERO ZERO ROT DUP ONEP CAT
945D 97 85 2D 00 13 8F 6E 8A 2A 89 F1 8E 97 85 FF FF          DW      LIT '-' EQUAL DUP TOR SUB LIT -1
946D BF 8D 73 8B 04 94 6E 8A                          NUMB10: DW      DPL STORE PNUMB DUP
9475 5E 8B 86 8C F1 8E DB 85 16 00                            DW      CAT BL SUB ZBRAN +NUMB20
947F 6E 8A 5E 8B 97 85 2E 00 F1 8E                            DW      DUP CAT LIT '.' SUB
9489 65 8C 26 90 65 8C C9 85 DC FF                            DW      ZERO QERR ZERO BRAN +NUMB10
9493 41 8A 3A 89 DB 85 04 00                          NUMB20: DW      DROP FROMR ZBRAN +NUMB30
949B DA 89                                                    DW      DMINU
949D F8 88                                            NUMB30: DW      SEMIS
                                                      
949F 85 2D 46 49 4E C4                                HDFIND: DB      ^5 "-FIN" ^'D'                          ; ***** -FIND
94A5 46 94                                                    DW      HNUMB
94A7 B0 8B 86 8C B3 93 81 8E B9 91 D7 94              DFIND:  DW      DOCOL BL WORD HERE COUNT UPPER
94B3 81 8E 90 8D 47 8B 47 8B D2 86                            DW      HERE CONT AT AT PFIND
94BD 6E 8A 53 89 DB 85 0A 00                                  DW      DUP ZEQU ZBRAN +DFIN10
94C5 41 8A 81 8E BA 8F D2 86                                  DW      DROP HERE LATES PFIND
94CD F8 88                                            DFIN10: DW      SEMIS
                                                      
94CF 85 55 50 50 45 D2                                HUPPER: DB      ^5 "UPPE" ^'R'                          ; ***** UPPER
94D5 9F 94                                                    DW      HDFIND
94D7 B0 8B 25 8A A0 89 56 8A 71 86                    UPPER:  DW      DOCOL OVER PLUS SWAP XDO
94E1 83 86 5E 8B 97 85 60 00 37 8F                    UPPE10: DW      I CAT LIT 0x60 GREAT
94EB 83 86 5E 8B 97 85 7B 00 25 8F                            DW      I CAT LIT 0x7B LESS
94F5 42 88 DB 85 0A 00                                        DW      AND ZBRAN +UPPE20
94FB 83 86 97 85 20 00 07 8B                                  DW      I LIT 0x20 TOGGL
9503 5C 86 DC FF                                      UPPE20: DW      XLOOP +UPPE10
9507 F8 88                                                    DW      SEMIS
                                                      
9509 87 28 41 42 4F 52 54 A9                          HPABOR: DB      ^7 "(ABORT" ^')'                        ; ***** (ABORT)
9511 CF 94                                                    DW      HUPPER
9513 B0 8B 87 97 F8 88                                PABOR:  DW      DOCOL ABORT SEMIS
                                                      
9519 85 45 52 52 4F D2                                HERROR: DB      ^5 "ERRO" ^'R'                          ; ***** ERROR
951F 09 95                                                    DW      HPABOR
9521 B0 8B 12 8D 47 8B 7E 89 DB 85 04 00              ERROR:  DW      DOCOL WARN AT ZLESS ZBRAN +ERRO10
952D 13 95                                                    DW      PABOR
952F 81 8E B9 91 CC 91 2D 92                          ERRO10: DW      HERE COUNT TYPE PDOTQ
9537 03 20 3F 20                                              DB      3 32 '?' 32
953B 9A 9B 93 88 61 8D 47 8B 58 8D 47 8B 59 97 F8 88          DW      MESS SPSTO IN AT BLK AT QUIT SEMIS
                                                      
954B 83 49 44 AE                                      HIDDOT: DB      ^3 "ID" ^'.'                            ; ***** ID.
954F 19 95                                                    DW      HERROR
9551 B0 8B A0 93 86 8C 97 85 5F 00 48 93              IDDOT:  DW      DOCOL PAD BL LIT 95 FILL
955D 6E 8A FE 8F CA 8F 25 8A F1 8E A0 93 56 8A C2 87          DW      DUP PFA LFA OVER SUB PAD SWAP CMOVE
956D A0 93 B9 91 97 85 1F 00 42 88                            DW      PAD COUNT LIT 31 AND
9577 25 8A 25 8A 6D 8C F1 8E A0 89 6E 8A 5E 8B                DW      OVER OVER ONE SUB PLUS DUP CAT
9585 97 85 7F 00 42 88 56 8A 8A 8B                            DW      LIT 0x7F AND SWAP CSTOR
958F CC 91 5B 8F F8 88                                        DW      TYPE SPACE SEMIS
                                                      
9595 86 43 52 45 41 54 C5                             HCREAT: DB      ^6 "CREAT" ^'E'                         ; ***** CREATE
959C 4B 95                                                    DW      HIDDOT
959E B0 8B A7 94 DB 85 10 00                          CREAT:  DW      DOCOL DFIND ZBRAN +CREA10
95A6 41 8A E8 8F 51 95 97 85 04 00 9A 9B 5B 8F                DW      DROP NFA IDDOT LIT 4 MESS SPACE
95B4 81 8E 6E 8A 5E 8B 04 8D 47 8B F0 98 5D 8E A0 8E  CREA10: DW      HERE DUP CAT WIDTH AT MIN ONEP ALLOT
95C4 6E 8A 97 85 A0 00 07 8B 81 8E 6D 8C F1 8E                DW      DUP LIT 0xA0 TOGGL HERE ONE SUB
95D2 97 85 80 00 07 8B BA 8F D0 8E 9E 8D 47 8B 73 8B          DW      LIT 0x80 TOGGL LATES COMMA CURR AT STORE
95E2 81 8E 6D 8E D0 8E F8 88                                  DW      HERE TWOP COMMA SEMIS
                                                      
95EA C9 5B 43 4F 4D 50 49 4C 45 DD                    HBCOMP: DB      ^^9 "[COMPILE" ^']'                     ; ***** [COMPILE]
95F4 95 95                                                    DW      HCREAT
95F6 B0 8B A7 94 53 89 65 8C 26 90                    BCOMP:  DW      DOCOL DFIND ZEQU ZERO QERR
9600 41 8A DA 8F D0 8E F8 88                                  DW      DROP CFA COMMA SEMIS
                                                      
9608 C7 4C 49 54 45 52 41 CC                          HLITER: DB      ^^7 "LITERA" ^'L'                       ; ***** LITERAL
9610 EA 95                                                    DW      HBCOMP
9612 B0 8B AA 8D 47 8B DB 85 08 00                    LITER:  DW      DOCOL STATE AT ZBRAN +LITE10
961C B9 90 97 85 D0 8E                                        DW      COMP LIT COMMA
9622 F8 88                                            LITE10: DW      SEMIS
                                                      
9624 C8 44 4C 49 54 45 52 41 CC                       HDLITE: DB      ^^8 "DLITERA" ^'L'                      ; ***** DLITERAL
962D 08 96                                                    DW      HLITER
962F B0 8B AA 8D 47 8B DB 85 08 00                    DLITE:  DW      DOCOL STATE AT ZBRAN +DLIT10
9639 56 8A 12 96 12 96                                        DW      SWAP LITER LITER
963F F8 88                                            DLIT10: DW      SEMIS
                                                      
9641 82 55 BC                                         HULESS: DB      ^2 "U" ^'<'                             ; ***** U<
9644 24 96                                                    DW      HDLITE
9646 B0 8B 25 8A 25 8A 63 88 7E 89 DB 85 0C 00        ULESS:  DW      DOCOL OVER OVER XOR ZLESS ZBRAN +ULES10
9654 41 8A 7E 89 53 89 C9 85 06 00                            DW      DROP ZLESS ZEQU BRAN +ULES20
965E F1 8E 7E 89                                      ULES10: DW      SUB ZLESS
9662 F8 88                                            ULES20: DW      SEMIS
                                                      
9664 86 3F 53 54 41 43 CB                             HQSTAC: DB      ^6 "?STAC" ^'K'                         ; ***** ?STACK
966B 41 96                                                    DW      HULESS
966D B0 8B 7C 88 E5 8C 47 8B 56 8A 46 96              QSTAC:  DW      DOCOL SPAT SZERO AT SWAP ULESS
9679 6D 8C 26 90 7C 88 81 8E 97 85 80 00                      DW      ONE QERR SPAT HERE LIT 128
9685 A0 89 46 96 75 8C 26 90 F8 88                            DW      PLUS ULESS TWO QERR SEMIS
                                                      
968F 89 49 4E 54 45 52 50 52 45 D4                    HINTER: DB      ^9 "INTERPRE" ^'T'                      ; ***** INTERPRET
9699 64 96                                                    DW      HQSTAC
969B B0 8B                                            INTER:  DW      DOCOL
969D A7 94 DB 85 1E 00                                INTE10: DW      DFIND ZBRAN +INTE40
96A3 AA 8D 47 8B 25 8F DB 85 0A 00                            DW      STATE AT LESS ZBRAN +INTE20
96AD DA 8F D0 8E C9 85 06 00                                  DW      CFA COMMA BRAN +INTE30
96B5 DA 8F A9 85                                      INTE20: DW      CFA EXEC
96B9 6D 96 C9 85 1C 00                                INTE30: DW      QSTAC BRAN +INTE70
96BF 81 8E 4F 94 BF 8D 47 8B 5D 8E DB 85 08 00        INTE40: DW      HERE NUMB DPL AT ONEP ZBRAN +INTE50
96CD 2F 96 C9 85 06 00                                        DW      DLITE BRAN +INTE60
96D3 41 8A 12 96                                      INTE50: DW      DROP LITER
96D7 6D 96                                            INTE60: DW      QSTAC
96D9 C9 85 C2 FF                                      INTE70: DW      BRAN +INTE10
                                                      
96DD 89 49 4D 4D 45 44 49 41 54 C5                    HIMMED: DB      ^9 "IMMEDIAT" ^'E'                      ; ***** IMMEDIATE
96E7 8F 96                                                    DW      HINTER
96E9 B0 8B BA 8F 97 85 40 00 07 8B F8 88              IMMED:  DW      DOCOL LATES LIT 0x40 TOGGL SEMIS
                                                      
96F5 8A 56 4F 43 41 42 55 4C 41 52 D9                 HVOCAB: DB      ^10 "VOCABULAR" ^'Y'                    ; ***** VOCABULARY
9700 DD 96                                                    DW      HIMMED
9702 B0 8B 5C 91 97 85 81 A0 D0 8E                    VOCAB:  DW      DOCOL BUILD LIT 0xa081 COMMA
970C 9E 8D 47 8B DA 8F D0 8E                                  DW      CURR AT CFA COMMA
9714 81 8E 36 8D 47 8B D0 8E 36 8D 73 8B 6C 91                DW      HERE VOCL AT COMMA VOCL STORE DOES
9722 6D 8E 90 8D 73 8B F8 88                          DOVOC:  DW      TWOP CONT STORE SEMIS
                                                      
972A 8B 44 45 46 49 4E 49 54 49 4F 4E D3              HDEFIN: DB      ^11 "DEFINITION" ^'S'                   ; ***** DEFINITIONS
9736 F5 96                                                    DW      HVOCAB
9738 B0 8B 90 8D 47 8B 9E 8D 73 8B F8 88              DEFIN:  DW      DOCOL CONT AT CURR STORE SEMIS
                                                      
9744 81 A8                                            HPAREN: DB      ^1 ^'('                                 ; ***** (
9746 2A 97                                                    DW      HDEFIN
9748 B0 8B 97 85 29 00 B3 93 F8 88                    PAREN:  DW      DOCOL LIT ')' WORD SEMIS
                                                      
9752 84 51 55 49 D4                                   HQUIT:  DB      ^4 "QUI" ^'T'                           ; ***** QUIT
9757 44 97                                                    DW      HPAREN
9759 B0 8B 65 8C 58 8D 73 8B CF 90                    QUIT:   DW      DOCOL ZERO BLK STORE LBRAC
9763 B5 88 02 9E F5 92 9B 96 AA 8D 47 8B              QUIT10: DW      RPSTO CR QUERY INTER STATE AT
976F 53 89 DB 85 08 00                                        DW      ZEQU ZBRAN +QUIT20
9775 2D 92                                                    DW      PDOTQ
9777 03 20 6F 6B                                              DB      3 32 "ok"
977B C9 85 E6 FF                                      QUIT20: DW      BRAN +QUIT10
                                                      
977F 85 41 42 4F 52 D4                                HABORT: DB      ^5 "ABOR" ^'T'                          ; ***** ABORT
9785 52 97                                                    DW      HQUIT
9787 B0 8B                                            ABORT:  DW      DOCOL
9789 B5 88 93 88 1A 91 5B 8F                          ABOR10: DW      RPSTO SPSTO DEC SPACE
9791 97 85 89 F6 47 8B 97 85 5C 20 F1 8E DB 85 1C 00          DW      LIT XUP AT LIT MAGIC SUB ZBRAN +ABOR20
97A1 65 8C 97 85 89 F6 73 8B 02 9E 2D 92                      DW      ZERO LIT XUP STORE CR PDOTQ
97AD 0D 4D 69 6E 69 6D 61 6C 2D 46 4F 52 54 48                DB      13 "Minimal-FORTH"
97BB F3 A2 38 97 59 97                                ABOR20: DW      FORTH DEFIN QUIT
                                                      
                                                      ; INCLUDE         coldwarm.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; COLD AND WARM START ENTRY POINTS
                                                      
97C1 0E FE                                            CENT:   LDI     0xFE            ; Initialize Minimal stack pointer
97C3 16 FF FF                                                 STA     0xFFFF          ; :
97C6 0E EE                                                    LDI     <COLD10         ; Start by executing COLD
97C8 16 E2 FE                                                 STA     IP.0            ; :
97CB 0E 97                                                    LDI     >COLD10         ; :
97CD 16 E3 FE                                                 STA     IP.1            ; :
97D0 14 1F 85                                                 JPA     NEXT            ; ... and over to FORTH VM
                                                      
97D3 0E FE                                            WENT:   LDI     0xFE            ; Initialize Minimal stack pointer
97D5 16 FF FF                                                 STA     0xFFFF          ; :
97D8 0E 89                                                    LDI     <ABOR10         ; Start by executing ABORT
97DA 16 E2 FE                                                 STA     IP.0            ; :
97DD 0E 97                                                    LDI     >ABOR10         ; :
97DF 16 E3 FE                                                 STA     IP.1            ; :
97E2 14 1F 85                                                 JPA     NEXT            ; ... and over to FORTH VM
                                                      
97E5 84 43 4F 4C C4                                   HCOLD:  DB      ^4 "COL" ^'D'                           ; ***** COLD
97EA 7F 97                                                    DW      HABORT
97EC B0 8B                                            COLD:   DW      DOCOL
                                                      COLD10: ; Init FORTH registers
97EE B5 88 93 88 D7 88                                        DW      RPSTO SPSTO UPSTO
                                                              ; Set FORTH vocabulary
97F4 97 85 0C 00 B6 8C 47 8B                                  DW      LIT 12 PORIG AT
97FC 97 85 06 00 97 85 F3 A2 A0 89 73 8B                      DW      LIT 6 LIT FORTH PLUS STORE
                                                              ; Init 12 items (24 bytes) in user area ...
                                                              ; ... with values from boot table
9808 97 85 12 00 B6 8C                                        DW      LIT 18 PORIG
980E 97 85 10 00 B6 8C 47 8B 97 85 06 00 A0 89                DW      LIT 16 PORIG AT LIT 6 PLUS
981C 97 85 18 00 C2 87                                        DW      LIT 24 CMOVE
                                                              ; Erase disk buffers
9822 97 85 22 00 B6 8C 47 8B 97 85 24 00 B6 8C 47 8B          DW      LIT 34 PORIG AT LIT 36 PORIG AT
9832 25 8A F1 8E 68 93                                        DW      OVER SUB ERASE
                                                              ; Initialize some of the user variables
9838 65 8C 61 8D 73 8B 65 8C 6B 8D 73 8B                      DW      ZERO IN STORE ZERO OUT STORE
9844 42 8D 47 8B F0 8D 73 8B 42 8D 47 8B FB 8D 73 8B          DW      FIRST AT USE STORE FIRST AT PREV STORE
                                                              ; Set minimum environment for autoexec of SCR #1
9854 F3 A2 38 97 1A 91 65 8C 58 8D 73 8B CF 90                DW      FORTH DEFIN DEC ZERO BLK STORE LBRAC
                                                              ; Try to load ("autoexec") SCR #1
9862 6D 8C 05 9B 6E 8A 47 8B                                  DW      ONE BLOCK DUP AT
986A 97 85 5C 20 13 8F DB 85 10 00                            DW      LIT MAGIC EQUAL ZBRAN +COLD20
9874 6D 8C D0 9B 97 85 5C 20 97 85 89 F6 73 8B                DW      ONE LOAD LIT MAGIC LIT XUP STORE
                                                              ; Continue via ABORT
9882 87 97                                            COLD20: DW      ABORT
                                                      
                                                      ; INCLUDE         math.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; MATHEMATICS WORDS
                                                      
9884 84 53 2D 3E C4                                   HSTOD:  DB      ^4 "S->" ^'D'                           ; ***** S->D
9889 E5 97                                                    DW      HCOLD
988B 8D 98                                            STOD:   DW      STOD0
988D 2C EC FE                                         STOD0:  CLW     R1              ; Assume high word zero
9890 2E E6 FE                                                 INW     SP              ; Get operand high byte
9893 1D E6 FE                                                 LDR     SP              ; :
9896 11 00                                                    CPI     0               ; Negative?
9898 3F A1 98                                                 BMI     STOD10          ; YES: Push 0xFFFF
989B 2F E6 FE                                                 DEW     SP              ; :
989E 14 0D 85                                                 JPA     PUSH            ; NO: Push 0x0000
98A1 2F E6 FE                                         STOD10: DEW     SP              ; :
98A4 2F EC FE                                                 DEW     R1              ; Make 0x0000 into 0xFFFF
98A7 14 0D 85                                                 JPA     PUSH            ; Done
                                                      
98AA 82 2B AD                                         HPM:    DB      ^2 "+" ^'-'                             ; ***** +-
98AD 84 98                                                    DW      HSTOD
98AF B0 8B 7E 89 DB 85 04 00                          PM:     DW      DOCOL ZLESS ZBRAN +PM10
98B7 C6 89                                                    DW      MINUS
98B9 F8 88                                            PM10:   DW      SEMIS
                                                      
98BB 83 44 2B AD                                      HDPM:   DB      ^3 "D+" ^'-'                            ; ***** D+-
98BF AA 98                                                    DW      HPM
98C1 B0 8B 7E 89 DB 85 04 00                          DPM:    DW      DOCOL ZLESS ZBRAN +DPM10
98C9 DA 89                                                    DW      DMINU
98CB F8 88                                            DPM10:  DW      SEMIS
                                                      
98CD 83 41 42 D3                                      HABS:   DB      ^3 "AB" ^'S'                            ; ***** ABS
98D1 BB 98                                                    DW      HDPM
98D3 B0 8B 6E 8A AF 98 F8 88                          ABS:    DW      DOCOL DUP PM SEMIS
                                                      
98DB 84 44 41 42 D3                                   HDABS:  DB      ^4 "DAB" ^'S'                           ; ***** DABS
98E0 CD 98                                                    DW      HABS
98E2 B0 8B 6E 8A C1 98 F8 88                          DABS:   DW      DOCOL DUP DPM SEMIS
                                                      
98EA 83 4D 49 CE                                      HMIN:   DB      ^3 "MI" ^'N'                            ; ***** MIN
98EE DB 98                                                    DW      HDABS
98F0 B0 8B 25 8A 25 8A 37 8F DB 85 04 00              MIN:    DW      DOCOL OVER OVER GREAT ZBRAN +MIN10
98FC 56 8A                                                    DW      SWAP
98FE 41 8A F8 88                                      MIN10:  DW      DROP SEMIS
                                                      
9902 83 4D 41 D8                                      HMAX:   DB      ^3 "MA" ^'X'                            ; ***** MAX
9906 EA 98                                                    DW      HMIN
9908 B0 8B 25 8A 25 8A 25 8F DB 85 04 00              MAX:    DW      DOCOL OVER OVER LESS ZBRAN +MAX10
9914 56 8A                                                    DW      SWAP
9916 41 8A F8 88                                      MAX10:  DW      DROP SEMIS
                                                      
991A 82 4D AA                                         HMSTAR: DB      ^2 "M" ^'*'                             ; ****** M*
991D 02 99                                                    DW      HMAX
991F B0 8B 25 8A 25 8A 63 88 2A 89 D3 98 56 8A D3 98  MSTAR:  DW      DOCOL OVER OVER XOR TOR ABS SWAP ABS
992F EE 87 3A 89 C1 98 F8 88                                  DW      USTAR FROMR DPM SEMIS
                                                      
9937 82 4D AF                                         HMSLAS: DB      ^2 "M" ^'/'                             ; ***** M/
993A 1A 99                                                    DW      HMSTAR
993C B0 8B 25 8A 2A 89 2A 89 E2 98 46 89 D3 98        MSLAS:  DW      DOCOL OVER TOR TOR DABS R ABS
994A 22 88 3A 89 46 89 63 88 AF 98 56 8A                      DW      USLAS FROMR R XOR PM SWAP
9956 3A 89 AF 98 56 8A F8 88                                  DW      FROMR PM SWAP SEMIS
                                                      
995E 81 AA                                            HSTAR:  DB      ^1 ^'*'                                 ; ***** *
9960 37 99                                                    DW      HMSLAS
9962 B0 8B 1F 99 41 8A F8 88                          STAR:   DW      DOCOL MSTAR DROP SEMIS
                                                      
996A 84 2F 4D 4F C4                                   HSLMOD: DB      ^4 "/MO" ^'D'                           ; ***** /MOD
996F 5E 99                                                    DW      HSTAR
9971 B0 8B 2A 89 8B 98 3A 89 3C 99 F8 88              SLMOD:  DW      DOCOL TOR STOD FROMR MSLAS SEMIS
                                                      
997D 81 AF                                            HSLAS:  DB      ^1 ^'/'                                 ; ***** /
997F 6A 99                                                    DW      HSLMOD
9981 B0 8B 71 99 56 8A 41 8A F8 88                    SLASH:  DW      DOCOL SLMOD SWAP DROP SEMIS
                                                      
998B 83 4D 4F C4                                      HMOD:   DB      ^3 "MO" ^'D'                            ; ***** MOD
998F 7D 99                                                    DW      HSLAS
9991 B0 8B 71 99 41 8A F8 88                          MOD:    DW      DOCOL SLMOD DROP SEMIS
                                                      
9999 85 2A 2F 4D 4F C4                                HSSMOD: DB      ^5 "*/MO" ^'D'                          ; ***** */MOD
999F 8B 99                                                    DW      HMOD
99A1 B0 8B 2A 89 1F 99 3A 89 3C 99 F8 88              SSMOD:  DW      DOCOL TOR MSTAR FROMR MSLAS SEMIS
                                                      
99AD 82 2A AF                                         HSSLA:  DB      ^2 "*" ^'/'                             ; ***** */
99B0 99 99                                                    DW      HSSMOD
99B2 B0 8B A1 99 56 8A 41 8A F8 88                    SSLA:   DW      DOCOL SSMOD SWAP DROP SEMIS
                                                      
99BC 85 4D 2F 4D 4F C4                                HMSMOD: DB      ^5 "M/MO" ^'D'                          ; ***** M/MOD
99C2 99 99                                                    DW      HSSMOD
99C4 B0 8B 2A 89 65 8C 46 89 22 88 3A 89              MSMOD:  DW      DOCOL TOR ZERO R USLAS FROMR
99D0 56 8A 2A 89 22 88 3A 89 F8 88                            DW      SWAP TOR USLAS FROMR SEMIS
                                                      
                                                      ; INCLUDE         diskio.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; DISK I/O
                                                      
99DA 83 52 2F D7                                      HRW:    DB      ^3 "R/" ^'W'                            ; ***** R/W
99DE BC 99                                                    DW      HMSMOD
99E0 B0 8B 2A 89                                      RW:     DW      DOCOL TOR
99E4 97 85 20 00 71 99 5D 8E 2C 8B                            DW      LIT 32 SLMOD ONEP TBANK
99EE 97 85 00 04 62 99 3A 89 DB 85 04 00                      DW      LIT 1024 STAR FROMR ZBRAN +RW10
99FA 56 8A                                                    DW      SWAP
99FC 97 85 00 04 C2 87 F8 88                          RW10:   DW      LIT 1024 CMOVE SEMIS
                                                      
9A04 84 2B 42 55 C6                                   HPBUF:  DB      ^4 "+BU" ^'F'                           ; ***** +BUF
9A09 DA 99                                                    DW      HRW
9A0B B0 8B 9C 8C 97 85 04 00 A0 89 A0 89              PBUF:   DW      DOCOL BBUF LIT 4 PLUS PLUS
9A17 6E 8A 4E 8D 47 8B 13 8F DB 85 08 00                      DW      DUP LIMIT AT EQUAL ZBRAN +PBUF10
9A23 41 8A 42 8D 47 8B                                        DW      DROP FIRST AT
9A29 6E 8A FB 8D 47 8B F1 8E F8 88                    PBUF10: DW      DUP PREV AT SUB SEMIS
                                                      
9A33 86 55 50 44 41 54 C5                             HUPDAT: DB      ^6 "UPDAT" ^'E'                         ; ***** UPDATE
9A3A 04 9A                                                    DW      HPBUF
9A3C B0 8B FB 8D 47 8B 47 8B 97 85 00 80              UPDAT:  DW      DOCOL PREV AT AT LIT 0x8000
9A48 52 88 FB 8D 47 8B 73 8B F8 88                            DW      OR PREV AT STORE SEMIS
                                                      
9A52 8D 45 4D 50 54 59 2D 42 55 46 46 45 52 D3        HMTBUF: DB      ^13 "EMPTY-BUFFER" ^'S'                 ; ***** EMPTY-BUFFERS
9A60 33 9A                                                    DW      HUPDAT
9A62 B0 8B 42 8D 47 8B 4E 8D 47 8B                    MTBUF:  DW      DOCOL FIRST AT LIMIT AT
9A6C 25 8A F1 8E 68 93 F8 88                                  DW      OVER SUB ERASE SEMIS
                                                      
9A74 85 46 4C 55 53 C8                                HFLUSH: DB      ^5 "FLUS" ^'H'                          ; ***** FLUSH
9A7A 52 9A                                                    DW      HMTBUF
9A7C B0 8B 4E 8D 47 8B 42 8D 47 8B 71 86              FLUSH:  DW      DOCOL LIMIT AT FIRST AT XDO
9A88 83 86 47 8B 7E 89 DB 85 14 00                    FLUS10: DW      I AT ZLESS ZBRAN +FLUS20
9A92 83 86 6D 8E 83 86 47 8B 97 85 FF 7F                      DW      I TWOP I AT LIT 0x7FFF
9A9E 42 88 65 8C E0 99                                        DW      AND ZERO RW
9AA4 9C 8C 97 85 04 00 A0 89 0F 86 DA FF              FLUS20: DW      BBUF LIT 4 PLUS XPLOO +FLUS10
9AB0 62 9A F8 88                                              DW      MTBUF SEMIS
                                                      
9AB4 86 42 55 46 46 45 D2                             HBUFFE: DB      ^6 "BUFFE" ^'R'                         ; ***** BUFFER
9ABB 74 9A                                                    DW      HFLUSH
9ABD B0 8B F0 8D 47 8B 6E 8A 2A 89                    BUFFE:  DW      DOCOL USE AT DUP TOR
9AC7 0B 9A DB 85 FC FF                                BUFF10: DW      PBUF ZBRAN +BUFF10
9ACD F0 8D 73 8B 46 89 47 8B 7E 89 DB 85 14 00                DW      USE STORE R AT ZLESS ZBRAN +BUFF20
9ADB 46 89 6D 8E 46 89 47 8B 97 85 FF 7F                      DW      R TWOP R AT LIT 0x7FFF
9AE7 42 88 65 8C E0 99                                        DW      AND ZERO RW
9AED 46 89 73 8B 46 89 FB 8D 73 8B 3A 89 6D 8E F8 88  BUFF20: DW      R STORE R PREV STORE FROMR TWOP SEMIS
                                                      
9AFD 85 42 4C 4F 43 CB                                HBLOCK: DB      ^5 "BLOC" ^'K'                          ; ***** BLOCK
9B03 B4 9A                                                    DW      HBUFFE
9B05 B0 8B 2A 89 FB 8D 47 8B 6E 8A 47 8B              BLOCK:  DW      DOCOL TOR PREV AT DUP AT
9B11 97 85 FF 7F 42 88 46 89 F1 8E DB 85 36 00                DW      LIT 0x7FFF AND R SUB ZBRAN +BLOC30
9B1F 0B 9A 53 89 DB 85 14 00                          BLOC10: DW      PBUF ZEQU ZBRAN +BLOC20
9B27 41 8A 46 89 BD 9A 6E 8A 46 89                            DW      DROP R BUFFE DUP R
9B31 6D 8C E0 99 75 8C F1 8E                                  DW      ONE RW TWO SUB
9B39 6E 8A 47 8B 97 85 FF 7F 42 88 46 89              BLOC20: DW      DUP AT LIT 0x7FFF AND R
9B45 F1 8E 53 89 DB 85 D4 FF                                  DW      SUB ZEQU ZBRAN +BLOC10
9B4D 6E 8A FB 8D 73 8B                                        DW      DUP PREV STORE
9B53 3A 89 41 8A 6D 8E F8 88                          BLOC30: DW      FROMR DROP TWOP SEMIS
                                                      
9B5B 86 28 4C 49 4E 45 A9                             HPLINE: DB      ^6 "(LINE" ^')'                         ; ***** (LINE)
9B62 FD 9A                                                    DW      HBLOCK
9B64 B0 8B 2A 89 90 8C 9C 8C A1 99 3A 89 A8 8C        PLINE:  DW      DOCOL TOR CL BBUF SSMOD FROMR BSCR
9B72 62 99 A0 89 05 9B A0 89 90 8C F8 88                      DW      STAR PLUS BLOCK PLUS CL SEMIS
                                                      
9B7E 85 2E 4C 49 4E C5                                HDLINE: DB      ^5 ".LIN" ^'E'                          ; ***** .LINE
9B84 5B 9B                                                    DW      HPLINE
9B86 B0 8B 64 9B FA 91 CC 91 F8 88                    DLINE:  DW      DOCOL PLINE DTRAI TYPE SEMIS
                                                      
9B90 87 4D 45 53 53 41 47 C5                          HMESS:  DB      ^7 "MESSAG" ^'E'                        ; ***** MESSAGE
9B98 7E 9B                                                    DW      HDLINE
9B9A B0 8B 12 8D 47 8B DB 85 1A 00                    MESS:   DW      DOCOL WARN AT ZBRAN +MESS20
9BA4 6A 8F DB 85 10 00                                        DW      DDUP ZBRAN +MESS10
9BAA 97 85 10 00 71 99 97 85 04 00 A0 89 86 9B                DW      LIT 16 SLMOD LIT 4 PLUS DLINE
9BB8 C9 85 0D 00                                      MESS10: DW      BRAN +MESS30
9BBC 2D 92                                            MESS20: DW      PDOTQ
9BBE 06 4D 53 47 20 23 20                                     DB      6 "MSG" 32 '#' 32
9BC5 E8 A1                                                    DW      DOT
9BC7 F8 88                                            MESS30: DW      SEMIS
                                                      
9BC9 84 4C 4F 41 C4                                   HLOAD:  DB      ^4 "LOA" ^'D'                           ; ***** LOAD
9BCE 90 9B                                                    DW      HMESS
9BD0 B0 8B 58 8D 47 8B 2A 89 61 8D 47 8B 2A 89 65 8C  LOAD:   DW      DOCOL BLK AT TOR IN AT TOR ZERO IN
9BE0 61 8D 73 8B A8 8C 62 99 58 8D 73 8B 9B 96                DW      STORE BSCR STAR BLK STORE INTER
9BEE 3A 89 61 8D 73 8B 3A 89 58 8D 73 8B F8 88                DW      FROMR IN STORE FROMR BLK STORE SEMIS
                                                      
9BFC C3 2D 2D BE                                      HARROW: DB      ^^3 "--" ^'>'                           ; ***** -->
9C00 C9 9B                                                    DW      HLOAD
9C02 B0 8B 9F 90 65 8C 61 8D 73 8B A8 8C 58 8D 47 8B  ARROW:  DW      DOCOL QLOAD ZERO IN STORE BSCR BLK AT
9C12 25 8A 91 99 F1 8E 58 8D E6 8A F8 88                      DW      OVER MOD SUB BLK PSTOR SEMIS
                                                      
                                                      ; INCLUDE         extras.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; EXTRAS (added by SlowCorners)
                                                      
9C1E 84 4E 4F 4F D0                                   HNOOP:  DB      ^4 "NOO" ^'P'                           ; ***** NOOP
9C23 FC 9B                                                    DW      HARROW
9C25 B0 8B                                            NOOP:   DW      DOCOL
9C27 F8 88                                            NOO10:  DW      SEMIS
                                                      
9C29 C5 41 53 43 49 C9                                HASCII: DB      ^^5 "ASCI" ^'I'                         ; ***** ASCII
9C2F 1E 9C                                                    DW      HNOOP
9C31 B0 8B 86 8C B3 93 81 8E 5D 8E                    ASCII:  DW      DOCOL BL WORD HERE ONEP
9C3B 5E 8B AA 8D 47 8B DB 85 04 00                            DW      CAT STATE AT ZBRAN +ASCI10
9C45 12 96                                                    DW      LITER
9C47 F8 88                                            ASCI10: DW      SEMIS
                                                      
9C49 C1 DC                                            HBSLAS: DB      ^^1 ^'\'                                ; ***** \
9C4B 29 9C                                                    DW      HASCII
9C4D B0 8B 58 8D 47 8B DB 85 1C 00                    BSLAS:  DW      DOCOL BLK AT ZBRAN +BSLA10
9C57 61 8D 47 8B 6E 8A 90 8C 91 99 90 8C 56 8A                DW      IN AT DUP CL MOD CL SWAP
9C65 F1 8E A0 89 61 8D 73 8B C9 85 06 00                      DW      SUB PLUS IN STORE BRAN +BSLA20
9C71 6D 8C B3 93                                      BSLA10: DW      ONE WORD
9C75 F8 88                                            BSLA20: DW      SEMIS
                                                      
9C77 84 54 41 53 CB                                   HTASK:  DB      ^4 "TAS" ^'K'                           ; ***** TASK
9C7C 49 9C                                                    DW      HBSLAS
9C7E B0 8B 5C 91 65 8C D0 8E                          TASK:   DW      DOCOL BUILD ZERO COMMA
9C86 97 85 25 9C D0 8E 65 8C D0 8E 6C 91                      DW      LIT NOOP COMMA ZERO COMMA DOES
9C92 F8 88                                            DOTAS:  DW      SEMIS
                                                      
9C94 84 52 55 4E D3                                   HRUNS:  DB      ^4 "RUN" ^'S'                           ; ***** RUNS
9C99 77 9C                                                    DW      HTASK
9C9B B0 8B 87 9F DA 8F 56 8A 6D 8E 73 8B F8 88        RUNS:   DW      DOCOL TICK CFA SWAP TWOP STORE SEMIS
                                                      
                                                      ; To be added as primaries: STOP AFTER NOW
                                                      
9CA9 87 52 45 51 55 49 52 C5                          HRQUIR: DB      ^7 "REQUIR" ^'E'                        ; ***** REQUIRE
9CB1 94 9C                                                    DW      HRUNS
9CB3 B0 8B A7 94 C9 85 08 00                          RQUIR:  DW      DOCOL DFIND BRAN +RQUI10
9CBB 9F 8A C9 85 08 00                                        DW      TDROP BRAN +RQUI20
9CC1 97 85 22 00 21 95                                RQUI10: DW      LIT 34 ERROR
9CC7 F8 88                                            RQUI20: DW      SEMIS
                                                      
9CC9 82 3E BC                                         HBOUND: DB      ^2 ">" ^'<'                             ; ***** ><
9CCC A9 9C                                                    DW      HRQUIR
9CCE B0 8B 2A 89 08 99 3A 89 F0 98 F8 88              BOUND:  DW      DOCOL TOR MAX FROMR MIN SEMIS
                                                      
9CDA 84 44 4F 45 D2                                   HDOER:  DB      ^4 "DOE" ^'R'                           ; ***** DOER
9CDF C9 9C                                                    DW      HBOUND
9CE1 B0 8B 5C 91 97 85 27 9C D0 8E 6C 91              DOER:   DW      DOCOL BUILD LIT NOO10 COMMA DOES
9CED 47 8B 2A 89 F8 88                                DODOR:  DW      AT TOR SEMIS
                                                      
9CF3 84 4D 41 4B C5                                   HMAKE:  DB      ^4 "MAK" ^'E'                           ; ***** MAKE
9CF8 DA 9C                                                    DW      HDOER
9CFA B0 8B A7 94 53 89 65 8C 26 90 41 8A 6D 8E A7 94  MAKE:   DW      DOCOL DFIND ZEQU ZERO QERR DROP TWOP DFIND
9D0A 53 89 65 8C 26 90 41 8A AA 8D 47 8B DB 85 0E 00          DW      ZEQU ZERO QERR DROP STATE AT ZBRAN +MAKE10
9D1A 12 96 12 96 B9 90 73 8B C9 85 06 00                      DW      LITER LITER COMP STORE BRAN +MAKE20
9D26 56 8A 73 8B                                      MAKE10: DW      SWAP STORE
9D2A F8 88                                            MAKE20: DW      SEMIS
                                                      
9D2C 86 28 54 52 55 45 A9                             HPTRUE: DB      ^6 "(TRUE" ^')'                         ; ***** (TRUE)
9D33 F3 9C                                                    DW      HMAKE
9D35 B0 8B                                            PTRUE:  DW      DOCOL
9D37 5D 8C F8 88                                      PTR10:  DW      MONE SEMIS
                                                      
9D3B 84 54 52 55 C5                                   HTRUE:  DB      ^4 "TRU" ^'E'                           ; ***** TRUE
9D40 2C 9D                                                    DW      HPTRUE
9D42 78 91 ED 9C 37 9D                                TRUE:   DW      DODOE DODOR PTR10
                                                      
9D48 85 46 41 4C 53 C5                                HFALSE: DB      ^5 "FALS" ^'E'                          ; ***** FALSE
9D4E 3B 9D                                                    DW      HTRUE
9D50 F8 8B 00 00                                      FALSE:  DW      DOCON 0
                                                      
9D54 86 28 45 4D 49 54 A9                             HPEMIT: DB      ^6 "(EMIT" ^')'                         ; ***** (EMIT)
9D5B 48 9D                                                    DW      HFALSE
9D5D B0 8B                                            PEMIT:  DW      DOCOL
9D5F 69 9D 6D 8C 6B 8D E6 8A F8 88                    PEM10:  DW      XEMIT ONE OUT PSTOR SEMIS
                                                              ;
9D69 6B 9D                                            XEMIT:  DW      XEMIT0
9D6B 38 73 80                                         XEMIT0: JPS     _POP1           ; Get character
9D6E 15 EC FE                                                 LDA     R1.0            ; Send char to terminal
9D71 02                                                       OUT                     ; :
9D72 14 1F 85                                                 JPA     NEXT            ; Done
                                                      
9D75 84 45 4D 49 D4                                   HEMIT:  DB      ^4 "EMI" ^'T'                           ; ***** EMIT
9D7A 54 9D                                                    DW      HPEMIT
9D7C 78 91 ED 9C 5F 9D                                EMIT:   DW      DODOE DODOR PEM10
                                                      
9D82 85 28 4B 45 59 A9                                HPKEY:  DB      ^5 "(KEY" ^')'                          ; ***** (KEY)
9D88 75 9D                                                    DW      HEMIT
9D8A B0 8B                                            PKEY:   DW      DOCOL
9D8C D1 9D DB 85 06 00                                PKE10:  DW      PQTER ZBRAN +PKEY20
9D92 9E 9D F8 88                                              DW      XKEY SEMIS
9D96 1C 9F                                            PKEY20: DW      DISPA
9D98 25                                               PKEY30: DB      <NOOP           ; This word is the task vector ...
9D99 9C                                               PKEY31: DB      >NOOP           ; ... updated by DISPATCH
9D9A C9 85 F0 FF                                              DW      BRAN +PKE10
                                                              ;
9D9E A0 9D                                            XKEY:   DW      XKEY0
9DA0 24 ED FE                                         XKEY0:  CLB     R1.1            ; Clear MSB of result
9DA3 15 FA FE                                                 LDA     CHIN            ; Any character buffered?
9DA6 11 FF                                                    CPI     0xFF            ; :
9DA8 3A AC 9D                                                 BNE     XKEY10          ; YES: We use the buffered character
9DAB 0A                                                       INP                     ; NO: Read whatever is on the input port
9DAC 16 EC FE                                         XKEY10: STA     R1.0            ; YES: This is in any case the result
9DAF 0E FF                                                    LDI     0xFF            ; Mark input buffer as available
9DB1 16 FA FE                                                 STA     CHIN            ; :
9DB4 14 0D 85                                                 JPA     PUSH            ; Done
                                                      
9DB7 83 4B 45 D9                                      HKEY:   DB      ^3 "KE" ^'Y'                            ; ***** KEY
9DBB 82 9D                                                    DW      HPKEY
9DBD 78 91 ED 9C 8C 9D                                KEY:    DW      DODOE DODOR PKE10
                                                      
9DC3 8B 28 3F 54 45 52 4D 49 4E 41 4C A9              HPQTER: DB      ^11 "(?TERMINAL" ^')'                    ; ***** (?TERMINAL)
9DCF B7 9D                                                    DW      HKEY
9DD1 B0 8B                                            PQTER:  DW      DOCOL
9DD3 D7 9D F8 88                                      PQT10:  DW      XQTER SEMIS
                                                              ;
9DD7 D9 9D                                            XQTER:  DW      XQTER0
9DD9 2C EC FE                                         XQTER0: CLW     R1              ; Default FALSE to return
9DDC 0A                                                       INP                     ; Get char from terminal
9DDD 11 FF                                                    CPI     0xFF            ; Did we get a character?
9DDF 3B E8 9D                                                 BEQ     QTER10          ; NO: Return FALSE
9DE2 16 FA FE                                                 STA     CHIN            ; YES: Put into buffer
9DE5 2F EC FE                                                 DEW     R1              ; Make default FALSE into TRUE
9DE8 14 0D 85                                         QTER10: JPA     PUSH            ; Push R1; NEXT
                                                      
9DEB 89 3F 54 45 52 4D 49 4E 41 CC                    HQTERM: DB      ^9 "?TERMINA" ^'L'                      ; ***** ?TERMINAL
9DF5 C3 9D                                                    DW      HPQTER
9DF7 78 91 ED 9C D3 9D                                QTERM:  DW      DODOE DODOR PQT10
                                                      
9DFD 82 43 D2                                         HCR:    DB      ^2 "C" ^'R'                             ; ***** CR
9E00 EB 9D                                                    DW      HQTERM
9E02 B0 8B 97 85 0D 00 7C 9D 97 85 0A 00 7C 9D F8 88  CR:     DW      DOCOL LIT 13 EMIT LIT 10 EMIT SEMIS
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; FORTH MULTITASKER
                                                      ;
                                                      ; The headerless word DISPATCH is the central point of the small
                                                      ; multitasker. It decrements the delay timer of the first task in the
                                                      ; task queue (and maybe following task timers as well, if needed).
                                                      ; If the task timer of the first task has expired (counted down to zero),
                                                      ; the task is delinked from the task queue and the corresponding
                                                      ; FORTH word is executed.
                                                      
                                                      ; ------------------------------
                                                      ;       GETCL
                                                      ; OUT:  R1     = (current tick count - LSTCLK)
                                                      ; OUT:  LSTCLK =  updated with current tick count
                                                      
9E12 15 FF FE                                         _GETCL: LDA     LSTCLK          ; R1.1 = LSTCLK
9E15 16 ED FE                                                 STA     R1.1            ; :
9E18 15 FC FE                                                 LDA     CLK1            ; LSTCLK = current tick count
9E1B 16 FF FE                                                 STA     LSTCLK          ; :
9E1E 18 ED FE                                                 SBA     R1.1
9E21 16 EC FE                                                 STA     R1.0            ; R1 = newticks - prevticks
9E24 24 ED FE                                                 CLB     R1.1            ; Clear MSB of R1
9E27 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       DECTI
                                                      ;       In:     R1 = delta tick count
                                                      ;       Out:    Nothing
                                                      
                                                              ; GET TASKS POINTER
9E28 15 C9 F6                                         _DECTI: LDA     XTASK0          ; R3 = Addr of first task
9E2B 16 F4 FE                                                 STA     R3.0            ; :
9E2E 15 CA F6                                                 LDA     XTASK1          ; :
9E31 16 F5 FE                                                 STA     R3.1            ; :
                                                              ; IS TASK ADDR ZERO? (I.E. END OF QUEUE)
9E34 15 F5 FE                                         DECT10: LDA     R3.1            ; Check task addr MSB
9E37 11 00                                                    CPI     0               ; MSB zero? (i.e. end of queue)
9E39 3A 45 9E                                                 BNE     DECT20          ; NO: Go decrement task timer(s)
9E3C 15 F4 FE                                                 LDA     R3.0            ; MSB is zero, check LSB
9E3F 11 00                                                    CPI     0               ; LSB zero?
9E41 3A 45 9E                                                 BNE     DECT20          ; NO: Go decrement task timer(s)
                                                              ; END OF QUEUE
9E44 39                                                       RTS                     ; Done
                                                              ; WE HAVE A TASK, GET TASK TIMER
9E45 1D F4 FE                                         DECT20: LDR     R3              ; R2 = task timer
9E48 16 F0 FE                                                 STA     R2.0            ; :
9E4B 2E F4 FE                                                 INW     R3              ; :
9E4E 1D F4 FE                                                 LDR     R3              ; :
9E51 16 F1 FE                                                 STA     R2.1            ; :
9E54 2F F4 FE                                                 DEW     R3              ; :
                                                              ; TASK TIMER ZERO?
9E57 15 F0 FE                                         DECT30: LDA     R2.0            ; Is task timer already zero?
9E5A 11 00                                                    CPI     0               ; LSB zero?
9E5C 3A 8D 9E                                                 BNE     DECT40          ; NO: Decrement timer
9E5F 15 F1 FE                                                 LDA     R2.1            ; LSB is zero, check MSB
9E62 11 00                                                    CPI     0               ; MSB zero?
9E64 3A 8D 9E                                                 BNE     DECT40          ; NO: Decrement timer
                                                              ; TASK TIMER IS ZERO, STEP TO NEXT TASK
9E67 15 F0 FE                                                 LDA     R2.0            ; Save task tick counter back to task
9E6A 1E F4 FE                                                 STR     R3              ; :
9E6D 2E F4 FE                                                 INW     R3              ; :
9E70 15 F1 FE                                                 LDA     R2.1            ; :
9E73 1E F4 FE                                                 STR     R3              ; :
9E76 0E 03                                                    LDI     3               ; Bump task pointer to link field
9E78 30 F4 FE                                                 ADW     R3              ; :
9E7B 38 6C 82                                                 JPS     _LD16           ; R1 = addr of next task
9E7E 15 EC FE                                                 LDA     R1.0            ; R3 = R1
9E81 16 F4 FE                                                 STA     R3.0            ; :
9E84 15 ED FE                                                 LDA     R1.1            ; :
9E87 16 F5 FE                                                 STA     R3.1            ; :
9E8A 14 34 9E                                                 JPA     DECT10          ; Go inspect this next task
                                                              ; DECREMENT TASK TIMER AND DELTA TICK COUNT
9E8D 2F F0 FE                                         DECT40: DEW     R2              ; Decrement task timer
9E90 2F EC FE                                                 DEW     R1              ; Also "consume" tick
                                                              ; DELTA TICK COUNT ZERO?
9E93 15 EC FE                                                 LDA     R1.0            ; Is delta tick count zero?
9E96 11 00                                                    CPI     0               ; LSB zero?
9E98 3A 57 9E                                                 BNE     DECT30          ; NO: Go check task timer for zero
9E9B 15 ED FE                                                 LDA     R1.1            ; LSB is zero, check MSB
9E9E 11 00                                                    CPI     0               ; MSB zero?
9EA0 3A 57 9E                                                 BNE     DECT30          ; NO: Go check task timer for zero
                                                              ; OUT OF DELTA TICKS, SAVE TASK TIMER AND EXIT
9EA3 15 F0 FE                                                 LDA     R2.0            ; Save task tick counter back to task
9EA6 1E F4 FE                                                 STR     R3              ; :
9EA9 2E F4 FE                                                 INW     R3              ; :
9EAC 15 F1 FE                                                 LDA     R2.1            ; :
9EAF 1E F4 FE                                                 STR     R3              ; :
9EB2 39                                                       RTS                     ; Done
                                                      
                                                      ; ------------------------------
                                                      ;       RUNTA
                                                      ;       If task timer of first task
                                                      ;       is zero, delink task from 
                                                      ;       task queue and run its word.
                                                      
9EB3 0E 25                                            _RUNTA: LDI     <NOOP           ; Put NOOP as the default vector for (KEY)
9EB5 16 98 9D                                                 STA     PKEY30          ; :
9EB8 0E 9C                                                    LDI     >NOOP           ; :
9EBA 16 99 9D                                                 STA     PKEY31          ; :
                                                              ; Is there at least one task in the queue?
9EBD 15 C9 F6                                                 LDA     XTASK0          ; Get addr of first task into R3
9EC0 16 F4 FE                                                 STA     R3.0            ; :
9EC3 15 CA F6                                                 LDA     XTASK1          ; :
9EC6 16 F5 FE                                                 STA     R3.1            ; :
9EC9 11 00                                                    CPI     0               ; Is there a first task?
9ECB 3A D7 9E                                                 BNE     RUNT10          ; YES: Look at its timer
9ECE 15 F4 FE                                                 LDA     R3.0            ; MSB is zero, look at LSB
9ED1 11 00                                                    CPI     0               ; :
9ED3 3A D7 9E                                                 BNE     RUNT10          ; YES: Look at its timer
9ED6 39                                                       RTS                     ; No task in queue, we are done
                                                              ; Is the timer of the first task zero?
9ED7 1D F4 FE                                         RUNT10: LDR     R3              ; Check timer LSB for zero
9EDA 11 00                                                    CPI     0               ; LSB zero?
9EDC 3A 1B 9F                                                 BNE     RUNT99          ; NO: Nothing more to do
9EDF 2E F4 FE                                                 INW     R3              ; YES: LSB is zero, also check MSB
9EE2 1D F4 FE                                                 LDR     R3              ; :
9EE5 11 00                                                    CPI     0               ; MSB zero?
9EE7 3A 1B 9F                                                 BNE     RUNT99          ; NO: Nothing more to do
                                                              ; Timer zero case, set code vector for (KEY)
9EEA 2E F4 FE                                                 INW     R3              ; Step to CFA field
9EED 1D F4 FE                                                 LDR     R3              ; Put CFA of word as the vector for (KEY)
9EF0 16 98 9D                                                 STA     PKEY30          ; :
9EF3 2E F4 FE                                                 INW     R3              ; :
9EF6 1D F4 FE                                                 LDR     R3              ; :
9EF9 16 99 9D                                                 STA     PKEY31          ; :
                                                              ; De-link task from task queue
9EFC 2E F4 FE                                                 INW     R3              ; Step to task NEXT field
9EFF 1D F4 FE                                                 LDR     R3              ; TASKS = taddr.NEXT
9F02 16 C9 F6                                                 STA     XTASK0          ; :
9F05 2E F4 FE                                                 INW     R3              ; :
9F08 1D F4 FE                                                 LDR     R3              ; :
9F0B 16 CA F6                                                 STA     XTASK1          ; :
9F0E 0E 00                                                    LDI     0               ; Set task's NEXT field to zero
9F10 1E F4 FE                                                 STR     R3              ; :
9F13 2F F4 FE                                                 DEW     R3              ; :
9F16 0E 00                                                    LDI     0               ; :
9F18 1E F4 FE                                                 STR     R3              ; :
9F1B 39                                               RUNT99: RTS                     ; Done
                                                      
                                                      ; ------------------------------
                                                      ;       DISPATCH
                                                      
9F1C 1E 9F                                            DISPA:  DW      DISPA0        
9F1E 38 12 9E                                         DISPA0: JPS     _GETCL          ; R1 = task tick delta count
9F21 15 EC FE                                                 LDA     R1.0            ; Check tick delta
9F24 11 00                                                    CPI     0               ; Do we have delta ticks?
9F26 3A 2C 9F                                                 BNE     DISP10          ; YES: Handle update tasks
9F29 14 2F 9F                                                 JPA     DISP20          ; NO: Skip decrement of timer(s)
                                                              ; Decrement task timer(s)
9F2C 38 28 9E                                         DISP10: JPS     _DECTI          ; Decrement task timer(s)
9F2F 38 B3 9E                                         DISP20: JPS     _RUNTA          ; See if the first task needs to be run
9F32 14 1F 85                                                 JPA     NEXT            ; Done
                                                      
                                                      ; END OF FORTH MULTITASKER
                                                      ; ----------------------------------------------------------------------
                                                      
9F35 83 28 22 A9                                      HPQUOT: DB      ^3 '(' '"' ^')'                         ; ***** (")
9F39 FD 9D                                                    DW      HCR
9F3B B0 8B 46 89 6E 8A 5E 8B 5D 8E                    PQUOT:  DW      DOCOL R DUP CAT ONEP
9F45 3A 89 A0 89 2A 89 F8 88                                  DW      FROMR PLUS TOR SEMIS
                                                      
9F4D C1 A2                                            HQUOTE: DB      ^^1 ^'"'                                ; ***** "
9F4F 35 9F                                                    DW      HPQUOT
9F51 B0 8B 97 85 22 00 AA 8D 47 8B DB 85 14 00        QUOTE:  DW      DOCOL LIT CH_DQUOTE STATE AT ZBRAN +QUOT10
9F5F B9 90 3B 9F B3 93 81 8E                                  DW      COMP PQUOT WORD HERE
9F67 5E 8B 5D 8E A0 8E C9 85 12 00                            DW      CAT ONEP ALLOT BRAN +QUOT20
9F71 B3 93 81 8E A0 93 25 8A 5E 8B 5D 8E C2 87 A0 93  QUOT10: DW      WORD HERE PAD OVER CAT ONEP CMOVE PAD
9F81 F8 88                                            QUOT20: DW      SEMIS
                                                      
                                                      
                                                      ; INCLUDE         misc.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; MISCELLANEOUS HIGHER LEVEL
                                                      
9F83 C1 A7                                            HTICK:  DB      ^^1 ^39                                 ; ***** '
9F85 4D 9F                                                    DW      HQUOTE
9F87 B0 8B A7 94 53 89 65 8C 26 90 41 8A 12 96 F8 88  TICK:   DW      DOCOL DFIND ZEQU ZERO QERR DROP LITER SEMIS
                                                      
9F97 86 46 4F 52 47 45 D4                             HFORGE: DB      ^6 "FORGE" ^'T'                         ; ***** FORGET
9F9E 83 9F                                                    DW      HTICK
9FA0 B0 8B 9E 8D 47 8B 90 8D 47 8B F1 8E 97 85 18 00  FORGE:  DW      DOCOL CURR AT CONT AT SUB LIT 24
9FB0 26 90 87 9F 6E 8A 1E 8D 47 8B 25 8F 97 85 15 00          DW      QERR TICK DUP FENCE AT LESS LIT 21
9FC0 26 90 6E 8A E8 8F 27 8D 73 8B CA 8F 47 8B 90 8D          DW      QERR DUP NFA DP STORE LFA AT CONT
9FD0 47 8B 73 8B F8 88                                        DW      AT STORE SEMIS
                                                      
9FD6 84 42 41 43 CB                                   HBACK:  DB      ^4 "BAC" ^'K'                           ; ***** BACK
9FDB 97 9F                                                    DW      HFORGE
9FDD B0 8B 81 8E F1 8E D0 8E F8 88                    BACK:   DW      DOCOL HERE SUB COMMA SEMIS
                                                      
9FE7 C5 42 45 47 49 CE                                HBEGIN: DB      ^^5 "BEGI" ^'N'                         ; ***** BEGIN
9FED D6 9F                                                    DW      HBACK
9FEF B0 8B 40 90 81 8E 6D 8C F8 88                    BEGIN:  DW      DOCOL QCOMP HERE ONE SEMIS
                                                      
9FF9 C5 45 4E 44 49 C6                                HENDIF: DB      ^^5 "ENDI" ^'F'                         ; ***** ENDIF
9FFF E7 9F                                                    DW      HBEGIN
A001 B0 8B 40 90 75 8C 6F 90 81 8E                    ENDIF:  DW      DOCOL QCOMP TWO QPAIR HERE
A00B 25 8A F1 8E 56 8A 73 8B F8 88                            DW      OVER SUB SWAP STORE SEMIS
                                                      
A015 C4 54 48 45 CE                                   HTHEN:  DB      ^^4 "THE" ^'N'                          ; ***** THEN
A01A F9 9F                                                    DW      HENDIF
A01C B0 8B 01 A0 F8 88                                THEN:   DW      DOCOL ENDIF SEMIS
                                                      
A022 C2 44 CF                                         HDO:    DB      ^^2 "D" ^'O'                            ; ***** DO
A025 15 A0                                                    DW      HTHEN
A027 B0 8B B9 90 71 86 81 8E 97 85 03 00 F8 88        DO:     DW      DOCOL COMP XDO HERE LIT 3 SEMIS
                                                      
A035 C4 4C 4F 4F D0                                   HLOOP:  DB      ^^4 "LOO" ^'P'                          ; ***** LOOP
A03A 22 A0                                                    DW      HDO
A03C B0 8B 97 85 03 00 6F 90 B9 90 5C 86 DD 9F F8 88  LOOP:   DW      DOCOL LIT 3 QPAIR COMP XLOOP BACK SEMIS
                                                      
A04C C5 2B 4C 4F 4F D0                                HPLOOP: DB      ^^5 "+LOO" ^'P'                         ; ***** +LOOP
A052 35 A0                                                    DW      HLOOP
A054 B0 8B 97 85 03 00 6F 90 B9 90 0F 86 DD 9F F8 88  PLOOP:  DW      DOCOL LIT 3 QPAIR COMP XPLOO BACK SEMIS
                                                      
A064 C5 55 4E 54 49 CC                                HUNTIL: DB      ^^5 "UNTI" ^'L'                         ; ***** UNTIL
A06A 4C A0                                                    DW      HPLOOP
A06C B0 8B 6D 8C 6F 90 B9 90 DB 85 DD 9F F8 88        UNTIL:  DW      DOCOL ONE QPAIR COMP ZBRAN BACK SEMIS
                                                      
A07A C3 45 4E C4                                      HEND:   DB      ^^3 "EN" ^'D'                           ; ***** ENDI
A07E 64 A0                                                    DW      HUNTIL
A080 B0 8B 6C A0 F8 88                                END:    DW      DOCOL UNTIL SEMIS
                                                      
A086 C5 41 47 41 49 CE                                HAGAIN: DB      ^^5 "AGAI" ^'N'                         ; ***** AGAIN
A08C 7A A0                                                    DW      HEND
A08E B0 8B 6D 8C 6F 90 B9 90 C9 85 DD 9F F8 88        AGAIN:  DW      DOCOL ONE QPAIR COMP BRAN BACK SEMIS
                                                      
A09C C6 52 45 50 45 41 D4                             HREPEA: DB      ^^6 "REPEA" ^'T'                        ; ***** REPEAT
A0A3 86 A0                                                    DW      HAGAIN
A0A5 B0 8B 2A 89 2A 89 8E A0 3A 89 3A 89              REPEA:  DW      DOCOL TOR TOR AGAIN FROMR FROMR
A0B1 75 8C F1 8E 01 A0 F8 88                                  DW      TWO SUB ENDIF SEMIS
                                                      
A0B9 C2 49 C6                                         HIF:    DB      ^^2 "I" ^'F'                            ; ***** IF
A0BC 9C A0                                                    DW      HREPEA
A0BE B0 8B B9 90 DB 85 81 8E 65 8C D0 8E 75 8C F8 88  IF:     DW      DOCOL COMP ZBRAN HERE ZERO COMMA TWO SEMIS
                                                      
A0CE C4 45 4C 53 C5                                   HELSE:  DB      ^^4 "ELS" ^'E'                          ; ***** ELSE
A0D3 B9 A0                                                    DW      HIF
A0D5 B0 8B 75 8C 6F 90 B9 90 C9 85 81 8E 75 8C D0 8E  ELSE:   DW      DOCOL TWO QPAIR COMP BRAN HERE TWO COMMA
A0E5 56 8A 75 8C 01 A0 75 8C F8 88                            DW      SWAP TWO ENDIF TWO SEMIS
                                                      
A0EF C5 57 48 49 4C C5                                HWHILE: DB      ^^5 "WHIL" ^'E'                         ; ***** WHILE
A0F5 CE A0                                                    DW      HELSE
A0F7 B0 8B BE A0 6D 8E F8 88                          WHILE:  DW      DOCOL IF TWOP SEMIS
                                                      
A0FF 86 53 50 41 43 45 D3                             HSPACS: DB      ^6 "SPACE" ^'S'                         ; ***** SPACES
A106 EF A0                                                    DW      HWHILE
A108 B0 8B 65 8C 08 99 6A 8F DB 85 0C 00              SPACS:  DW      DOCOL ZERO MAX DDUP ZBRAN +SPAC20
A114 65 8C 71 86                                              DW      ZERO XDO
A118 5B 8F 5C 86 FC FF                                SPAC10: DW      SPACE XLOOP +SPAC10
A11E F8 88                                            SPAC20: DW      SEMIS
                                                      
A120 82 3C A3                                         HBDIGS: DB      ^2 "<" ^'#'                             ; ***** <#
A123 FF A0                                                    DW      HSPACS
A125 B0 8B A0 93 E6 8D 73 8B F8 88                    BDIGS:  DW      DOCOL PAD HLD STORE SEMIS
                                                      
A12F 82 23 BE                                         HEDIGS: DB      ^2 "#" ^'>'                             ; ***** #>
A132 20 A1                                                    DW      HBDIGS
A134 B0 8B 41 8A 41 8A E6 8D 47 8B                    EDIGS:  DW      DOCOL DROP DROP HLD AT
A13E A0 93 25 8A F1 8E F8 88                                  DW      PAD OVER SUB SEMIS
                                                      
A146 84 53 49 47 CE                                   HSIGN:  DB      ^4 "SIG" ^'N'                           ; ***** SIGN
A14B 2F A1                                                    DW      HEDIGS
A14D B0 8B 45 8F 7E 89 DB 85 08 00                    SIGN:   DW      DOCOL ROT ZLESS ZBRAN +SIGN10
A157 97 85 2D 00 88 93                                        DW      LIT '-' HOLD
A15D F8 88                                            SIGN10: DW      SEMIS
                                                      
A15F 81 A3                                            HDIG:   DB      ^1 ^'#'                                 ; ***** #
A161 46 A1                                                    DW      HSIGN
A163 B0 8B B5 8D 47 8B C4 99 45 8F                    DIG:    DW      DOCOL BASE AT MSMOD ROT
A16D 97 85 09 00 25 8A 25 8F DB 85 08 00                      DW      LIT 9 OVER LESS ZBRAN +DIG10
A179 97 85 07 00 A0 89                                        DW      LIT 7 PLUS
A17F 97 85 30 00 A0 89 88 93 F8 88                    DIG10:  DW      LIT '0' PLUS HOLD SEMIS
                                                      
A189 82 23 D3                                         HDIGS:  DB      ^2 "#" ^'S'                             ; ***** #S
A18C 5F A1                                                    DW      HDIG
A18E B0 8B                                            DIGS:   DW      DOCOL
A190 63 A1 25 8A 25 8A 52 88 53 89 DB 85 F4 FF        DIGS10: DW      DIG OVER OVER OR ZEQU ZBRAN +DIGS10
A19E F8 88                                                    DW      SEMIS
                                                      
A1A0 83 44 2E D2                                      HDDOTR: DB      ^3 "D." ^'R'                            ; ***** D.R
A1A4 89 A1                                                    DW      HDIGS
A1A6 B0 8B 2A 89 56 8A 25 8A E2 98                    DDOTR:  DW      DOCOL TOR SWAP OVER DABS
A1B0 25 A1 8E A1 4D A1 34 A1                                  DW      BDIGS DIGS SIGN EDIGS
A1B8 3A 89 25 8A F1 8E 08 A1 CC 91 F8 88                      DW      FROMR OVER SUB SPACS TYPE SEMIS
                                                      
A1C4 82 2E D2                                         HDOTR:  DB      ^2 "." ^'R'                             ; ***** .R
A1C7 A0 A1                                                    DW      HDDOTR
A1C9 B0 8B 2A 89 8B 98 3A 89 A6 A1 F8 88              DOTR:   DW      DOCOL TOR STOD FROMR DDOTR SEMIS
                                                      
A1D5 82 44 AE                                         HDDOT:  DB      ^2 "D" ^'.'                             ; ***** D.
A1D8 C4 A1                                                    DW      HDOTR
A1DA B0 8B 65 8C A6 A1 5B 8F F8 88                    DDOT:   DW      DOCOL ZERO DDOTR SPACE SEMIS
                                                      
A1E4 81 AE                                            HDOT:   DB      ^1 ^'.'                                 ; ***** .
A1E6 D5 A1                                                    DW      HDDOT
A1E8 B0 8B 8B 98 DA A1 F8 88                          DOT:    DW      DOCOL STOD DDOT SEMIS
                                                      
A1F0 81 BF                                            HQUEST: DB      ^1 ^'?'                                 ; ***** ?
A1F2 E4 A1                                                    DW      HDOT
A1F4 B0 8B 47 8B E8 A1 F8 88                          QUEST:  DW      DOCOL AT DOT SEMIS
                                                      
A1FC 82 55 AE                                         HUDOT:  DB      ^2 "U" ^'.'                             ; ***** U.
A1FF F0 A1                                                    DW      HQUEST
A201 B0 8B 65 8C DA A1 F8 88                          UDOT:   DW      DOCOL ZERO DDOT SEMIS
                                                      
                                                      ; ----------------------------------
                                                      ; UTILITY WORDS
                                                      
A209 84 4C 49 53 D4                                   HLIST:  DB      ^4 "LIS" ^'T'                           ; ***** LIST
A20E FC A1                                                    DW      HUDOT
A210 B0 8B 1A 91 02 9E 6E 8A 75 8D 73 8B 2D 92        LIST:   DW      DOCOL DEC CR DUP SCR STORE PDOTQ
A21E 06 53 43 52 20 23 20                                     DB      6 "SCR" 32 "#" 32
A225 E8 A1 97 85 10 00 65 8C 71 86                            DW      DOT LIT 16 ZERO XDO
A22F 02 9E 83 86 7D 8C C9 A1 5B 8F                    LIST10: DW      CR I THREE DOTR SPACE
A239 83 86 75 8D 47 8B 86 9B 5C 86 EC FF                      DW      I SCR AT DLINE XLOOP +LIST10
A245 02 9E F8 88                                              DW      CR SEMIS
                                                      
A249 85 49 4E 44 45 D8                                HINDEX: DB      ^5 "INDE" ^'X'                          ; ***** INDEX
A24F 09 A2                                                    DW      HLIST
A251 B0 8B 02 9E 5D 8E 56 8A 71 86                    INDEX:  DW      DOCOL CR ONEP SWAP XDO
A25B 02 9E 83 86 7D 8C C9 A1 5B 8F 65 8C 83 86 86 9B  INDE10: DW      CR I THREE DOTR SPACE ZERO I DLINE
A26B F7 9D DB 85 04 00                                        DW      QTERM ZBRAN +INDE20
A271 17 89                                                    DW      LEAVE
A273 5C 86 E6 FF                                      INDE20: DW      XLOOP +INDE10
A277 F8 88                                                    DW      SEMIS
                                                      
A279 85 56 4C 49 53 D4                                HVLIST: DB      ^5 "VLIS" ^'T'                          ; ***** VLIST
A27F 49 A2                                                    DW      HINDEX
A281 B0 8B 97 85 80 00 6B 8D 73 8B 90 8D 47 8B 47 8B  VLIST:  DW      DOCOL LIT 128 OUT STORE CONT AT AT
A291 6B 8D 47 8B 90 8C 97 85 0E 00 F1 8E              VLIS10: DW      OUT AT CL LIT 14 SUB
A29D 37 8F DB 85 0A 00                                        DW      GREAT ZBRAN +VLIS20
A2A3 02 9E 65 8C 6B 8D 73 8B                                  DW      CR ZERO OUT STORE
A2AB 6E 8A 51 95 5B 8F FE 8F CA 8F 47 8B              VLIS20: DW      DUP IDDOT SPACE PFA LFA AT
A2B7 6E 8A 53 89 F7 9D 52 88 DB 85 D0 FF                      DW      DUP ZEQU QTERM OR ZBRAN +VLIS10
A2C3 41 8A F8 88                                              DW      DROP SEMIS
                                                      
A2C7 C5 3B 43 4F 44 C5                                HSCODE: DB      ^^5 ";COD" ^'E'                         ; ***** ;CODE
A2CD 79 A2                                                    DW      HVLIST
A2CF B0 8B 82 90 B9 90 44 91 CF 90 F2 90 F8 88        SCODE:  DW      DOCOL QCSP COMP PSCOD LBRAC SMUDG SEMIS
                                                      
A2DD 83 42 59 C5                                      HBYE:   DB      ^3 "BY" ^'E'                            ; ***** BYE
A2E1 C7 A2                                                    DW      HSCODE
A2E3 E5 A2                                            BYE:    DW      BYE0
A2E5 0E 00                                            BYE0:   LDI     0               ; Select EEPROM bank 0
A2E7 01                                                       BNK                     ; :
A2E8 14 00 00                                                 JPA     0               ; Re-start monitor
                                                      
A2EB C5 46 4F 52 54 C8                                HFORTH: DB      ^^5 "FORT" ^'H'                         ; ***** FORTH
A2F1 DD A2                                                    DW      HBYE
A2F3 78 91 22 97 81 A0 EB A2                          FORTH:  DW      DODOE DOVOC 0xA081 HFORTH
A2FB 00 00                                            XXVOC:  DW      0
                                                      
A2FD 00                                               XDP:    DB      0
                                                      
                                                      ; INCLUDE         uppermem.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; UPPER MEMORY AREA
                                                      
                                                              ORG     0xF5B4
                                                      
F5B4 00                                               XSP:    DB      0
F5B5 00                                               XTIB:   DB      0
                                                              DS      210             ; TIB:      84
F688 00                                               XRP:    DB      0               ; RSTACK:  128
                                                              ; 40 user variables
F689 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  XUP:    DW      0 0 0 0 0 0 0 0 ;  0
F699 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00          DW      0 0 0 0 0 0 0 0 ; 16
F6A9 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00          DW      0 0 0 0 0 0 0 0 ; 32
F6B9 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00          DW      0 0 0 0 0 0 0 0 ; 48
                                                      XTASKS:
F6C9 00                                               XTASK0: DB      0               ; USER[64] is TASKS
F6CA 00                                               XTASK1: DB      0               ; :
F6CB 00 00 00 00 00 00 00 00 00 00 00 00 00 00                DW      0 0 0 0 0 0 0   ; 66
                                                      
F6D9 00                                               DSKBF:  DB      0
                                                              DS      2055            ; 2 * 1028 bytes
FEE1 00                                               ENDBF:  DB      0
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; THE VIRTUAL FORTH MACHINE REGISTERS
                                                      
                                                      IP:                             ; Instruction Pointer
FEE2 00                                               IP.0:   DB      0
FEE3 00                                               IP.1:   DB      0
                                                      
                                                      WA:                             ; Word Address Register
FEE4 00                                               WA.0:   DB      0
FEE5 00                                               WA.1:   DB      0
                                                      
                                                      SP:                             ; Data stack pointer
FEE6 00                                               SP.0:   DB      0
FEE7 00                                               SP.1:   DB      0
                                                      
                                                      RP:                             ; Return stack pointer
FEE8 00                                               RP.0:   DB      0
FEE9 00                                               RP.1:   DB      0
                                                      
                                                      UP:                             ; User area pointer
FEEA 00                                               UP.0:   DB      0
FEEB 00                                               UP.1:   DB      0
                                                      
                                                      R1:                             ; Working register R1
FEEC 00                                               R1.0:   DB      0
FEED 00                                               R1.1:   DB      0
                                                      R1H:
FEEE 00                                               R1.2:   DB      0
FEEF 00                                               R1.3:   DB      0
                                                      
                                                      R2:                             ; Working register R2
FEF0 00                                               R2.0:   DB      0
FEF1 00                                               R2.1:   DB      0
                                                      R2H:
FEF2 00                                               R2.2:   DB      0
FEF3 00                                               R2.3:   DB      0
                                                      
                                                      R3:                             ; Working register R3
FEF4 00                                               R3.0:   DB      0
FEF5 00                                               R3.1:   DB      0
                                                      R3H:
FEF6 00                                               R3.2:   DB      0
FEF7 00                                               R3.3:   DB      0
                                                      
FEF8 00                                               BC:     DB      0               ; "Hidden" registers
FEF9 00                                               TMP:    DB      0               ; (used by _AND8 _OR8 _XOR8)
FEFA 00                                               CHIN:   DB      0               ; Used by (?TERMINAL) and (KEY)
FEFB 00                                               CLK0:   DB      0               ; 32-bit fake clock tick counter
FEFC 00                                               CLK1:   DB      0               ; :
FEFD 00                                               CLK2:   DB      0               ; :
FEFE 00                                               CLK3:   DB      0               ; :
                                                      
                                                      ; LSTCLK is used by th4 FORTH multitasker in order to keep track
                                                      ; of "delta ticks" since last DISPATCH run
FEFF 00                                               LSTCLK: DB      0               ; Last clock tick count LSB
