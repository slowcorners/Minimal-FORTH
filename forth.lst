                                                      ; ----------------------------------------------------------------------
                                                      ; M i n i m a l - F O R T H
                                                      ;
                                                      ; A minimal FORTH for the Minimal-CPU.
                                                      ;
                                                      ; Date:         2021-03-24
                                                      ; Version:      0.1
                                                      ; Adaptation:   Nils "slowcorners" Kullberg
                                                      ; License:      MIT Open Source Initiative
                                                      ;
                                                      ;
                                                      ; FIG-FORTH WAS ORIGINALLY DEVELOPED BY:
                                                      ; FORTH INTEREST GROUP / FORTH IMPLEMENTATION TEAM
                                                      ; P.O.BOX 1105
                                                      ; SAN CARLOS, CA. 94701
                                                      ;
                                                      ; THIS COMPILER EXISTS THANKS TO ALL THE WONDERFUL PEOPLE OF THE
                                                      ; FORTH INTEREST GROUP. IT IS THEIR DEDICATION AND GENEROSITY WHICH
                                                      ; STILL TODAY MAKES THESE NEW ADAPTATIONS POSSIBLE.
                                                      ;
                                                      ; MAY THIS COMPILER BE A SMALL TRIBUTE TO ALL THOSE INDIVIDUALS OF THE
                                                      ; FORTH INTEREST GROUP AS WELL AS SLU4 WHOSE COUNTLESS HOURS AND
                                                      ; INGENIOUS DETAILS HAVE MADE THE MINIMAL-CPU COME INTO EXISTENCE.
                                                      ;
                                                      ; NILS "SLOWCORNERS" KULLBERG
                                                      ; LUND, SWEDEN
                                                      ; MARCH 2021, IN THE MIDDLE OF THE COVID-19 PANDEMIC
                                                      ;
                                                      ; ----------------------------------------------------------------------
                                                      
                                                              ORG     0x8000
                                                              
                                                      
                                                      ; INCLUDE         defs.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; GLOBAL DEFINES
                                                      ;
                                                      
                                                      CH_BEL      EQU     7
                                                      CH_BSP      EQU     8
                                                      CH_LF       EQU     10
                                                      CH_CR       EQU     13
                                                      CH_ESC      EQU     27
                                                      CH_BL       EQU     32
                                                      CH_DQUOTE   EQU     34
                                                      CH_BSL      EQU     92
                                                      CH_DEL      EQU     127
                                                      
                                                      COLD_MAGIC  EQU     0x3737      ; Nice "arbitrary bit pattern ;-)
                                                                                      ; : used by COLD and ABORT
                                                      
                                                      ; INCLUDE         boot-table.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; BOOT TABLE
                                                      
8000 14 A6 97                                         ORIGIN: JPA     CENT            ;  0: COLD start
8003 00                                                       NOP
8004 14 B8 97                                                 JPA     WENT            ;  4: WARM start
8007 00                                                       NOP
8008 00 00                                                    DW      0               ;  8: Processor type in radix 36
800A 00 00                                                    DW      0               ; 10: Revision
800C 6A A1                                                    DW      HFORTH          ; 12: Pointer to latest word defined
800E 08 00                                                    DW      CH_BSP          ; 14: Backspace character
8010 8E F6                                                    DW      XUP             ; 16: Pointer to initial user area
8012 B9 F5                                                    DW      XSP             ; 18: Initial data stack pointer
8014 8D F6                                                    DW      XRP             ; 20: Initial return stack pointer
8016 BA F5                                                    DW      XTIB            ; 22: Pointer to terminal input buffer
8018 1F 00                                                    DW      31              ; 24: Maximum FORTH word name length
801A 00 00                                                    DW      0               ; 26: Initial WARNING mode
801C 7C A1                                                    DW      XDP             ; 28: Initial FENCE
801E 7C A1                                                    DW      XDP             ; 30: Initial HERE
8020 7A A1                                                    DW      XXVOC           ; 32: Pointer to initial VOC-LINK
8022 DF F6                                                    DW      DSKBF           ; 34: Initial FIRST
8024 E7 FE                                                    DW      ENDBF           ; 36: Initial LIMIT
8026 00 00                                                    DW      0               ; 38: unused
8028 00 00                                                    DW      0               ; 40: unused
                                                      
                                                      ; INCLUDE         helpers.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; HELPER FUNCTIONS
                                                      ;
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (IP)+
                                                      
802A 1D E8 FE                                         _LIT:   LDR     IP
802D 16 F2 FE                                                 STA     R1.0
8030 2E E8 FE                                                 INW     IP
8033 1D E8 FE                                                 LDR     IP
8036 16 F3 FE                                                 STA     R1.1
8039 2E E8 FE                                                 INW     IP
803C 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       IP = IP + (IP)+
                                                      
803D 1D E8 FE                                         _BRAN:  LDR     IP
8040 16 F2 FE                                                 STA     R1.0
8043 2E E8 FE                                                 INW     IP
8046 1D E8 FE                                                 LDR     IP
8049 16 F3 FE                                                 STA     R1.1
804C 2F E8 FE                                                 DEW     IP
804F 15 F2 FE                                                 LDA     R1.0
8052 28 E8 FE                                                 ADB     IP.0
8055 15 F3 FE                                                 LDA     R1.1
8058 2A E9 FE                                                 ACB     IP.1
805B 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (SP) "half function"
                                                      
805C 1D EC FE                                         _GET1_: LDR     SP
805F 16 F2 FE                                                 STA     R1.0
8062 2E EC FE                                                 INW     SP
8065 1D EC FE                                                 LDR     SP
8068 16 F3 FE                                                 STA     R1.1
806B 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (SP)
                                                      
806C 38 5C 80                                         _GET1:  JPS     _GET1_
806F 2F EC FE                                                 DEW     SP
8072 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (SP)+
                                                      
8073 38 5C 80                                         _POP1:  JPS     _GET1_
8076 2E EC FE                                                 INW     SP
8079 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1X = (SP)+
                                                      
807A 1D EC FE                                         _DPOP1: LDR     SP
807D 16 F4 FE                                                 STA     R1.2
8080 2E EC FE                                                 INW     SP
8083 1D EC FE                                                 LDR     SP
8086 16 F5 FE                                                 STA     R1.3
8089 2E EC FE                                                 INW     SP
808C 1D EC FE                                                 LDR     SP
808F 16 F2 FE                                                 STA     R1.0
8092 2E EC FE                                                 INW     SP
8095 1D EC FE                                                 LDR     SP
8098 16 F3 FE                                                 STA     R1.1
809B 2E EC FE                                                 INW     SP
809E 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R2 = (SP) "half function"
                                                      
809F 1D EC FE                                         _GET2_: LDR     SP
80A2 16 F6 FE                                                 STA     R2.0
80A5 2E EC FE                                                 INW     SP
80A8 1D EC FE                                                 LDR     SP
80AB 16 F7 FE                                                 STA     R2.1
80AE 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R2 = (SP)
                                                      
80AF 38 9F 80                                         _GET2:  JPS     _GET2_
80B2 2F EC FE                                                 DEW     SP
80B5 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (SP)+
                                                      
80B6 38 9F 80                                         _POP2:  JPS     _GET2_
80B9 2E EC FE                                                 INW     SP
80BC 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R2X = (SP)+
                                                      
80BD 1D EC FE                                         _DPOP2: LDR     SP
80C0 16 F8 FE                                                 STA     R2.2
80C3 2E EC FE                                                 INW     SP
80C6 1D EC FE                                                 LDR     SP
80C9 16 F9 FE                                                 STA     R2.3
80CC 2E EC FE                                                 INW     SP
80CF 1D EC FE                                                 LDR     SP
80D2 16 F6 FE                                                 STA     R2.0
80D5 2E EC FE                                                 INW     SP
80D8 1D EC FE                                                 LDR     SP
80DB 16 F7 FE                                                 STA     R2.1
80DE 2E EC FE                                                 INW     SP
80E1 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R3 = (SP) "half function"
                                                      
80E2 1D EC FE                                         _GET3_: LDR     SP
80E5 16 FA FE                                                 STA     R3.0
80E8 2E EC FE                                                 INW     SP
80EB 1D EC FE                                                 LDR     SP
80EE 16 FB FE                                                 STA     R3.1
80F1 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R3 = (SP)
                                                      
80F2 38 E2 80                                         _GET3:  JPS     _GET3_
80F5 2F EC FE                                                 DEW     SP
80F8 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R3 = (SP)+
                                                      
80F9 38 E2 80                                         _POP3:  JPS     _GET3_
80FC 2E EC FE                                                 INW     SP
80FF 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R3 = (SP)+
                                                      ;       R2 = (SP)+
                                                      ;       R1 = (SP)+
                                                      
8100 38 F9 80                                         _POP321: JPS    _POP3
8103 38 B6 80                                         _POP21: JPS     _POP2
8106 38 73 80                                                 JPS     _POP1
8109 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (RP) "half function"
                                                      
810A 1D EE FE                                         _RGET1_: LDR    RP
810D 16 F2 FE                                                 STA     R1.0
8110 2E EE FE                                                 INW     RP
8113 1D EE FE                                                 LDR     RP
8116 16 F3 FE                                                 STA     R1.1
8119 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (RP)
                                                      
811A 38 0A 81                                         _RGET1: JPS     _RGET1_
811D 2F EE FE                                                 DEW     RP
8120 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (RP)+
                                                      
8121 38 0A 81                                         _RPOP1: JPS     _RGET1_
8124 2E EE FE                                                 INW     RP
8127 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R2 = (RP) "half function"
                                                      
8128 1D EE FE                                         _RGET2_: LDR    RP
812B 16 F6 FE                                                 STA     R2.0
812E 2E EE FE                                                 INW     RP
8131 1D EE FE                                                 LDR     RP
8134 16 F7 FE                                                 STA     R2.1
8137 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R2 = (RP)
                                                      
8138 38 28 81                                         _RGET2: JPS     _RGET2_
813B 2F EE FE                                                 DEW     RP
813E 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (RP)
                                                      
813F 38 28 81                                         _RPOP2: JPS     _RGET2_
8142 2E EE FE                                                 INW     RP
8145 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R3 = (RP) "half function"
                                                      
8146 1D EE FE                                         _RGET3_: LDR    RP
8149 16 FA FE                                                 STA     R3.0
814C 2E EE FE                                                 INW     RP
814F 1D EE FE                                                 LDR     RP
8152 16 FB FE                                                 STA     R3.1
8155 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R3 = (RP)
                                                      
8156 38 46 81                                         _RGET3: JPS     _RGET3_
8159 2F EE FE                                                 DEW     RP
815C 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R3 = (RP)
                                                      
815D 38 46 81                                         _RPOP3: JPS     _RGET3_
8160 2E EE FE                                                 INW     RP
8163 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (SP) = R1 "half function"
                                                      
8164 15 F3 FE                                         _PUT1_: LDA     R1.1
8167 1E EC FE                                                 STR     SP
816A 2F EC FE                                                 DEW     SP
816D 15 F2 FE                                                 LDA     R1.0
8170 1E EC FE                                                 STR     SP
8173 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (SP) = R1
                                                      
8174 2E EC FE                                         _PUT1:  INW     SP
8177 38 64 81                                                 JPS     _PUT1_
817A 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       -(SP) = R1
                                                      
817B 2F EC FE                                         _PUSH1: DEW     SP
817E 38 64 81                                                 JPS     _PUT1_
8181 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (SP) = R2 "half function"
                                                      
8182 15 F7 FE                                         _PUT2_: LDA     R2.1
8185 1E EC FE                                                 STR     SP
8188 2F EC FE                                                 DEW     SP
818B 15 F6 FE                                                 LDA     R2.0
818E 1E EC FE                                                 STR     SP
8191 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (SP) = R2
                                                      
8192 2E EC FE                                         _PUT2:  INW     SP
8195 38 82 81                                                 JPS     _PUT2_
8198 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       -(SP) = R2
                                                      
8199 2F EC FE                                         _PUSH2: DEW     SP
819C 38 82 81                                                 JPS     _PUT2_
819F 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (SP) = R3 "half function"
                                                      
81A0 15 FB FE                                         _PUT3_: LDA     R3.1
81A3 1E EC FE                                                 STR     SP
81A6 2F EC FE                                                 DEW     SP
81A9 15 FA FE                                                 LDA     R3.0
81AC 1E EC FE                                                 STR     SP
81AF 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (SP) = R3
                                                      
81B0 2E EC FE                                         _PUT3:  INW     SP
81B3 38 A0 81                                                 JPS     _PUT3_
81B6 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       -(SP) = R3
                                                      
81B7 2F EC FE                                         _PUSH3: DEW     SP
81BA 38 A0 81                                                 JPS     _PUT3_
81BD 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (RP) = R1 "half function"
                                                      
81BE 15 F3 FE                                         _RPUT1_: LDA    R1.1
81C1 1E EE FE                                                 STR     RP
81C4 2F EE FE                                                 DEW     RP
81C7 15 F2 FE                                                 LDA     R1.0
81CA 1E EE FE                                                 STR     RP
81CD 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (RP) = R1
                                                      
81CE 2E EE FE                                         _RPUT1: INW     RP
81D1 38 BE 81                                                 JPS     _RPUT1_
81D4 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       -(RP) = R1
                                                      
81D5 2F EE FE                                         _RPUSH1: DEW    RP
81D8 38 BE 81                                                 JPS     _RPUT1_
81DB 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (RP) = R2 "half function"
                                                      
81DC 15 F7 FE                                         _RPUT2_: LDA    R2.1
81DF 1E EE FE                                                 STR     RP
81E2 2F EE FE                                                 DEW     RP
81E5 15 F6 FE                                                 LDA     R2.0
81E8 1E EE FE                                                 STR     RP
81EB 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (RP) = R2
                                                      
81EC 2E EE FE                                         _RPUT2: INW     RP
81EF 38 DC 81                                                 JPS     _RPUT2_
81F2 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       -(RP) = R2
                                                      
81F3 2F EE FE                                         _RPUSH2: DEW    RP
81F6 38 DC 81                                                 JPS     _RPUT2_
81F9 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (RP) = R3 "half function"
                                                      
81FA 15 FB FE                                         _RPUT3_: LDA    R3.1
81FD 1E EE FE                                                 STR     RP
8200 2F EE FE                                                 DEW     RP
8203 15 FA FE                                                 LDA     R3.0
8206 1E EE FE                                                 STR     RP
8209 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (RP) = R3
                                                      
820A 2E EE FE                                         _RPUT3: INW     RP
820D 38 FA 81                                                 JPS     _RPUT3_
8210 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       -(RP) = R3
                                                      
8211 2F EE FE                                         _RPUSH3: DEW    RP
8214 38 FA 81                                                 JPS     _RPUT3_
8217 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = R1 + R2
                                                      
8218 15 F2 FE                                         _ADD16: LDA     R1.0
821B 17 F6 FE                                                 ADA     R2.0
821E 16 F2 FE                                                 STA     R1.0
8221 15 F3 FE                                                 LDA     R1.1
8224 1A F7 FE                                                 ACA     R2.1
8227 16 F3 FE                                                 STA     R1.1
822A 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1X = R1X + R2X
                                                      
822B 15 F2 FE                                         _ADD32: LDA     R1.0
822E 17 F6 FE                                                 ADA     R2.0
8231 16 F2 FE                                                 STA     R1.0
8234 15 F3 FE                                                 LDA     R1.1
8237 1A F7 FE                                                 ACA     R2.1
823A 16 F3 FE                                                 STA     R1.1
823D 15 F4 FE                                                 LDA     R1.2
8240 1A F8 FE                                                 ACA     R2.2
8243 16 F4 FE                                                 STA     R1.2
8246 15 F5 FE                                                 LDA     R1.3
8249 1A F9 FE                                                 ACA     R2.3
824C 16 F5 FE                                                 STA     R1.3
824F 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (R1)
                                                      
8250 1D F2 FE                                         _ATR1:  LDR     R1              ; Get LSB
8253 16 F4 FE                                                 STA     R1.2            ; ... Store temp
8256 2E F2 FE                                                 INW     R1              ; Bump
8259 1D F2 FE                                                 LDR     R1              ; Get MSB
825C 16 F5 FE                                                 STA     R1.3            ; ... Store temp
825F 15 F4 FE                                                 LDA     R1.2            ; Get temp LSB
8262 16 F2 FE                                                 STA     R1.0            ; ... Store
8265 15 F5 FE                                                 LDA     R1.3            ; Get temp MSB
8268 16 F3 FE                                                 STA     R1.1            ; ... Store
826B 39                                                       RTS                     ; Done
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (R3)
                                                      
826C 1D FA FE                                         _LD16:  LDR     R3
826F 16 F2 FE                                                 STA     R1.0
8272 2E FA FE                                                 INW     R3
8275 1D FA FE                                                 LDR     R3
8278 16 F3 FE                                                 STA     R1.1
827B 2F FA FE                                                 DEW     R3
827E 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (R3) = R1
                                                      
827F 15 F2 FE                                         _ST16:  LDA     R1.0
8282 1E FA FE                                                 STR     R3
8285 2E FA FE                                                 INW     R3
8288 15 F3 FE                                                 LDA     R1.1
828B 1E FA FE                                                 STR     R3
828E 2F FA FE                                                 DEW     R3
8291 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1.0 = R1.0 & R2.0
                                                      
8292 0E 08                                            _AND8:  LDI     8               ; Load bit counter
8294 16 FE FE                                                 STA     BC              ; :
8297 15 F6 FE                                         _AND81: LDA     R2.0            ; Load second operand
829A 05                                                       LSL                     ; Shift 2b7 into C
829B 16 F6 FE                                                 STA     R2.0            ; Store shifted second operand
829E 15 F2 FE                                                 LDA     R1.0            ; Load first operand
82A1 3C AA 82                                                 BCC     _AND82          ; If C is clear: Shift in a zero
                                                              ; 2b7 is set
82A4 11 00                                                    CPI     0               ; Is first operand < 0, i.e. is 1b7 set?
82A6 3F AA 82                                                 BMI     _AND82           ; N is set: 1b7 is set
                                                              ; 1b7 is clear
82A9 03                                                       CLC                     ; 1b7 is clear: Clear C
82AA 06                                               _AND82: ROL                     ; Shift C into result
82AB 16 F2 FE                                                 STA     R1.0            ; Store first operand/result
82AE 27 FE FE                                                 DEB     BC              ; All bits done?
82B1 3A 97 82                                                 BNE     _AND81          ;   NO: Do one more
82B4 39                                                       RTS                     ;   YES: All done
                                                      
                                                      ; ------------------------------
                                                      ;       R1.0 = R1.0 | R2.0
                                                      
82B5 0E 08                                            _OR8:   LDI     8               ; Load bit counter
82B7 16 FE FE                                                 STA     BC              ; :
82BA 15 F6 FE                                         _OR810: LDA     R2.0            ; Load second operand
82BD 05                                                       LSL                     ; Shift 2b7 into C
82BE 16 F6 FE                                                 STA     R2.0            ; Store shifted second operand
82C1 15 F2 FE                                                 LDA     R1.0            ; Load first operand
82C4 3D CD 82                                                 BCS     _OR820          ; If C is set, shift it into result
                                                              ; 2b7 is clear
82C7 11 00                                                    CPI     0               ; Is first operand < 0, i.e. is 1b7 set?
82C9 3F CD 82                                                 BMI     _OR820          ; N is clear: 1b7 is clear
                                                              ; 1b7 is clear
82CC 03                                                       CLC                     ; Neither bit is set: Clear C 
82CD 06                                               _OR820: ROL                     ; Shift C into result
82CE 16 F2 FE                                                 STA     R1.0            ; Store first operand/result
82D1 27 FE FE                                                 DEB     BC              ; All bits done?
82D4 3A BA 82                                                 BNE     _OR810          ;   NO: Do one more
82D7 39                                                       RTS                     ;   YES: All done
                                                      
                                                      ; ------------------------------
                                                      ;       R1.0 = R1.0 ^ R2.0
                                                      
82D8 0E 08                                            _XOR8:  LDI     8               ; Load bit counter
82DA 16 FE FE                                                 STA     BC              ; :
82DD 15 F6 FE                                         _XOR81: LDA     R2.0            ; Get second operand
82E0 05                                                       LSL                     ; Shift b7 into C
82E1 16 F6 FE                                                 STA     R2.0            ; Store shifted second operand
82E4 15 F2 FE                                                 LDA     R1.0            ; Load first operand
82E7 3D F2 82                                                 BCS     _XOR82          ; C is set, check 1b7 for zero
                                                              ; 2b7 is clear
82EA 11 00                                                    CPI     0               ; Is first operand < 0, i.e. is b7 set?
82EC 3F F8 82                                                 BMI     _XOR84          ; 1b7 is set and 2b7 is clear, shift in C which is set
82EF 14 F7 82                                                 JPA     _XOR83          ; 1b7 and 2b7 are both zero, clear C and shift in 
                                                              ; 2b7 is set, check 1b7 for zero
82F2 11 00                                            _XOR82: CPI     0
82F4 3E F8 82                                                 BPL     _XOR84          ; If 1b7 is zero, shift in C which is set
82F7 03                                               _XOR83: CLC                     ; 1b7 and 2b7 are equal, shift in a zero
82F8 06                                               _XOR84: ROL                     ; Shift whatever is in C into result
82F9 16 F2 FE                                                 STA     R1.0            ; Store first operand/result
82FC 27 FE FE                                                 DEB     BC              ; All bits done?
82FF 3A DD 82                                                 BNE     _XOR81          ;   NO: Do one more
8302 39                                                       RTS                     ;   YES: All done
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = ~R1
                                                      
8303 15 F5 FE                                         _NOT32: LDA     R1.3            ; Negate MSB
8306 0B                                                       NEG                     ; Two-complement negation
8307 10 01                                                    SBI     1               ; Adjust to bitwise not
8309 16 F5 FE                                                 STA     R1.3            ; Store negated MSB
830C 15 F4 FE                                                 LDA     R1.2            ; Negate byte2
830F 0B                                                       NEG                     ; Two-complement negation
8310 10 01                                                    SBI     1               ; Adjust to bitwise not
8312 16 F4 FE                                                 STA     R1.2            ; Store negated byte2
8315 15 F3 FE                                         _NOT16: LDA     R1.1            ; Negate byte1
8318 0B                                                       NEG                     ; Two-complement negation
8319 10 01                                                    SBI     1               ; Adjust to bitwise not
831B 16 F3 FE                                                 STA     R1.1            ; Store negated byte1
831E 15 F2 FE                                                 LDA     R1.0            ; Negate LSB
8321 0B                                                       NEG                     ; Two-complement negation
8322 10 01                                                    SBI     1               ; Adjust to bitwise not
8324 16 F2 FE                                                 STA     R1.0            ; Store negated LSB
8327 39                                                       RTS                     ; Done
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = -R1
                                                      
8328 38 15 83                                         _NEG16: JPS     _NOT16          ; Bitwise NOT R1
832B 15 F2 FE                                                 LDA     R1.0            ; Add one to make it 2-complement
832E 0F 01                                                    ADI     1               ; :
8330 16 F2 FE                                                 STA     R1.0            ; :
8333 15 F3 FE                                                 LDA     R1.1            ; :
8336 12 00                                                    ACI     0               ; :
8338 16 F3 FE                                                 STA     R1.1            ; :
833B 39                                                       RTS                     ; Done
                                                      
                                                      ; ------------------------------
                                                      ;       R1X = -R1X
                                                      
833C 38 03 83                                         _NEG32: JPS     _NOT32          ; Bitwise NOT R1X
833F 15 F2 FE                                                 LDA     R1.0            ; Add one to make it 2-complement
8342 0F 01                                                    ADI     1               ; :
8344 16 F2 FE                                                 STA     R1.0            ; :
8347 15 F3 FE                                                 LDA     R1.1            ; :
834A 12 00                                                    ACI     0               ; :
834C 16 F3 FE                                                 STA     R1.1            ; :
834F 15 F4 FE                                                 LDA     R1.2            ; :
8352 12 00                                                    ACI     0               ; :
8354 16 F4 FE                                                 STA     R1.2            ; :
8357 15 F5 FE                                                 LDA     R1.3            ; :
835A 12 00                                                    ACI     0               ; :
835C 16 F5 FE                                                 STA     R1.3            ; :
835F 39                                                       RTS                     ; Done
                                                      
                                                      ; ------------------------------
                                                      ;       R1 <-> R2
                                                      
8360 38 7B 81                                         _XCH16: JPS     _PUSH1          ; Temp = R1
8363 15 F6 FE                                                 LDA     R2.0            ; R1 = R2
8366 16 F2 FE                                                 STA     R1.0            ; :
8369 15 F7 FE                                                 LDA     R2.1            ; :
836C 16 F3 FE                                                 STA     R1.1            ; :
836F 38 B6 80                                                 JPS     _POP2           ; R2 = Temp
8372 39                                                       RTS                     ; Done
                                                      
                                                      ; ------------------------------
                                                      ;       +ORIGIN
                                                      ; NOTE: Index number in R2
                                                      
8373 0E 00                                            _PORIG: LDI     <ORIGIN         ; R3 = ORIGIN address
8375 16 FA FE                                                 STA     R3.0            ; :
8378 0E 80                                                    LDI     >ORIGIN         ; :
837A 16 FB FE                                                 STA     R3.1            ; :
837D 15 F6 FE                                                 LDA     R2.0            ; Get index number
8380 30 FA FE                                                 ADW     R3              ; Compute addr
8383 39                                                       RTS                     ; Done
                                                      
                                                      ; ------------------------------
                                                      ;       _USER
                                                      ; NOTE: Index number in R2
                                                      
8384 15 F0 FE                                         _USER:  LDA     UP.0            ; R3 = UP
8387 16 FA FE                                                 STA     R3.0            ; :
838A 15 F1 FE                                                 LDA     UP.1            ; :
838D 16 FB FE                                                 STA     R3.1            ; :
8390 15 F6 FE                                                 LDA     R2.0            ; Get index number
8393 30 FA FE                                                 ADW     R3              ; Compute addr
8396 39                                                       RTS                     ; Done
                                                      
                                                      ; ------------------------------
                                                      ;       __PICK
                                                      ; NOTE: Index number on Minimal stack
                                                      
8397 15 EC FE                                         __PICK: LDA     SP.0            ; R3 = SP
839A 16 FA FE                                                 STA     R3.0            ; :
839D 15 ED FE                                                 LDA     SP.1            ; :
83A0 16 FB FE                                                 STA     R3.1            ; :
83A3 34 03                                                    LDS     3               ; Get index number
83A5 05                                                       LSL                     ; : word index --> byte index
83A6 30 FA FE                                                 ADW     R3              ; Compute addr
83A9 38 6C 82                                                 JPS     _LD16           ; Get the n:th word from stack
83AC 39                                                       RTS                     ; Done
                                                      
                                                      ; ------------------------------
                                                      ;       _ROLL
                                                      ; NOTE: Index number on Minimal stack
                                                      
83AD 34 03                                            __ROLL: LDS     3               ; Get index number
83AF 16 FD FE                                                 STA     R3.3            ; Prepare loop counter
83B2 36                                                       PHS                     ; Push as parameter for _PICK
83B3 38 FD 89                                                 JPS     _PICK           ; Pick n:th element in R1
83B6 37                                                       PLS                     ; Cleanup stack
                                                              ; Set up source pointer (R2) for move
83B7 15 FA FE                                                 LDA     R3.0            ; :
83BA 16 F6 FE                                                 STA     R2.0            ; :
83BD 15 FB FE                                                 LDA     R3.1            ; :
83C0 16 F7 FE                                                 STA     R2.1            ; :
83C3 2F F6 FE                                                 DEW     R2              ; :
83C6 2F F6 FE                                                 DEW     R2              ; :
                                                              ; All moved already?
83C9 15 FD FE                                         _ROL10: LDA     R3.3            ; Get loop counter
83CC 11 00                                                    CPI     0               ; Zero?
83CE 3B F3 83                                                 BEQ     _ROL99          ; YES: We are done
                                                              ; Move one word down in the stack
83D1 1D F6 FE                                                 LDR     R2              ; Move word
83D4 1E FA FE                                                 STR     R3              ; :
83D7 2E F6 FE                                                 INW     R2              ; :
83DA 2E FA FE                                                 INW     R3              ; :
83DD 1D F6 FE                                                 LDR     R2              ; :
83E0 1E FA FE                                                 STR     R3              ; :
                                                              ; Bump pointers upwards in the stack
83E3 0E 03                                                    LDI     3               ; :
83E5 31 F6 FE                                                 SBW     R2              ; :
83E8 0E 03                                                    LDI     3               ; :
83EA 31 FA FE                                                 SBW     R3              ; :
                                                              ; Decrement counter
83ED 27 FD FE                                                 DEB     R3.3            ; Decrement loop counter
83F0 14 C9 83                                                 JPA     _ROL10          ; Go for another round
                                                              ; All done
83F3 38 74 81                                         _ROL99: JPS     _PUT1           ; Replace top of stack with R1
83F6 39                                                       RTS                     ; :
                                                      
                                                      ; ------------------------------
                                                      ;       _SWAP8
                                                      ; Swaps R1.1 <-> R1.0
                                                      ;       R2.1 <-> R2.0
                                                      
83F7 15 F2 FE                                         _SWAP8: LDA     R1.0
83FA 16 FF FE                                                 STA     TMP
83FD 15 F3 FE                                                 LDA     R1.1
8400 16 F2 FE                                                 STA     R1.0
8403 15 FF FE                                                 LDA     TMP
8406 16 F3 FE                                                 STA     R1.1
8409 15 F6 FE                                                 LDA     R2.0
840C 16 FF FE                                                 STA     TMP
840F 15 F7 FE                                                 LDA     R2.1
8412 16 F6 FE                                                 STA     R2.0
8415 15 FF FE                                                 LDA     TMP
8418 16 F7 FE                                                 STA     R2.1
841B 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = R1 & R2
                                                      
841C 38 92 82                                         _AND16: JPS     _AND8
841F 38 F7 83                                                 JPS     _SWAP8
8422 38 92 82                                                 JPS     _AND8
8425 38 F7 83                                                 JPS     _SWAP8
8428 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = R1 | R2
                                                      
8429 38 B5 82                                         _OR16:  JPS     _OR8
842C 38 F7 83                                                 JPS     _SWAP8
842F 38 B5 82                                                 JPS     _OR8
8432 38 F7 83                                                 JPS     _SWAP8
8435 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = R1 ^ R2
                                                      
8436 38 D8 82                                         _XOR16: JPS     _XOR8
8439 38 F7 83                                                 JPS     _SWAP8
843C 38 D8 82                                                 JPS     _XOR8
843F 38 F7 83                                                 JPS     _SWAP8
8442 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R3X = R1X * R2X
                                                      
8443 0E 10                                            _UMULT: LDI     16              ; Set bit counter
8445 16 FE FE                                                 STA     BC
8448 0E 00                                                    LDI     0               ; R3X = 0
844A 16 FA FE                                                 STA     R3.0            ; :
844D 16 FB FE                                                 STA     R3.1            ; :
8450 16 FC FE                                                 STA     R3.2            ; :
8453 16 FD FE                                                 STA     R3.3            ; :
8456 16 F4 FE                                                 STA     R1.2            ; R1H = 0
8459 16 F5 FE                                                 STA     R1.3            ; :
845C 15 F7 FE                                         _UMU10: LDA     R2.1            ; R2 >> 1
845F 07                                                       LSR                     ; :
8460 16 F7 FE                                                 STA     R2.1            ; :
8463 15 F6 FE                                                 LDA     R2.0            ; :
8466 08                                                       ROR                     ; :
8467 16 F6 FE                                                 STA     R2.0            ; :
846A 3C 91 84                                                 BCC     _UMU20          ; No carry, no add
846D 15 FA FE                                                 LDA     R3.0            ; R3X = R3X + R1X
8470 17 F2 FE                                                 ADA     R1.0            ; :
8473 16 FA FE                                                 STA     R3.0            ; :
8476 15 FB FE                                                 LDA     R3.1            ; :
8479 1A F3 FE                                                 ACA     R1.1            ; :
847C 16 FB FE                                                 STA     R3.1            ; :
847F 15 FC FE                                                 LDA     R3.2            ; :
8482 1A F4 FE                                                 ACA     R1.2            ; :
8485 16 FC FE                                                 STA     R3.2            ; :
8488 15 FD FE                                                 LDA     R3.3            ; :
848B 1A F5 FE                                                 ACA     R1.3            ; :
848E 16 FD FE                                                 STA     R3.3            ; :
8491 15 F2 FE                                         _UMU20: LDA     R1.0            ; R1X << 1
8494 05                                                       LSL                     ; :
8495 16 F2 FE                                                 STA     R1.0            ; :
8498 15 F3 FE                                                 LDA     R1.1            ; :
849B 06                                                       ROL                     ; :
849C 16 F3 FE                                                 STA     R1.1            ; :
849F 15 F4 FE                                                 LDA     R1.2            ; :
84A2 06                                                       ROL                     ; :
84A3 16 F4 FE                                                 STA     R1.2            ; :
84A6 15 F5 FE                                                 LDA     R1.3            ; :
84A9 06                                                       ROL                     ; :
84AA 16 F5 FE                                                 STA     R1.3            ; :
84AD 27 FE FE                                                 DEB     BC              ; Decrement bit counter
84B0 3A 5C 84                                                 BNE     _UMU10          ; Not zero, more bits to go
84B3 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1X / R2L
                                                      ;       R1H: Quotient
                                                      ;       R1L: Remainder
                                                      
84B4 0E 10                                            _UDIV:  LDI     16              ; Set bit counter
84B6 16 FE FE                                                 STA     BC              ; :
                                                              
84B9 15 F2 FE                                         _UDI10: LDA     R1.0            ; R1X = R1X << 1
84BC 05                                                       LSL                     ; :
84BD 16 F2 FE                                                 STA     R1.0            ; :
84C0 15 F3 FE                                                 LDA     R1.1            ; :
84C3 06                                                       ROL                     ; :
84C4 16 F3 FE                                                 STA     R1.1            ; :
84C7 15 F4 FE                                                 LDA     R1.2            ; :
84CA 06                                                       ROL                     ; :
84CB 16 F4 FE                                                 STA     R1.2            ; :
84CE 15 F5 FE                                                 LDA     R1.3            ; :
84D1 06                                                       ROL                     ; :
84D2 16 F5 FE                                                 STA     R1.3            ; :
                                                      
84D5 15 F4 FE                                                 LDA     R1.2            ; R3H = R1H
84D8 16 FC FE                                                 STA     R3.2            ; :
84DB 15 F5 FE                                                 LDA     R1.3            ; :
84DE 16 FD FE                                                 STA     R3.3            ; :
                                                              
84E1 15 FC FE                                                 LDA     R3.2            ; R3H = R3H - R2L
84E4 18 F6 FE                                                 SBA     R2.0            ; :
84E7 16 FC FE                                                 STA     R3.2            ; :
84EA 15 FD FE                                                 LDA     R3.3            ; :
84ED 1B F7 FE                                                 SCA     R2.1            ; :
84F0 16 FD FE                                                 STA     R3.3            ; :
                                                              
84F3 3C 05 85                                                 BCC     _UDI20
                                                              
84F6 15 FC FE                                                 LDA     R3.2            ; R1H = R3H
84F9 16 F4 FE                                                 STA     R1.2            ; :
84FC 15 FD FE                                                 LDA     R3.3            ; :
84FF 16 F5 FE                                                 STA     R1.3            ; :
                                                              
8502 2E F2 FE                                                 INW     R1.0            ; R1L++
                                                              
8505 27 FE FE                                         _UDI20: DEB     BC              ; All bits done?
8508 3A B9 84                                                 BNE     _UDI10          ; NO: Loop again
                                                              
850B 39                                                       RTS
                                                      ; INCLUDE         debug.asm
                                                      
                                                      ; INCLUDE         inner.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; INNER INTERPRETER
                                                      
850C 2F EC FE                                         IPUSH:  DEW     SP              ; -(SP) = R1H
850F 15 F5 FE                                                 LDA     R1.3
8512 1E EC FE                                                 STR     SP
8515 2F EC FE                                                 DEW     SP
8518 15 F4 FE                                                 LDA     R1.2
851B 1E EC FE                                                 STR     SP
851E 2F EC FE                                         PUSH:   DEW     SP              ; -(SP) = R1L
8521 15 F3 FE                                                 LDA     R1.1
8524 1E EC FE                                                 STR     SP
8527 2F EC FE                                                 DEW     SP
852A 15 F2 FE                                                 LDA     R1.0
852D 1E EC FE                                                 STR     SP
8530 1D E8 FE                                         NEXT:   LDR     IP              ; WA = (IP)+
8533 16 EA FE                                                 STA     WA.0
8536 2E E8 FE                                                 INW     IP
8539 1D E8 FE                                                 LDR     IP
853C 16 EB FE                                                 STA     WA.1
853F 2E E8 FE                                                 INW     IP
8542 1D EA FE                                         NEXT10: LDR     WA              ; BC/TMP = (WA)+
8545 16 FE FE                                                 STA     BC
8548 2E EA FE                                                 INW     WA
854B 1D EA FE                                                 LDR     WA
854E 16 FF FE                                                 STA     TMP
8551 2E EA FE                                                 INW     WA
                                                      ;        LDA     DBG
                                                      ;        CPI     0
                                                      ;        BEQ     NEXT11
                                                      ;        JPS     DEBUG
8554 1C FE FE                                         NEXT11: JPR     BC              ; jump @(BC/TMP)
                                                      
                                                      ; ------------------------------
                                                      ;       Push TRUE and FALSE
                                                      
8557 2C F2 FE                                         PUSHT:  CLW     R1              ; A zero
855A 2F F2 FE                                                 DEW     R1              ; Make it into a -1 i.e. TRUE flag
855D 14 1E 85                                                 JPA     PUSH
                                                      
8560 2C F2 FE                                         PUSHF:  CLW     R1              ; A zero
8563 14 1E 85                                                 JPA     PUSH
                                                      
                                                      ; ------------------------------
                                                      ;       Push R1X, MSB as TOS
                                                      
8566 2F EC FE                                         DPUSH:  DEW     SP              ; -(SP) = R1X
8569 15 F3 FE                                                 LDA     R1.1
856C 1E EC FE                                                 STR     SP
856F 2F EC FE                                                 DEW     SP
8572 15 F2 FE                                                 LDA     R1.0
8575 1E EC FE                                                 STR     SP
8578 2F EC FE                                                 DEW     SP
857B 15 F5 FE                                                 LDA     R1.3
857E 1E EC FE                                                 STR     SP
8581 2F EC FE                                                 DEW     SP
8584 15 F4 FE                                                 LDA     R1.2
8587 1E EC FE                                                 STR     SP
858A 14 30 85                                                 JPA     NEXT
                                                      
                                                      ; INCLUDE         primaries.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; FORTH PRIMARIES
                                                      ;
                                                      
858D 83 4C 49 D4                                      HLIT:   DB      ^3 "LI" ^'T'                            ; ***** LIT
8591 00 00                                                    DW      0
8593 95 85                                            LIT:    DW      LIT0
8595 38 2A 80                                         LIT0:   JPS     _LIT            ; R1 = (IP)+
8598 14 1E 85                                                 JPA     PUSH            ; -(SP) = R1; NEXT
                                                      
859B 87 45 58 45 43 55 54 C5                          HEXEC:  DB      ^7 "EXECUT" ^'E'                        ; ***** EXECUTE
85A3 8D 85                                                    DW      HLIT
85A5 A7 85                                            EXEC:   DW      EXEC0
85A7 1D EC FE                                         EXEC0:  LDR     SP              ; WA = (SP)+
85AA 16 EA FE                                                 STA     WA.0
85AD 2E EC FE                                                 INW     SP
85B0 1D EC FE                                                 LDR     SP
85B3 16 EB FE                                                 STA     WA.1
85B6 2E EC FE                                                 INW     SP
85B9 14 42 85                                                 JPA     NEXT10          ; jump @(WA)+
                                                      
85BC 86 42 52 41 4E 43 C8                             HBRAN:  DB      ^6 "BRANC" ^'H'                         ; ***** BRANCH
85C3 9B 85                                                    DW      HEXEC
85C5 C7 85                                            BRAN:   DW      BRAN0
85C7 38 3D 80                                         BRAN0:  JPS     _BRAN           ; IP = IP + (IP)
85CA 14 30 85                                                 JPA     NEXT
                                                      
85CD 87 30 42 52 41 4E 43 C8                          HZBRAN: DB      ^7 "0BRANC" ^'H'                        ; ***** 0BRANCH
85D5 BC 85                                                    DW      HBRAN
85D7 D9 85                                            ZBRAN:  DW      ZBRAN0
85D9 1D EC FE                                         ZBRAN0: LDR     SP
85DC 11 00                                                    CPI     0               ; Low byte non-zero?
85DE 3A F2 85                                                 BNE     ZBRA10          ; YES: Do not branch
85E1 2E EC FE                                                 INW     SP
85E4 1D EC FE                                                 LDR     SP
85E7 11 00                                                    CPI     0               ; High byte non-zero?
85E9 3A F5 85                                                 BNE     ZBRA20          ; YES: Do not branch
85EC 2E EC FE                                                 INW     SP
85EF 14 C7 85                                                 JPA     BRAN0           ; IP = IP + (IP); NEXT
85F2 2E EC FE                                         ZBRA10: INW     SP
85F5 2E EC FE                                         ZBRA20: INW     SP
85F8 2E E8 FE                                                 INW     IP              ; Just skip jump offset
85FB 2E E8 FE                                                 INW     IP
85FE 14 30 85                                                 JPA     NEXT
                                                      
8601 87 28 2B 4C 4F 4F 50 A9                          HXPLOO: DB      ^7 "(+LOOP" ^')'                        ; ***** (+LOOP)
8609 CD 85                                                    DW      HZBRAN
860B 0D 86                                            XPLOO:  DW      XPLOO0
860D 38 AF 80                                         XPLOO0: JPS     _GET2           ; R2 = (SP) [only copying increment]
8610 38 21 81                                                 JPS     _RPOP1          ; R1 = (RP)+
8613 38 18 82                                                 JPS     _ADD16          ; R1 = counter'
8616 38 38 81                                                 JPS     _RGET2          ; R2 = limit
8619 38 D5 81                                                 JPS     _RPUSH1         ; -(RP) = R1'
861C 38 F9 80                                                 JPS     _POP3           ; R3 = (SP)+ [now popping incr]
861F 15 FB FE                                                 LDA     R3.1            ; Is increment negative?
8622 11 00                                                    CPI     0               ; :
8624 3E 2A 86                                                 BPL     XPLO10
                                                              ; Handle negative increment
8627 38 60 83                                                 JPS     _XCH16          ; R1 <-> R2
                                                              ; Compare counter to limit
862A 15 F3 FE                                         XPLO10: LDA     R1.1            ; Compare MSB
862D 19 F7 FE                                                 CPA     R2.1            ; :
8630 3F C7 85                                                 BMI     BRAN0           ; R2 is greater, continue looping
8633 3B 39 86                                                 BEQ     XPLO20          ; MSBs are equal, check LSBs
8636 14 42 86                                                 JPA     XPLO30          ; R1 is greater, stop looping
                                                              ; MSBs are equal
8639 15 F2 FE                                         XPLO20: LDA     R1.0            ; Compare LSB
863C 19 F6 FE                                                 CPA     R2.0            
863F 3F C7 85                                                 BMI     BRAN0           ; R2 is greater, continue looping
                                                              ; Limit reached, cleanup rstack and stop looping
8642 0E 04                                            XPLO30: LDI     4               ; Drop loop counter ...
8644 30 EE FE                                                 ADW     RP              ; ... and loop limit
8647 0E 02                                                    LDI     2               ; Skip branch offset
8649 30 E8 FE                                                 ADW     IP              ; :
864C 14 30 85                                                 JPA     NEXT
                                                      
864F 86 28 4C 4F 4F 50 A9                             HXLOOP: DB      ^6 "(LOOP" ^')'                         ; ***** (LOOP)
8656 01 86                                                    DW      HXPLOO
8658 5A 86                                            XLOOP:  DW      XLOOP0
865A 2C F2 FE                                         XLOOP0: CLW     R1              ; Push a one
865D 2E F2 FE                                                 INW     R1              ; :
8660 38 7B 81                                                 JPS     _PUSH1          ; :
8663 14 0D 86                                                 JPA     XPLOO0          ; (+LOOP)
                                                      
8666 84 28 44 4F A9                                   HXDO:   DB      ^4 "(DO" ^')'                           ; ***** (DO)
866B 4F 86                                                    DW      HXLOOP
866D 6F 86                                            XDO:    DW      XDO0
866F 38 03 81                                         XDO0:   JPS     _POP21          ; Loop counter, limit
8672 38 D5 81                                                 JPS     _RPUSH1         ; Push limit onto rstack
8675 38 F3 81                                                 JPS     _RPUSH2         ; Push loop counter onto rstack
8678 14 30 85                                                 JPA     NEXT
                                                      
867B 81 C9                                            HI:     DB      ^1 ^'I'                                 ; ***** I
867D 66 86                                                    DW      HXDO
867F 81 86                                            I:      DW      I0
8681 38 1A 81                                         I0:     JPS     _RGET1          ; Get loop counter
8684 14 1E 85                                                 JPA     PUSH            ; Push it onto dstack
                                                      
8687 85 44 49 47 49 D4                                HDIGIT: DB      ^5 "DIGI" ^'T'                          ; ***** DIGIT
868D 7B 86                                                    DW      HI
868F 91 86                                            DIGIT:  DW      DIGIT0
8691 38 03 81                                         DIGIT0: JPS     _POP21          ; R2 = base, R1 = char
8694 15 F2 FE                                                 LDA     R1.0            ; Get character into A
8697 11 41                                                    CPI     'A'             ; Greater or equal to 'A'?
8699 3F A6 86                                                 BMI     DIGI10          ; NO: Then it has to be '0' - '9'
869C 11 5B                                                    CPI     '['             ; Less than '[' (i.e. 'A' - 'Z')?
869E 3E C2 86                                                 BPL     DIGI88          ; NO: Not a digit
86A1 10 37                                                    SBI     55              ; A becomes 10
86A3 14 B0 86                                                 JPA     DIGI20          ; Go check against base
                                                              ; '0' - '9' case
86A6 10 30                                            DIGI10: SBI     '0'             ; Assume '0' - '9'
86A8 3F C2 86                                                 BMI     DIGI88          ; Oops! Negative, not a digit
86AB 11 0A                                                    CPI     10              ; Greater than 9?
86AD 3E C2 86                                                 BPL     DIGI88          ; YES: Not a digit
                                                              ; Check result against base
86B0 19 F6 FE                                         DIGI20: CPA     R2.0            ; Less than base?
86B3 3F B9 86                                                 BMI     DIGI77          ; YES: Conversion done
86B6 14 C2 86                                                 JPA     DIGI88          ; NO: Not a digit
                                                              ; Conversion successful
86B9 16 F2 FE                                         DIGI77: STA     R1.0            ; Store binary value
86BC 38 7B 81                                                 JPS     _PUSH1          ; Push the value
86BF 14 57 85                                                 JPA     PUSHT           ; Push TRUE; NEXT
                                                              ; Not a digit
86C2 14 60 85                                         DIGI88: JPA     PUSHF           ; Push FALSE; NEXT
                                                      
86C5 86 28 46 49 4E 44 A9                             HPFIND: DB      ^6 "(FIND" ^')'                         ; ***** (FIND)
86CC 87 86                                                    DW      HDIGIT
86CE D0 86                                            PFIND:  DW      PFIND0
86D0 38 73 80                                         PFIND0: JPS     _POP1           ; NFA
86D3 38 F9 80                                                 JPS     _POP3           ; String address
86D6 15 FA FE                                         PFIN10: LDA     R3.0            ; R2 = R3 (string address)
86D9 16 F6 FE                                                 STA     R2.0            ; :
86DC 15 FB FE                                                 LDA     R3.1            ; :
86DF 16 F7 FE                                                 STA     R2.1            ; :
                                                              ; Fast comparison of length bytes
86E2 1D F2 FE                                                 LDR     R1              ; Get lByte
86E5 16 F4 FE                                                 STA     R1.2            ; ... Store as potential result
86E8 05                                                       LSL                     ; lByte &= 0x3F
86E9 05                                                       LSL                     ; :
86EA 07                                                       LSR                     ; :
86EB 07                                                       LSR                     ; :
86EC 16 F8 FE                                                 STA     R2.2            ; R2.2 is counter for string match
86EF 21 F6 FE                                                 CPR     R2              ; lByte == string length?
86F2 3A 11 87                                                 BNE     PFIN25          ; NO: Move over to next header
                                                              ; Length bytes match, check names
86F5 2E F2 FE                                         PFIN20: INW     R1              ; Bump pointers
86F8 2E F6 FE                                                 INW     R2              ; :
86FB 1D F2 FE                                                 LDR     R1              ; Get char from dictionary
86FE 05                                                       LSL                     ; char &= 0x7F
86FF 07                                                       LSR                     ; :
8700 21 F6 FE                                                 CPR     R2              ; Is it a match with search string?
8703 3A 1D 87                                                 BNE     PFIN30          ; NO: Look at next header in dictionary
8706 27 F8 FE                                                 DEB     R2.2            ; YES: Decrement character counter
8709 11 00                                                    CPI     0               ; At end of string?
870B 3B 3E 87                                                 BEQ     PFIN77          ; YES: This is the word we are looking for
870E 14 F5 86                                                 JPA     PFIN20          ; Match so far, try next char
                                                              ; Step to next header in dictionary
8711 05                                               PFIN25: LSL                     ; Eliminate potential smudge bit
8712 05                                                       LSL                     ; A = A & 0x1F
8713 05                                                       LSL                     ; lByte consists of [^ISnnnnn]
8714 07                                                       LSR                     ; :
8715 07                                                       LSR                     ; :
8716 07                                                       LSR                     ; :
8717 16 F8 FE                                                 STA     R2.2            ; : also update char counter
871A 2E F2 FE                                                 INW     R1              ; Bump NFA pointer to actual characters
871D 2E F2 FE                                         PFIN30: INW     R1              ; Bump NFA pointer
8720 27 F8 FE                                                 DEB     R2.2            ; Decrement character counter
8723 11 00                                                    CPI     0               ; End of name field?
8725 3A 1D 87                                                 BNE     PFIN30          ; NO: Step to next char
8728 38 50 82                                                 JPS     _ATR1           ; YES: R1 = (R1)
872B 15 F3 FE                                                 LDA     R1.1            ; At end of dictionary?
872E 11 00                                                    CPI     0               ; :
8730 3A D6 86                                                 BNE     PFIN10          ; NO: Try this word for match
8733 15 F2 FE                                                 LDA     R1.0            ; :
8736 11 00                                                    CPI     0               ; :
8738 3A D6 86                                                 BNE     PFIN10          ; NO: Try this word for match
                                                              ; Word not found, return a single FALSE
873B 14 60 85                                         PFIN88: JPA     PUSHF           ; Done
                                                              ; Word found, return PFA, lByte, TRUE
873E 0E 05                                            PFIN77: LDI     5               ; Bump ptr to PFA
8740 30 F2 FE                                                 ADW     R1              ; :
8743 38 7B 81                                                 JPS     _PUSH1          ; Push PFA
8746 15 F4 FE                                                 LDA     R1.2            ; Get stored length byte
8749 16 F2 FE                                                 STA     R1.0            ; :
874C 24 F3 FE                                                 CLB     R1.1            ; Clear MSB
874F 38 7B 81                                                 JPS     _PUSH1          ; Push length byte
8752 14 57 85                                                 JPA     PUSHT           ; Done
                                                      
8755 87 45 4E 43 4C 4F 53 C5                          HENCL:  DB      ^7 "ENCLOS" ^'E'                        ; ***** ENCLOSE
875D C5 86                                                    DW      HPFIND
875F 61 87                                            ENCL:   DW      ENCL0
8761 38 F9 80                                         ENCL0:  JPS     _POP3           ; Get delimiter char
8764 38 6C 80                                                 JPS     _GET1           ; Get addr of input
8767 2C F6 FE                                                 CLW     R2              ; Initialize char index
                                                              ; Scan preceeding delimiters
876A 1D F2 FE                                         ENCL10: LDR     R1              ; Get char from input
876D 11 00                                                    CPI     0               ; Is it <NUL>?
876F 3B A7 87                                                 BEQ     ENCL50          ; YES: <NUL> before first non-delimiter
8772 19 FA FE                                                 CPA     R3.0            ; Is it a delimiter?
8775 3A 81 87                                                 BNE     ENCL20          ; NO: We have the start of next token
8778 2E F2 FE                                                 INW     R1              ; Bump to next char ...
877B 2E F6 FE                                                 INW     R2              ; ... also increase index
877E 14 6A 87                                                 JPA     ENCL10          ; Go back to look at next char
                                                              ; Start of token
8781 38 99 81                                         ENCL20: JPS     _PUSH2          ; Push result n1 (first char of token)
8784 1D F2 FE                                         ENCL30: LDR     R1              ; Get char from input
8787 11 00                                                    CPI     0               ; Is it <NUL>?
8789 3B AD 87                                                 BEQ     ENCL60          ; YES: <NUL> found
878C 19 FA FE                                                 CPA     R3.0            ; Is it a delimiter?
878F 3B 9B 87                                                 BEQ     ENCL40          ; YES: We have the end of the token
8792 2E F2 FE                                                 INW     R1              ; Bump to next char ...
8795 2E F6 FE                                                 INW     R2              ; ... also increase index
8798 14 84 87                                                 JPA     ENCL30          ; Go back to look at next char
                                                              ; End of token
879B 38 99 81                                         ENCL40: JPS     _PUSH2          ; Push result n2 (ending delimiter)
879E 2E F6 FE                                                 INW     R2              ; Also push n3 ...
87A1 38 99 81                                                 JPS     _PUSH2          ; : ... (index to first non-scanned char)
87A4 14 30 85                                                 JPA     NEXT            ; Done
                                                              ; <NUL> word found
87A7 38 99 81                                         ENCL50: JPS     _PUSH2          ; Push i (index to <NUL>)
87AA 2E F6 FE                                                 INW     R2              ; Push i + 1 (a null is one character long)
                                                              ; Token ends with a <NUL>
87AD 38 99 81                                         ENCL60: JPS     _PUSH2          ; :
87B0 38 99 81                                                 JPS     _PUSH2          ; :
87B3 14 30 85                                                 JPA     NEXT            ; Done
                                                      
                                                      ; NOTE: EMIT, KEY, ?TERMINAL and CR moved to "extras" as they have been
                                                      ;       implemented as vectored functions in Minimal-FORTH
                                                      
87B6 85 43 4D 4F 56 C5                                HCMOVE: DB      ^5 "CMOV" ^'E'                          ; ***** CMOVE
87BC 55 87                                                    DW      HENCL
87BE C0 87                                            CMOVE:  DW      CMOVE0
87C0 38 00 81                                         CMOVE0: JPS     _POP321         ; R3 = count, R2 = dst, R1 = src
87C3 1D F2 FE                                         CMOV10: LDR     R1              ; Get byte from source
87C6 1E F6 FE                                                 STR     R2              ; Store to destination
87C9 2E F2 FE                                                 INW     R1              ; Bump source pointer
87CC 2E F6 FE                                                 INW     R2              ; Bump destination pointer
87CF 2F FA FE                                                 DEW     R3              ; Decrement count
87D2 15 FA FE                                                 LDA     R3.0            ; Low byte zero?
87D5 11 00                                                    CPI     0               ; :
87D7 3A C3 87                                                 BNE     CMOV10          ; NO: One more byte
87DA 15 FB FE                                                 LDA     R3.1            ; High byte zero?
87DD 11 00                                                    CPI     0               ; :
87DF 3A C3 87                                                 BNE     CMOV10          ; NO: One more byte
87E2 14 30 85                                                 JPA     NEXT            ; YES: Count zero. Done.
                                                      
87E5 82 55 AA                                         HUSTAR: DB      ^2 "U" ^'*'                             ; ***** U*
87E8 B6 87                                                    DW      HCMOVE
87EA EC 87                                            USTAR:  DW      USTAR0
87EC 38 03 81                                         USTAR0: JPS     _POP21          ; R2 = oper2, R1 = oper1
87EF 38 43 84                                                 JPS     _UMULT          ; u32 = u16 * u16
87F2 2F EC FE                                                 DEW     SP              ; -(SP) = R3X
87F5 15 FB FE                                                 LDA     R3.1            ; :
87F8 1E EC FE                                                 STR     SP              ; :
87FB 2F EC FE                                                 DEW     SP              ; :
87FE 15 FA FE                                                 LDA     R3.0            ; :
8801 1E EC FE                                                 STR     SP              ; :
8804 2F EC FE                                                 DEW     SP              ; :
8807 15 FD FE                                                 LDA     R3.3            ; :
880A 1E EC FE                                                 STR     SP              ; :
880D 2F EC FE                                                 DEW     SP              ; :
8810 15 FC FE                                                 LDA     R3.2            ; :
8813 1E EC FE                                                 STR     SP              ; :
8816 14 30 85                                                 JPA     NEXT            ; Done
                                                      
8819 82 55 AF                                         HUSLAS: DB      ^2 "U" ^'/'                             ; ***** U/
881C E5 87                                                    DW      HUSTAR
881E 20 88                                            USLAS:  DW      USLAS0
8820 38 03 81                                         USLAS0: JPS     _POP21          ; R2 = divisor, R1 = dividend-hi
8823 15 F2 FE                                                 LDA     R1.0            ; Move high part to R1.2 and R1.3
8826 16 F4 FE                                                 STA     R1.2            ; :
8829 15 F3 FE                                                 LDA     R1.1            ; :
882C 16 F5 FE                                                 STA     R1.3            ; :
882F 38 73 80                                                 JPS     _POP1           ; dividend, low 16b
8832 38 B4 84                                                 JPS     _UDIV           ; u32 / u16 --> quot_u16, rem_u16
8835 14 0C 85                                                 JPA     IPUSH           ; Push R1H; Push R1L; NEXT
                                                      
8838 83 41 4E C4                                      HAND:   DB      ^3 "AN" ^'D'                            ; ***** AND
883C 19 88                                                    DW      HUSLAS
883E 40 88                                            AND:    DW      AND0
8840 38 03 81                                         AND0:   JPS     _POP21          ; R2 = oper2, R1 = oper1
8843 38 1C 84                                                 JPS     _AND16          ; R1 = R1 & R2
8846 14 1E 85                                                 JPA     PUSH            ; Done
                                                      
8849 82 4F D2                                         HOR:    DB      ^2 "O" ^'R'                             ; ***** OR
884C 38 88                                                    DW      HAND
884E 50 88                                            OR:     DW      OR0
8850 38 03 81                                         OR0:    JPS     _POP21          ; R2 = oper2, R1 = oper1
8853 38 29 84                                                 JPS     _OR16           ; R1 = R1 | R2
8856 14 1E 85                                                 JPA     PUSH            ; Done
                                                      
8859 83 58 4F D2                                      HXOR:   DB      ^3 "XO" ^'R'                            ; ***** XOR
885D 49 88                                                    DW      HOR
885F 61 88                                            XOR:    DW      XOR0
8861 38 03 81                                         XOR0:   JPS     _POP21          ; R2 = oper2, R1 = oper1
8864 38 36 84                                                 JPS     _XOR16          ; R1 = R1 ^ R2
8867 14 1E 85                                                 JPA     PUSH            ; Done
                                                      
886A 83 53 50 C0                                      HSPAT:  DB      ^3 "SP" ^'@'                            ; ***** SP@
886E 59 88                                                    DW      HXOR
8870 72 88                                            SPAT:   DW      SPAT0
8872 15 EC FE                                         SPAT0:  LDA     SP.0            ; Get stack pointer
8875 16 F2 FE                                                 STA     R1.0            ; : into R1
8878 15 ED FE                                                 LDA     SP.1            ; :
887B 16 F3 FE                                                 STA     R1.1            ; :
887E 14 1E 85                                                 JPA     PUSH            ; Push R1; NEXT
                                                      
8881 83 53 50 A1                                      HSPSTO: DB      ^3 "SP" ^'!'                            ; ***** SP!
8885 6A 88                                                    DW      HSPAT
8887 89 88                                            SPSTO:  DW      SPSTO0
8889 0E 12                                            SPSTO0: LDI     18              ; Index of SP0
888B 16 F6 FE                                                 STA     R2.0            ; : in boot table
888E 38 73 83                                                 JPS     _PORIG          ; R3 = &bootTable[R2]
8891 38 6C 82                                                 JPS     _LD16           ; R1 = XSP
8894 15 F2 FE                                                 LDA     R1.0            ; SP = R1
8897 16 EC FE                                                 STA     SP.0            ; :
889A 15 F3 FE                                                 LDA     R1.1            ; :
889D 16 ED FE                                                 STA     SP.1            ; :
88A0 14 30 85                                                 JPA     NEXT            ; Done
                                                      
88A3 83 52 50 A1                                      HRPSTO: DB      ^3 "RP" ^'!'                            ; ***** RP!
88A7 81 88                                                    DW      HSPSTO
88A9 AB 88                                            RPSTO:  DW      RPSTO0
88AB 0E 14                                            RPSTO0: LDI     20              ; Index of SP0
88AD 16 F6 FE                                                 STA     R2.0            ; : in boot table
88B0 38 73 83                                                 JPS     _PORIG          ; R3 = &bootTable[R2]
88B3 38 6C 82                                                 JPS     _LD16           ; R1 = XRP
88B6 15 F2 FE                                                 LDA     R1.0            ; SP = R1
88B9 16 EE FE                                                 STA     RP.0            ; :
88BC 15 F3 FE                                                 LDA     R1.1            ; :
88BF 16 EF FE                                                 STA     RP.1            ; :
88C2 14 30 85                                                 JPA     NEXT            ; Done
                                                      
88C5 83 55 50 A1                                      HUPSTO: DB      ^3 "UP" ^'!'                            ; ***** UP!
88C9 A3 88                                                    DW      HRPSTO
88CB CD 88                                            UPSTO:  DW      UPSTO0
88CD 0E 10                                            UPSTO0: LDI     16              ; Index of UP0
88CF 16 F6 FE                                                 STA     R2.0            ; : in boot table
88D2 38 73 83                                                 JPS     _PORIG          ; R3 = &bootTable[R2]
88D5 38 6C 82                                                 JPS     _LD16           ; R1 = XUP
88D8 15 F2 FE                                                 LDA     R1.0            ; UP = R1
88DB 16 F0 FE                                                 STA     UP.0            ; :
88DE 15 F3 FE                                                 LDA     R1.1            ; :
88E1 16 F1 FE                                                 STA     UP.1            ; :
88E4 14 30 85                                                 JPA     NEXT            ; Done
                                                      
88E7 82 3B D3                                         HSEMIS: DB      ^2 ";" ^'S'                             ; ***** ;S
88EA A3 88                                                    DW      HRPSTO
88EC EE 88                                            SEMIS:  DW      SEMIS0
88EE 1D EE FE                                         SEMIS0: LDR     RP              ; IP = (RP)+
88F1 16 E8 FE                                                 STA     IP.0            ; :
88F4 2E EE FE                                                 INW     RP              ; :
88F7 1D EE FE                                                 LDR     RP              ; :
88FA 16 E9 FE                                                 STA     IP.1            ; :
88FD 2E EE FE                                                 INW     RP              ; :
8900 14 30 85                                                 JPA     NEXT            ; Done
                                                      
8903 85 4C 45 41 56 C5                                HLEAVE: DB      ^5 "LEAV" ^'E'                          ; ***** LEAVE
8909 E7 88                                                    DW      HSEMIS
890B 0D 89                                            LEAVE:  DW      LEAVE0
890D 38 21 81                                         LEAVE0: JPS     _RPOP1          ; 2(RP) = (RP)
8910 38 CE 81                                                 JPS     _RPUT1          ; :
8913 38 D5 81                                                 JPS     _RPUSH1         ; :
8916 14 30 85                                                 JPA     NEXT
                                                      
8919 82 3E D2                                         HTOR:   DB      ^2 ">" ^'R'                             ; ***** >R
891C 03 89                                                    DW      HLEAVE
891E 20 89                                            TOR:    DW      TOR0
8920 38 73 80                                         TOR0:   JPS     _POP1           ; -(RP) = (SP)+
8923 38 D5 81                                                 JPS     _RPUSH1         ; :
8926 14 30 85                                                 JPA     NEXT
                                                      
8929 82 52 BE                                         HFROMR: DB      ^2 "R" ^'>'                             ; ***** R>
892C 19 89                                                    DW      HTOR
892E 30 89                                            FROMR:  DW      FROMR0
8930 38 21 81                                         FROMR0: JPS     _RPOP1          ; -(SP) = (RP)+
8933 14 1E 85                                                 JPA     PUSH            ; :
                                                      
8936 81 D2                                            HR:     DB      ^1 ^'R'                                 ; ***** R
8938 29 89                                                    DW      HFROMR
893A 3C 89                                            R:      DW      R0
893C 38 1A 81                                         R0:     JPS     _RGET1          ; -(SP) = (RP)
893F 14 1E 85                                                 JPA     PUSH            ; :
                                                      
8942 82 30 BD                                         HZEQU:  DB      ^2 "0" ^'='                             ; ***** 0=
8945 36 89                                                    DW      HR
8947 49 89                                            ZEQU:   DW      ZEQU0
8949 38 4F 89                                         ZEQU0:  JPS     _ZEQU
894C 14 30 85                                                 JPA     NEXT
                                                              ;
894F 2C F2 FE                                         _ZEQU:  CLW     R1              ; Assume FALSE
8952 1D EC FE                                                 LDR     SP              ; Get low byte
8955 11 00                                                    CPI     0               ; Is it zero?
8957 3A 6F 89                                                 BNE     ZEQU10          ; NO: Return FALSE
895A 2E EC FE                                                 INW     SP              ; YES: Have to inspect
895D 1D EC FE                                                 LDR     SP              ; : high byte as well
8960 11 00                                                    CPI     0               ; Is it zero?
8962 3A 72 89                                                 BNE     ZEQU20          ; NO: Return FALSE
8965 2E EC FE                                                 INW     SP              ; Make POP complete
8968 2F F2 FE                                                 DEW     R1              ; Make TRUE flag
896B 38 7B 81                                                 JPS     _PUSH1          ; YES: Return TRUE
896E 39                                                       RTS                     ; Done
896F 2E EC FE                                         ZEQU10: INW     SP              ; POP argument off dstack
8972 2E EC FE                                         ZEQU20: INW     SP              ; : Make POP complete
8975 38 7B 81                                                 JPS     _PUSH1          ; Return FALSE
8978 39                                                       RTS                     ; Done
                                                      
8979 82 30 BC                                         HZLESS: DB      ^2 "0" ^'<'                             ; ***** 0<
897C 42 89                                                    DW      HZEQU
897E 80 89                                            ZLESS:  DW      ZLESS0
8980 38 86 89                                         ZLESS0: JPS     _ZLESS
8983 14 30 85                                                 JPA     NEXT
                                                              ;
8986 2C F2 FE                                         _ZLESS: CLW     R1              ; Assume FALSE
8989 2E EC FE                                                 INW     SP              ; Inspect high byte only
898C 1D EC FE                                                 LDR     SP              ; Get high byte
898F 11 00                                                    CPI     0               ; Is high byte negative?
8991 3F 9B 89                                                 BMI     ZLES10          ; YES: Return TRUE
8994 2E EC FE                                                 INW     SP              ; NO: POP high byte also
8997 38 7B 81                                                 JPS     _PUSH1          ; Return FALSE
899A 39                                                       RTS                     ; Done
899B 2E EC FE                                         ZLES10: INW     SP              ; POP high byte also
899E 2F F2 FE                                                 DEW     R1              ; Make TRUE flag
89A1 38 7B 81                                                 JPS     _PUSH1          ; Return TRUE
89A4 39                                                       RTS                     ; Done
                                                      
89A5 81 AB                                            HPLUS:  DB      ^1 ^'+'                                 ; ***** +
89A7 79 89                                                    DW      HZLESS
89A9 AB 89                                            PLUS:   DW      PLUS0
89AB 38 03 81                                         PLUS0:  JPS     _POP21          ; R2 = oper2, R1 = oper1
89AE 38 18 82                                                 JPS     _ADD16          ; R1 = R1 + R2
89B1 14 1E 85                                                 JPA     PUSH            ; -(SP) = R1; NEXT
                                                      
89B4 82 44 AB                                         HDPLUS: DB      ^2 "D" ^'+'                             ; ***** D+
89B7 A5 89                                                    DW      HPLUS
89B9 BB 89                                            DPLUS:  DW      DPLUS0
89BB 38 BD 80                                         DPLUS0: JPS     _DPOP2          ; Get second operand
89BE 38 7A 80                                                 JPS     _DPOP1          ; Get first operand
89C1 38 2B 82                                                 JPS     _ADD32          ; R1X = R1X + R2X
89C4 14 66 85                                                 JPA     DPUSH           ; -(SP) = R1X; NEXT
                                                      
89C7 85 4D 49 4E 55 D3                                HMINUS: DB      ^5 "MINU" ^'S'                          ; ***** MINUS
89CD B4 89                                                    DW      HDPLUS
89CF D1 89                                            MINUS:  DW      MINUS0
89D1 38 73 80                                         MINUS0: JPS     _POP1           ; Get operand
89D4 38 28 83                                                 JPS     _NEG16          ; Negate
89D7 14 1E 85                                                 JPA     PUSH
                                                      
89DA 86 44 4D 49 4E 55 D3                             HDMINU: DB      ^6 "DMINU" ^'S'                         ; ***** DMINUS
89E1 C7 89                                                    DW      HMINUS
89E3 E5 89                                            DMINU:  DW      DMINU0
89E5 38 7A 80                                         DMINU0: JPS     _DPOP1          ; Get operand
89E8 38 3C 83                                                 JPS     _NEG32          ; Negate
89EB 14 66 85                                                 JPA     DPUSH
                                                      
89EE 84 50 49 43 CB                                   HPICK:  DB      ^4 "PIC" ^'K'                           ; ***** PICK
89F3 DA 89                                                    DW      HDMINU
89F5 F7 89                                            PICK:   DW      PICK0
89F7 38 FD 89                                         PICK0:  JPS     _PICK
89FA 14 30 85                                                 JPA     NEXT
                                                              ;
89FD 38 73 80                                         _PICK:  JPS     _POP1           ; Get index number
8A00 15 F2 FE                                                 LDA     R1.0            ; Push onto Minimal stack
8A03 36                                                       PHS                     ; :
8A04 38 97 83                                                 JPS     __PICK          ; R1 = n(SP)
8A07 37                                                       PLS                     ; Remove index number
8A08 38 7B 81                                                 JPS     _PUSH1          ; -(SP) = R1
8A0B 39                                                       RTS                     ; Done
                                                      
8A0C 84 52 4F 4C CC                                   HROLL:  DB      ^4 "ROL" ^'L'                           ; ***** ROLL
8A11 EE 89                                                    DW      HPICK
8A13 15 8A                                            ROLL:   DW      ROLL0
8A15 38 1B 8A                                         ROLL0:  JPS     _ROLL
8A18 14 30 85                                                 JPA     NEXT
                                                              ;
8A1B 38 73 80                                         _ROLL:  JPS     _POP1           ; Get index number
8A1E 15 F2 FE                                                 LDA     R1.0            ; Push onto Minimal stack
8A21 36                                                       PHS                     ; :
8A22 38 AD 83                                                 JPS     __ROLL          ; R1 = n(SP)
8A25 37                                                       PLS                     ; Remove index number
8A26 39                                                       RTS                     ; Done
                                                      
8A27 84 4F 56 45 D2                                   HOVER:  DB      ^4 "OVE" ^'R'                           ; ***** OVER
8A2C 0C 8A                                                    DW      HROLL
8A2E 30 8A                                            OVER:   DW      OVER0
8A30 38 36 8A                                         OVER0:  JPS     _OVER
8A33 14 30 85                                                 JPA     NEXT
                                                              ;
8A36 38 B6 80                                         _OVER:  JPS     _POP2           ; n1 n2 -- n1 n2 n1
8A39 38 6C 80                                                 JPS     _GET1           ; :
8A3C 38 99 81                                                 JPS     _PUSH2          ; :
8A3F 38 7B 81                                                 JPS     _PUSH1          ; :
8A42 39                                                       RTS
                                                      
8A43 84 44 52 4F D0                                   HDROP:  DB      ^4 "DRO" ^'P'                           ; **** DROP
8A48 27 8A                                                    DW      HOVER
8A4A 4C 8A                                            DROP:   DW      DROP0
8A4C 38 52 8A                                         DROP0:  JPS     _DROP
8A4F 14 30 85                                                 JPA     NEXT
                                                              ;
8A52 0E 02                                            _DROP:  LDI     2               ; n1 --
8A54 30 EC FE                                                 ADW     SP              ; :
8A57 39                                                       RTS                     ; Done
                                                      
8A58 84 53 57 41 D0                                   HSWAP:  DB      ^4 "SWA" ^'P'                           ; **** SWAP
8A5D 43 8A                                                    DW      HDROP
8A5F 61 8A                                            SWAP:   DW      SWAP0
8A61 38 67 8A                                         SWAP0:  JPS     _SWAP
8A64 14 30 85                                                 JPA     NEXT
                                                              ;
8A67 38 03 81                                         _SWAP:  JPS     _POP21          ; n1 n2 -- n2 n1
8A6A 38 99 81                                                 JPS     _PUSH2          ; :
8A6D 38 7B 81                                                 JPS     _PUSH1          ; :
8A70 39                                                       RTS                     ; Done
                                                      
8A71 83 44 55 D0                                      HDUP:   DB      ^3 "DU" ^'P'                            ; **** DUP
8A75 58 8A                                                    DW      HSWAP
8A77 79 8A                                            DUP:    DW      DUP0
8A79 38 7F 8A                                         DUP0:   JPS     _DUP
8A7C 14 30 85                                                 JPA     NEXT
                                                              ;
8A7F 38 6C 80                                         _DUP:   JPS     _GET1           ; n1 -- n1 n1
8A82 38 7B 81                                                 JPS     _PUSH1          ; :
8A85 39                                                       RTS
                                                      
8A86 85 32 4F 56 45 D2                                HTOVER: DB      ^5 "2OVE" ^'R'                          ; ***** 2OVER
8A8C 71 8A                                                    DW      HDUP
8A8E 90 8A                                            TOVER:  DW      TOVER0
8A90 0E 03                                            TOVER0: LDI     3
8A92 36                                                       PHS
8A93 38 FD 89                                                 JPS     _PICK           ; 3 PICK
8A96 38 7B 81                                                 JPS     _PUSH1
8A99 38 FD 89                                                 JPS     _PICK           ; 3 PICK
8A9C 37                                                       PLS
8A9D 14 1E 85                                                 JPA     PUSH
                                                      
8AA0 85 32 44 52 4F D0                                HTDROP: DB      ^5 "2DRO" ^'P'                          ; ***** 2DROP
8AA6 86 8A                                                    DW      HTOVER
8AA8 AA 8A                                            TDROP:  DW      TDROP0
8AAA 0E 04                                            TDROP0: LDI     4
8AAC 30 EC FE                                                 ADW     SP
8AAF 14 30 85                                                 JPA     NEXT
                                                      
8AB2 85 32 53 57 41 D0                                HTSWAP: DB      ^5 "2SWA" ^'P'                          ; ***** 2SWAP
8AB8 A0 8A                                                    DW      HTDROP
8ABA BC 8A                                            TSWAP:  DW      TSWAP0
8ABC 0E 03                                            TSWAP0: LDI     3
8ABE 36                                                       PHS
8ABF 38 1B 8A                                                 JPS     _ROLL           ; 3 ROLL
8AC2 38 1B 8A                                                 JPS     _ROLL           ; 3 ROLL
8AC5 37                                                       PLS
8AC6 14 30 85                                                 JPA     NEXT
                                                      
8AC9 84 32 44 55 D0                                   HTDUP:  DB      ^4 "2DU" ^'P'                           ; ***** 2DUP
8ACE B2 8A                                                    DW      HTSWAP
8AD0 D2 8A                                            TDUP:   DW      TDUP0
8AD2 38 B6 80                                         TDUP0:  JPS     _POP2           ; OVER
8AD5 38 6C 80                                                 JPS     _GET1           ; :
8AD8 38 99 81                                                 JPS     _PUSH2          ; :
8ADB 38 7B 81                                                 JPS     _PUSH1          ; :
8ADE 38 B6 80                                                 JPS     _POP2           ; OVER
8AE1 38 6C 80                                                 JPS     _GET1           ; :
8AE4 38 99 81                                                 JPS     _PUSH2          ; :
8AE7 14 1E 85                                                 JPA     PUSH            ; :
                                                      
                                                      
8AEA 82 2B A1                                         HPSTOR: DB      ^2 "+" ^'!'                             ; ***** +!
8AED C9 8A                                                    DW      HTDUP
8AEF F1 8A                                            PSTOR:  DW      PSTOR0
8AF1 38 F7 8A                                         PSTOR0: JPS     _PSTOR
8AF4 14 30 85                                                 JPA     NEXT
                                                              ;
8AF7 38 F9 80                                         _PSTOR: JPS     _POP3           ; R3 = addr
8AFA 38 B6 80                                                 JPS     _POP2           ; R2 = incr
8AFD 38 6C 82                                                 JPS     _LD16           ; R1 = (R3)
8B00 38 18 82                                                 JPS     _ADD16          ; R1 = R1 + R2
8B03 38 7F 82                                                 JPS     _ST16           ; (R3) = R1
8B06 39                                                       RTS                     ; Done
                                                      
8B07 86 54 4F 47 47 4C C5                             HTOGGL: DB      ^6 "TOGGL" ^'E'                         ; ***** TOGGLE
8B0E EA 8A                                                    DW      HPSTOR
8B10 12 8B                                            TOGGL:  DW      TOGGL0
8B12 38 B6 80                                         TOGGL0: JPS     _POP2           ; R2 = bit mask
8B15 38 F2 80                                                 JPS     _GET3           ; R3 = addr (leave copy on stack)
8B18 1D FA FE                                                 LDR     R3              ; Get the byte
8B1B 16 F2 FE                                                 STA     R1.0            ; :
8B1E 38 D8 82                                                 JPS     _XOR8           ; R1.0 = R1.0 ^ R2.0
8B21 38 F9 80                                                 JPS     _POP3           ; R3 = addr
8B24 15 F2 FE                                                 LDA     R1.0            ; Update the byte
8B27 1E FA FE                                                 STR     R3              ; :
8B2A 14 30 85                                                 JPA     NEXT            ; Done
                                                      
8B2D 85 3E 42 41 4E CB                                HTBANK: DB      ^5 ">BAN" ^'K'                          ; >BANK
8B33 07 8B                                                    DW      HTOGGL
8B35 37 8B                                            TBANK:  DW      TBANK0
8B37 38 73 80                                         TBANK0: JPS     _POP1           ; Get bank number from data stack into R1
8B3A 0E 3E                                                    LDI     62              ; Get index to user variable BANK
8B3C 16 F6 FE                                                 STA     R2.0            ; : into R2.0
8B3F 38 84 83                                                 JPS     _USER           ; R3 now contains absolute address of BANK
8B42 38 7F 82                                                 JPS     _ST16           ; Save the bank number in user variable BANK
8B45 15 F2 FE                                                 LDA     R1.0            ; Do the actual bank switch
8B48 01                                                       BNK                     ; :
8B49 14 30 85                                                 JPA     NEXT
                                                              
8B4C 81 C0                                            HAT:    DB      ^1 ^'@'                                 ; ***** @
8B4E 2D 8B                                                    DW      HTBANK
8B50 52 8B                                            AT:     DW      AT0
8B52 38 58 8B                                         AT0:    JPS     _AT
8B55 14 30 85                                                 JPA     NEXT
                                                              ;
8B58 38 F9 80                                         _AT:    JPS     _POP3           ; R3 = addr
8B5B 38 6C 82                                                 JPS     _LD16           ; R1 = (R3)
8B5E 38 7B 81                                                 JPS     _PUSH1           ; -(SP) = R1
8B61 39                                                       RTS
                                                      
8B62 82 43 C0                                         HCAT:   DB      ^2 "C" ^'@'                             ; ***** C@
8B65 4C 8B                                                    DW      HAT
8B67 69 8B                                            CAT:    DW      CAT0
8B69 2C F2 FE                                         CAT0:   CLW     R1              ; R1 = 0
8B6C 38 F9 80                                                 JPS     _POP3           ; R3 = addr
8B6F 1D FA FE                                                 LDR     R3              ; A = (R3)
8B72 16 F2 FE                                                 STA     R1.0            ; R1 = A
8B75 14 1E 85                                                 JPA     PUSH            ; -(SP) = R1; NEXT
                                                      
8B78 81 A1                                            HSTORE: DB      ^1 ^'!'                                 ; ***** !
8B7A 62 8B                                                    DW      HCAT
8B7C 7E 8B                                            STORE:  DW      STORE0
8B7E 38 84 8B                                         STORE0: JPS     _STORE
8B81 14 30 85                                                 JPA     NEXT
                                                              ;
8B84 38 F9 80                                         _STORE: JPS     _POP3           ; R3 = addr
8B87 38 73 80                                                 JPS     _POP1           ; R1 = data
8B8A 38 7F 82                                                 JPS     _ST16           ; (R3) = R1
8B8D 39                                                       RTS                     ; Done
                                                      
8B8E 82 43 A1                                         HCSTOR: DB      ^2 "C" ^'!'                             ; ***** C!
8B91 78 8B                                                    DW      HSTORE
8B93 95 8B                                            CSTOR:  DW      CSTOR0
8B95 38 03 81                                         CSTOR0: JPS     _POP21          ; R2 = addr, R1 = data
8B98 15 F2 FE                                                 LDA     R1.0            ; A = R1.0
8B9B 1E F6 FE                                                 STR     R2              ; (R3) = A
8B9E 14 30 85                                                 JPA     NEXT            ; Done
                                                      
                                                      ; INCLUDE         precompiled.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; PRECOMPILED FORTH WORDS
                                                      ;
                                                      
8BA1 C1 BA                                            HCOLON: DB      ^^1 ^':'                                ; ***** :
8BA3 8E 8B                                                    DW      HCSTOR
8BA5 B9 8B 41 90 FC 8F 8B 8D 50 8B 7D 8D 7C 8B        COLON:  DW      DOCOL QEXEC SCSP CURR AT CONT STORE
8BB3 87 95 C6 90 2D 91                                        DW      CREAT RBRAC PSCOD
8BB9 2F EE FE                                         DOCOL:  DEW     RP              ; -(RP) = IP
8BBC 15 E9 FE                                                 LDA     IP.1            ; :
8BBF 1E EE FE                                                 STR     RP              ; :
8BC2 2F EE FE                                                 DEW     RP              ; :
8BC5 15 E8 FE                                                 LDA     IP.0            ; :
8BC8 1E EE FE                                                 STR     RP              ; :
8BCB 15 EA FE                                                 LDA     WA.0            ; IP = WA
8BCE 16 E8 FE                                                 STA     IP.0            ; :
8BD1 15 EB FE                                                 LDA     WA.1            ; :
8BD4 16 E9 FE                                                 STA     IP.1            ; :
8BD7 14 30 85                                                 JPA     NEXT
                                                      
8BDA C1 BB                                            HSEMI:  DB      ^^1 ^';'                                ; ***** ;
8BDC A1 8B                                                    DW      HCOLON
8BDE B9 8B 6B 90 A2 90 EC 88 DB 90 B8 90 EC 88        SEMI:   DW      DOCOL QCSP COMP SEMIS SMUDG LBRAC SEMIS
                                                      
8BEC 88 43 4F 4E 53 54 41 4E D4                       HCON:   DB      ^8 "CONSTAN" ^'T'                       ; ***** CONSTANT
8BF5 DA 8B                                                    DW      HSEMI
8BF7 B9 8B 87 95 DB 90 B1 8E 2D 91                    CON:    DW      DOCOL CREAT SMUDG COMMA PSCOD
8C01 1D EA FE                                         DOCON:  LDR     WA              ; -(SP) = (WA)
8C04 16 F2 FE                                                 STA     R1.0            ; :
8C07 2E EA FE                                                 INW     WA              ; :
8C0A 1D EA FE                                                 LDR     WA              ; :
8C0D 16 F3 FE                                                 STA     R1.1            ; :
8C10 2F EA FE                                                 DEW     WA              ; :
8C13 14 1E 85                                                 JPA     PUSH            ; Done
                                                      
8C16 88 56 41 52 49 41 42 4C C5                       HVAR:   DB      ^8 "VARIABL" ^'E'                       ; ***** VARIABLE
8C1F EC 8B                                                    DW      HCON
8C21 B9 8B F7 8B 2D 91                                VAR:    DW      DOCOL CON PSCOD
8C27 2F EC FE                                         DOVAR:  DEW     SP              ; -(SP) = WA
8C2A 15 EB FE                                                 LDA     WA.1            ; :
8C2D 1E EC FE                                                 STR     SP              ; :
8C30 2F EC FE                                                 DEW     SP              ; :
8C33 15 EA FE                                                 LDA     WA.0            ; :
8C36 1E EC FE                                                 STR     SP              ; :
8C39 14 30 85                                                 JPA     NEXT            ; Done
                                                      
8C3C 84 55 53 45 D2                                   HUSER:  DB      ^4 "USE" ^'R'                           ; ***** USER
8C41 16 8C                                                    DW      HVAR
8C43 B9 8B F7 8B 2D 91                                USER:   DW      DOCOL CON PSCOD
8C49 1D EA FE                                         DOUSE:  LDR     WA              ; Compute UP[index]
8C4C 17 F0 FE                                                 ADA     UP.0            ; :
8C4F 16 F2 FE                                                 STA     R1.0            ; :
8C52 2E EA FE                                                 INW     WA              ; :
8C55 1D EA FE                                                 LDR     WA              ; :
8C58 1A F1 FE                                                 ACA     UP.1            ; :
8C5B 16 F3 FE                                                 STA     R1.1            ; :
8C5E 14 1E 85                                                 JPA     PUSH            ; Push address; NEXT
                                                      
                                                      ; ------------------------------
                                                      ; PRECOMPILED CONSTANTS
                                                      
8C61 82 2D B1                                         HMONE:  DB      ^2 "-" ^'1'                             ; ***** -1
8C64 3C 8C                                                    DW      HUSER
8C66 01 8C FF FF                                      MONE:   DW      DOCON -1
                                                      
8C6A 81 B0                                            HZERO:  DB      ^1 ^'0'                                 ; ***** 0
8C6C 61 8C                                                    DW      HMONE
8C6E 01 8C 00 00                                      ZERO:   DW      DOCON 0
                                                      
8C72 81 B1                                            HONE:   DB      ^1 ^'1'                                 ; ***** 1
8C74 6A 8C                                                    DW      HZERO
8C76 01 8C 01 00                                      ONE:    DW      DOCON 1
                                                      
8C7A 81 B2                                            HTWO:   DB      ^1 ^'2'                                 ; ***** 2
8C7C 72 8C                                                    DW      HONE
8C7E 01 8C 02 00                                      TWO:    DW      DOCON 2
                                                      
8C82 81 B3                                            HTHREE: DB      ^1 ^'3'                                 ; ***** 3
8C84 7A 8C                                                    DW      HTWO
8C86 01 8C 03 00                                      THREE:  DW      DOCON 3
                                                      
8C8A 82 42 CC                                         HBL:    DB      ^2 "B" ^'L'                             ; ***** BL
8C8D 82 8C                                                    DW      HTHREE
8C8F 01 8C 20 00                                      BL:     DW      DOCON 32
                                                      
8C93 83 43 2F CC                                      HCL:    DB      ^3 "C/" ^'L'                            ; ***** C/L
8C97 8A 8C                                                    DW      HBL
8C99 01 8C 40 00                                      CL:     DW      DOCON 64
                                                      
8C9D 85 42 2F 42 55 C6                                HBBUF:  DB      ^5 "B/BU" ^'F'                          ; ***** B/BUF
8CA3 93 8C                                                    DW      HCL
8CA5 01 8C 00 04                                      BBUF:   DW      DOCON 1024
                                                      
8CA9 85 42 2F 53 43 D2                                HBSCR:  DB      ^5 "B/SC" ^'R'                          ; ***** B/SCR
8CAF 9D 8C                                                    DW      HBBUF
8CB1 01 8C 01 00                                      BSCR:   DW      DOCON 1
                                                      
8CB5 87 2B 4F 52 49 47 49 CE                          HPORIG: DB      ^7 "+ORIGI" ^'N'                        ; ***** +ORIGIN
8CBD A9 8C                                                    DW      HBSCR
                                                              ; speed++
8CBF C1 8C                                            PORIG:  DW      PORIG0 ; DOCOL LIT ORIGIN PLUS SEMIS
8CC1 38 B6 80                                         PORIG0: JPS     _POP2           ; R2 = offset
8CC4 38 73 83                                                 JPS     _PORIG          ; R3 = &ORIGIN[R2]
8CC7 38 B7 81                                                 JPS     _PUSH3          ; Push result
8CCA 14 30 85                                                 JPA     NEXT            ; Done
                                                      
                                                      ; ------------------------------
                                                      ; USER VARIABLES
                                                      
8CCD 82 53 B0                                         HSZERO: DB      ^2 "S" ^'0'                             ; ***** S0
8CD0 B5 8C                                                    DW      HPORIG
8CD2 49 8C 06 00                                      SZERO:  DW      DOUSE 6
                                                      
8CD6 82 52 B0                                         HRZERO: DB      ^2 "R" ^'0'                             ; ***** R0
8CD9 CD 8C                                                    DW      HSZERO
8CDB 49 8C 08 00                                      RZERO:  DW      DOUSE 8
                                                      
8CDF 83 54 49 C2                                      HTIB:   DB      ^3 "TI" ^'B'                            ; ***** TIB
8CE3 D6 8C                                                    DW      HRZERO
8CE5 49 8C 0A 00                                      TIB:    DW      DOUSE 10
                                                      
8CE9 85 57 49 44 54 C8                                HWIDTH: DB      ^5 "WIDT" ^'H'                          ; ***** WIDTH
8CEF DF 8C                                                    DW      HTIB
8CF1 49 8C 0C 00                                      WIDTH:  DW      DOUSE 12
                                                      
8CF5 87 57 41 52 4E 49 4E C7                          HWARN:  DB      ^7 "WARNIN" ^'G'                        ; ***** WARNING
8CFD E9 8C                                                    DW      HWIDTH
8CFF 49 8C 0E 00                                      WARN:   DW      DOUSE 14
                                                      
8D03 85 46 45 4E 43 C5                                HFENCE: DB      ^5 "FENC" ^'E'                          ; ***** FENCE
8D09 F5 8C                                                    DW      HWARN
8D0B 49 8C 10 00                                      FENCE:  DW      DOUSE 16
                                                      
8D0F 82 44 D0                                         HDP:    DB      ^2 "D" ^'P'                             ; ***** DP
8D12 03 8D                                                    DW      HFENCE
8D14 49 8C 12 00                                      DP:     DW      DOUSE 18
                                                      
8D18 88 56 4F 43 2D 4C 49 4E CB                       HVOCL:  DB      ^8 "VOC-LIN" ^'K'                       ; ***** VOC-LINK
8D21 0F 8D                                                    DW      HDP
8D23 49 8C 14 00                                      VOCL:   DW      DOUSE 20
                                                      
8D27 85 46 49 52 53 D4                                HFIRST: DB      ^5 "FIRS" ^'T'                          ; ***** FIRST
8D2D 18 8D                                                    DW      HVOCL
8D2F 49 8C 16 00                                      FIRST:  DW      DOUSE 22
                                                      
8D33 85 4C 49 4D 49 D4                                HLIMIT: DB      ^5 "LIMI" ^'T'                          ; ***** LIMIT
8D39 27 8D                                                    DW      HFIRST
8D3B 49 8C 18 00                                      LIMIT:  DW      DOUSE 24
                                                      
8D3F 83 42 4C CB                                      HBLK:   DB      ^3 "BL" ^'K'                            ; ***** BLK
8D43 33 8D                                                    DW      HLIMIT
8D45 49 8C 1E 00                                      BLK:    DW      DOUSE 30
                                                      
8D49 82 49 C9                                         HIN:    DB      ^2 "I" ^'I'                             ; ***** IN
8D4C 3F 8D                                                    DW      HBLK
8D4E 49 8C 20 00                                      IN:     DW      DOUSE 32
                                                      
8D52 83 4F 55 D4                                      HOUT:   DB      ^3 "OU" ^'T'                            ; ***** OUT
8D56 49 8D                                                    DW      HIN
8D58 49 8C 22 00                                      OUT:    DW      DOUSE 34
                                                      
8D5C 83 53 43 D2                                      HSCR:   DB      ^3 "SC" ^'R'                            ; ***** SCR
8D60 52 8D                                                    DW      HOUT
8D62 49 8C 24 00                                      SCR:    DW      DOUSE 36
                                                      
8D66 86 4F 46 46 53 45 D4                             HOFFSE: DB      ^6 "OFFSE" ^'T'                         ; ***** OFFSET
8D6D 5C 8D                                                    DW      HSCR
8D6F 49 8C 26 00                                      OFFSE:  DW      DOUSE 38
                                                      
8D73 87 43 4F 4E 54 45 58 D4                          HCONT:  DB      ^7 "CONTEX" ^'T'                        ; ***** CONTEXT
8D7B 66 8D                                                    DW      HOFFSE
8D7D 49 8C 28 00                                      CONT:   DW      DOUSE 40
                                                      
8D81 87 43 55 52 52 45 4E D4                          HCURR:  DB      ^7 "CURREN" ^'T'                        ; ***** CURRENT
8D89 73 8D                                                    DW      HCONT
8D8B 49 8C 2A 00                                      CURR:   DW      DOUSE 42
                                                      
8D8F 85 53 54 41 54 C5                                HSTATE: DB      ^5 "STAT" ^'E'                          ; ***** STATE
8D95 81 8D                                                    DW      HCURR
8D97 49 8C 2C 00                                      STATE:  DW      DOUSE 44
                                                      
8D9B 84 42 41 53 C5                                   HBASE:  DB      ^4 "BAS" ^'E'                           ; ***** BASE
8DA0 8F 8D                                                    DW      HSTATE
8DA2 49 8C 2E 00                                      BASE:   DW      DOUSE 46
                                                      
8DA6 83 44 50 CC                                      HDPL:   DB      ^3 "DP" ^'L'                            ; ***** DPL
8DAA 9B 8D                                                    DW      HBASE
8DAC 49 8C 32 00                                      DPL:    DW      DOUSE 50
                                                      
8DB0 83 46 4C C4                                      HFLD:   DB      ^3 "FL" ^'D'                            ; ***** FLD
8DB4 A6 8D                                                    DW      HDPL
8DB6 49 8C 34 00                                      FLD:    DW      DOUSE 52
                                                      
8DBA 83 43 53 D0                                      HCSP:   DB      ^3 "CS" ^'P'                            ; ***** CSP
8DBE B0 8D                                                    DW      HFLD
8DC0 49 8C 34 00                                      CSP:    DW      DOUSE 52
                                                      
8DC4 82 52 A3                                         HRNUM:  DB      ^2 "R" ^'#'                             ; ***** R#
8DC7 BA 8D                                                    DW      HCSP
8DC9 49 8C 36 00                                      RNUM:   DW      DOUSE 54
                                                      
8DCD 83 48 4C C4                                      HHLD:   DB      ^3 "HL" ^'D'                            ; ***** HLD
8DD1 C4 8D                                                    DW      HRNUM
8DD3 49 8C 38 00                                      HLD:    DW      DOUSE 56
                                                      
8DD7 83 55 53 C5                                      HUSE:   DB      ^3 "US" ^'E'                            ; ***** USE
8DDB CD 8D                                                    DW      HHLD
8DDD 49 8C 3A 00                                      USE:    DW      DOUSE 58
                                                      
8DE1 84 50 52 45 D6                                   HPREV:  DB      ^4 "PRE" ^'V'                           ; ***** PREV
8DE6 D7 8D                                                    DW      HUSE
8DE8 49 8C 3C 00                                      PREV:   DW      DOUSE 60
                                                      
8DEC 84 42 41 4E CB                                   HBANK:  DB      ^4 "BAN" ^'K'                           ; ***** BANK
8DF1 E1 8D                                                    DW      HPREV
8DF3 49 8C 3E 00                                      BANK:   DW      DOUSE 62
                                                      
                                                      ; END OF USER VARIABLES
                                                      ; ------------------------------
                                                      
8DF7 82 3E BE                                         HRSHFT: DB      ^2 ">" ^'>'                             ; ***** >>
8DFA EC 8D                                                    DW      HBANK
8DFC FE 8D                                            RSHFT:  DW      RSHFT0
8DFE 38 03 81                                         RSHFT0: JPS     _POP21
8E01 15 F3 FE                                         RSHF10: LDA     R1.1
8E04 07                                                       LSR
8E05 16 F3 FE                                                 STA     R1.1
8E08 15 F2 FE                                                 LDA     R1.0
8E0B 08                                                       ROR
8E0C 16 F2 FE                                                 STA     R1.0
8E0F 27 F6 FE                                                 DEB     R2.0
8E12 3A 01 8E                                                 BNE     RSHF10
8E15 14 1E 85                                                 JPA     PUSH
                                                      
8E18 82 3C BC                                         HLSHFT: DB      ^2 "<" ^'<'                             ; ***** <<
8E1B F7 8D                                                    DW      HRSHFT
8E1D 1F 8E                                            LSHFT:  DW      LSHFT0
8E1F 38 03 81                                         LSHFT0: JPS     _POP21
8E22 15 F2 FE                                         LSHF10: LDA     R1.0
8E25 05                                                       LSL
8E26 16 F2 FE                                                 STA     R1.0
8E29 15 F3 FE                                                 LDA     R1.1
8E2C 06                                                       ROL
8E2D 16 F3 FE                                                 STA     R1.1
8E30 27 F6 FE                                                 DEB     R2.0
8E33 3A 22 8E                                                 BNE     LSHF10
8E36 14 1E 85                                                 JPA     PUSH
                                                      
8E39 82 31 AB                                         HONEP:  DB      ^2 "1" ^'+'                             ; ***** 1+
8E3C 18 8E                                                    DW      HLSHFT
8E3E 40 8E                                            ONEP:   DW      ONEP0
8E40 38 73 80                                         ONEP0:  JPS     _POP1
8E43 2E F2 FE                                                 INW     R1
8E46 14 1E 85                                                 JPA     PUSH
                                                      
8E49 82 32 AB                                         HTWOP:  DB      ^2 "2" ^'+'                             ; ***** 2+
8E4C 39 8E                                                    DW      HONEP
8E4E 50 8E                                            TWOP:   DW      TWOP0
8E50 38 73 80                                         TWOP0:  JPS     _POP1
8E53 0E 02                                                    LDI     2
8E55 30 F2 FE                                                 ADW     R1
8E58 14 1E 85                                                 JPA     PUSH
                                                      
8E5B 84 48 45 52 C5                                   HHERE:  DB      ^4 "HER" ^'E'                           ; ***** HERE
8E60 49 8E                                                    DW      HTWOP
                                                              ; speed++
8E62 64 8E                                            HERE:   DW      HERE0 ; DOCOL DP AT SEMIS
8E64 38 6A 8E                                         HERE0:  JPS     _HERE
8E67 14 30 85                                                 JPA     NEXT
                                                              ;
8E6A 0E 12                                            _HERE:  LDI     18              ; USER[18] (DP)
8E6C 16 F6 FE                                                 STA     R2.0            ; :
8E6F 38 84 83                                                 JPS     _USER           ; R3 = &USER[18]
8E72 38 6C 82                                                 JPS     _LD16           ; R1 = USER[18]
8E75 38 7B 81                                                 JPS     _PUSH1          ; -(SP) = Result
8E78 39                                                       RTS                     ; Done
                                                      
8E79 85 41 4C 4C 4F D4                                HALLOT: DB      ^5 "ALLO" ^'T'                          ; ***** ALLOT
8E7F 5B 8E                                                    DW      HHERE
                                                              ; speed++
8E81 83 8E                                            ALLOT:  DW      ALLOT0 ; DOCOL DP PSTOR SEMIS
8E83 38 89 8E                                         ALLOT0: JPS     _ALLOT
8E86 14 30 85                                                 JPA     NEXT
                                                              ;
8E89 0E 12                                            _ALLOT: LDI     18              ; USER[18] (DP)
8E8B 16 F6 FE                                                 STA     R2.0            ; :
8E8E 38 84 83                                                 JPS     _USER           ; R3 = &USER[18]
8E91 38 6C 82                                                 JPS     _LD16           ; R1 = USER[18]
8E94 38 B6 80                                                 JPS     _POP2           ; Get increment
8E97 15 F2 FE                                                 LDA     R1.0            ; LSB
8E9A 17 F6 FE                                                 ADA     R2.0            ; :
8E9D 16 F2 FE                                                 STA     R1.0            ; :
8EA0 15 F3 FE                                                 LDA     R1.1            ; MSB
8EA3 1A F7 FE                                                 ACA     R2.1            ; :
8EA6 16 F3 FE                                                 STA     R1.1            ; :
8EA9 38 7F 82                                                 JPS     _ST16           ; :
8EAC 39                                                       RTS                     ; Done
                                                      
8EAD 81 AC                                            HCOMMA: DB      ^1 ^','                                 ; ***** ,
8EAF 79 8E                                                    DW      HALLOT
                                                              ; speed++
8EB1 B3 8E                                            COMMA:  DW      COMMA0 ; DOCOL HERE STORE TWO ALLOT SEMIS
8EB3 38 B9 8E                                         COMMA0: JPS     _COMMA
8EB6 14 30 85                                                 JPA     NEXT
                                                              ;
8EB9 38 6A 8E                                         _COMMA: JPS     _HERE           ; HERE
8EBC 38 84 8B                                                 JPS     _STORE          ; STORE
8EBF 2C F2 FE                                                 CLW     R1              ; 2 ALLOT
8EC2 0E 02                                                    LDI     2               ; :
8EC4 30 F2 FE                                                 ADW     R1              ; :
8EC7 38 7B 81                                                 JPS     _PUSH1          ; :
8ECA 38 89 8E                                                 JPS     _ALLOT          ; :
8ECD 39                                                       RTS                     ; Done
                                                      
8ECE 81 AD                                            HSUB:   DB      ^1 ^'-'                                 ; ***** -
8ED0 AD 8E                                                    DW      HCOMMA
                                                              ; speed++
8ED2 D4 8E                                            SUB:    DW      SUB0 ; DOCOL MINUS PLUS SEMIS
8ED4 38 DA 8E                                         SUB0:   JPS     _SUB
8ED7 14 30 85                                                 JPA     NEXT
                                                              ;
8EDA 38 03 81                                         _SUB:   JPS     _POP21          ; R1 = R1 - R2
8EDD 15 F2 FE                                                 LDA     R1.0            ; LSB
8EE0 18 F6 FE                                                 SBA     R2.0            ; :
8EE3 16 F2 FE                                                 STA     R1.0            ; :
8EE6 15 F3 FE                                                 LDA     R1.1            ; MSB
8EE9 1B F7 FE                                                 SCA     R2.1            ; :
8EEC 16 F3 FE                                                 STA     R1.1            ; :
8EEF 38 7B 81                                                 JPS     _PUSH1          ; Push result
8EF2 39                                                       RTS                     ; Done
                                                      
8EF3 81 BD                                            HEQUAL: DB      ^1 ^'='                                 ; ***** =
8EF5 CE 8E                                                    DW      HSUB
                                                              ; speed++
8EF7 F9 8E                                            EQUAL:  DW      EQUAL0 ; DOCOL SUB ZEQU SEMIS
8EF9 38 DA 8E                                         EQUAL0: JPS     _SUB
8EFC 38 4F 89                                                 JPS     _ZEQU
8EFF 14 30 85                                                 JPA     NEXT
                                                      
8F02 81 BC                                            HLESS:  DB      ^1 ^'<'                                 ; ***** <
8F04 F3 8E                                                    DW      HEQUAL
                                                              ; speed++
8F06 08 8F                                            LESS:   DW      LESS0 ; DOCOL SUB ZLESS SEMIS
8F08 38 DA 8E                                         LESS0:  JPS     _SUB
8F0B 38 86 89                                                 JPS     _ZLESS
8F0E 14 30 85                                                 JPA     NEXT
                                                      
8F11 81 BE                                            HGREAT: DB      ^1 ^'>'                                 ; ***** >
8F13 02 8F                                                    DW      HLESS
                                                              ; speed++
8F15 17 8F                                            GREAT:  DW      GREAT0 ; DOCOL SWAP LESS SEMIS
8F17 38 67 8A                                         GREAT0: JPS     _SWAP
8F1A 14 08 8F                                                 JPA     LESS0
                                                      
8F1D 83 52 4F D4                                      HROT:   DB      ^3 "RO" ^'T'                            ; ***** ROT
8F21 11 8F                                                    DW      HGREAT
8F23 25 8F                                            ROT:    DW      ROT0
8F25 38 00 81                                         ROT0:   JPS     _POP321
8F28 38 99 81                                                 JPS     _PUSH2
8F2B 38 B7 81                                                 JPS     _PUSH3
8F2E 14 1E 85                                                 JPA     PUSH
                                                      
8F31 85 53 50 41 43 C5                                HSPACE: DB      ^5 "SPAC" ^'E'                          ; ***** SPACE
8F37 1D 8F                                                    DW      HROT
8F39 3B 8F                                            SPACE:  DW      SPACE0 ; DOCOL BL EMIT SEMIS
8F3B 0E 20                                            SPACE0: LDI     CH_BL
8F3D 16 F2 FE                                                 STA     R1.0
8F40 24 F3 FE                                                 CLB     R1.1
8F43 38 7B 81                                                 JPS     _PUSH1
8F46 38 52 9D                                                 JPS     _EMIT
8F49 14 30 85                                                 JPA     NEXT
                                                      
8F4C 84 2D 44 55 D0                                   HDDUP:  DB      ^4 "-DU" ^'P'                           ; ***** -DUP
8F51 31 8F                                                    DW      HSPACE
8F53 55 8F                                            DDUP:   DW      DDUP0
8F55 38 5B 8F                                         DDUP0:  JPS     _DDUP
8F58 14 30 85                                                 JPA     NEXT
                                                              ;
8F5B 38 6C 80                                         _DDUP:  JPS     _GET1
8F5E 15 F2 FE                                                 LDA     R1.0
8F61 11 00                                                    CPI     0
8F63 3A 6F 8F                                                 BNE     DDUP10
8F66 15 F3 FE                                                 LDA     R1.1
8F69 11 00                                                    CPI     0
8F6B 3A 6F 8F                                                 BNE     DDUP10
8F6E 39                                                       RTS
8F6F 38 7B 81                                         DDUP10: JPS     _PUSH1
8F72 39                                                       RTS
                                                      
8F73 88 54 52 41 56 45 52 53 C5                       HTRAV:  DB      ^8 "TRAVERS" ^'E'                       ; ***** TRAVERSE
8F7C 4C 8F                                                    DW      HDDUP
8F7E B9 8B 5F 8A                                      TRAV:   DW      DOCOL SWAP
8F82 2E 8A A9 89 93 85 7F 00                          TRAV10: DW      OVER PLUS LIT 0x7F
8F8A 2E 8A 67 8B 06 8F D7 85 F0 FF                            DW      OVER CAT LESS ZBRAN +TRAV10
8F94 5F 8A 4A 8A EC 88                                        DW      SWAP DROP SEMIS
                                                      
8F9A 86 4C 41 54 45 53 D4                             HLATES: DB      ^6 "LATES" ^'T'                         ; ***** LATEST
8FA1 73 8F                                                    DW      HTRAV
8FA3 B9 8B 8B 8D 50 8B 50 8B EC 88                    LATES:  DW      DOCOL CURR AT AT SEMIS
                                                      
8FAD 83 4C 46 C1                                      HLFA:   DB      ^3 "LF" ^'A'                            ; ***** LFA
8FB1 9A 8F                                                    DW      HLATES
8FB3 B9 8B 93 85 04 00 D2 8E EC 88                    LFA:    DW      DOCOL LIT 4 SUB SEMIS
                                                      
8FBD 83 43 46 C1                                      HCFA:   DB      ^3 "CF" ^'A'                            ; ***** CFA
8FC1 AD 8F                                                    DW      HLFA
8FC3 B9 8B 7E 8C D2 8E EC 88                          CFA:    DW      DOCOL TWO SUB SEMIS
                                                      
8FCB 83 4E 46 C1                                      HNFA:   DB      ^3 "NF" ^'A'                            ; ***** NFA
8FCF BD 8F                                                    DW      HCFA
8FD1 B9 8B 93 85 05 00 D2 8E 93 85 FF FF 7E 8F EC 88  NFA:    DW      DOCOL LIT 5 SUB LIT -1 TRAV SEMIS
                                                      
8FE1 83 50 46 C1                                      HPFA:   DB      ^3 "PF" ^'A'                            ; ***** PFA
8FE5 CB 8F                                                    DW      HNFA
8FE7 B9 8B 76 8C 7E 8F 93 85 05 00 A9 89 EC 88        PFA:    DW      DOCOL ONE TRAV LIT 5 PLUS SEMIS
                                                      
                                                      ; ------------------------------
                                                      ; COMPILE TIME CHECKS
                                                      
8FF5 84 21 43 53 D0                                   HSCSP:  DB      ^4 "!CS" ^'P'                           ; ***** !CSP
8FFA E1 8F                                                    DW      HPFA
8FFC B9 8B 70 88 C0 8D 7C 8B EC 88                    SCSP:   DW      DOCOL SPAT CSP STORE SEMIS
                                                      
9006 86 3F 45 52 52 4F D2                             HQERR:  DB      ^6 "?ERRO" ^'R'                         ; ***** ?ERROR
900D F5 8F                                                    DW      HSCSP
900F B9 8B 5F 8A D7 85 08 00                          QERR:   DW      DOCOL SWAP ZBRAN +QERR10
9017 0A 95 C5 85 04 00                                        DW      ERROR BRAN +QERR20
901D 4A 8A                                            QERR10: DW      DROP
901F EC 88                                            QERR20: DW      SEMIS
                                                      
9021 85 3F 43 4F 4D D0                                HQCOMP: DB      ^5 "?COM" ^'P'                          ; ***** ?COMP
9027 06 90                                                    DW      HQERR
9029 B9 8B 97 8D 50 8B 47 89 93 85 11 00 0F 90 EC 88  QCOMP:  DW      DOCOL STATE AT ZEQU LIT 17 QERR SEMIS
                                                      
9039 85 3F 45 58 45 C3                                HQEXEC: DB      ^5 "?EXE" ^'C'                          ; ***** ?EXEC
903F 21 90                                                    DW      HQCOMP
9041 B9 8B 97 8D 50 8B 93 85 12 00 0F 90 EC 88        QEXEC:  DW      DOCOL STATE AT LIT 18 QERR SEMIS
                                                      
904F 86 3F 50 41 49 52 D3                             HQPAIR: DB      ^6 "?PAIR" ^'S'                         ; ***** ?PAIRS
9056 39 90                                                    DW      HQEXEC
9058 B9 8B D2 8E 93 85 13 00 0F 90 EC 88              QPAIR:  DW      DOCOL SUB LIT 19 QERR SEMIS
                                                      
9064 84 3F 43 53 D0                                   HQCSP:  DB      ^4 "?CS" ^'P'                           ; ***** ?CSP
9069 4F 90                                                    DW      HQPAIR
906B B9 8B 70 88 C0 8D 50 8B D2 8E                    QCSP:   DW      DOCOL SPAT CSP AT SUB
9075 93 85 14 00 0F 90 EC 88                                  DW      LIT 20 QERR SEMIS
                                                      
907D 88 3F 4C 4F 41 44 49 4E C7                       HQLOAD: DB      ^8 "?LOADIN" ^'G'                       ; ***** ?LOADING
9086 64 90                                                    DW      HQCSP
9088 B9 8B 45 8D 50 8B 47 89 93 85 16 00 0F 90 EC 88  QLOAD:  DW      DOCOL BLK AT ZEQU LIT 22 QERR SEMIS
                                                      
                                                      ; ------------------------------
                                                      ; COMPILER WORDS
                                                      
9098 87 43 4F 4D 50 49 4C C5                          HCOMP:  DB      ^7 "COMPIL" ^'E'                        ; ***** COMPILE
90A0 7D 90                                                    DW      HQLOAD
90A2 B9 8B 29 90 2E 89 77 8A                          COMP:   DW      DOCOL QCOMP FROMR DUP
90AA 4E 8E 1E 89 50 8B B1 8E EC 88                            DW      TWOP TOR AT COMMA SEMIS
                                                      
90B4 C1 DB                                            HLBRAC: DB      ^^1 ^'['                                ; ***** [
90B6 98 90                                                    DW      HCOMP
90B8 B9 8B 6E 8C 97 8D 7C 8B EC 88                    LBRAC:  DW      DOCOL ZERO STATE STORE SEMIS
                                                      
90C2 81 DD                                            HRBRAC: DB      ^1 ^']'                                 ; ***** ]
90C4 B4 90                                                    DW      HLBRAC
90C6 B9 8B 93 85 C0 00 97 8D 7C 8B EC 88              RBRAC:  DW      DOCOL LIT 0xC0 STATE STORE SEMIS
                                                      
90D2 86 53 4D 55 44 47 C5                             HSMUDG: DB      ^6 "SMUDG" ^'E'                         ; ***** SMUDGE
90D9 C2 90                                                    DW      HRBRAC
90DB B9 8B A3 8F 93 85 20 00 10 8B EC 88              SMUDG:  DW      DOCOL LATES LIT 0x20 TOGGL SEMIS
                                                      
90E7 83 48 45 D8                                      HHEX:   DB      ^3 "HE" ^'X'                            ; ***** HEX
90EB D2 90                                                    DW      HSMUDG
90ED B9 8B 93 85 10 00 A2 8D 7C 8B EC 88              HEX:    DW      DOCOL LIT 16 BASE STORE SEMIS
                                                      
90F9 87 44 45 43 49 4D 41 CC                          HDEC:   DB      ^7 "DECIMA" ^'L'                        ; ***** DECIMAL
9101 E7 90                                                    DW      HHEX
9103 B9 8B 93 85 0A 00 A2 8D 7C 8B EC 88              DEC:    DW      DOCOL LIT 10 BASE STORE SEMIS
                                                      
910F 85 4F 43 54 41 CC                                HOCTAL: DB      ^5 "OCTA" ^'L'                          ; ***** OCTAL
9115 F9 90                                                    DW      HDEC
9117 B9 8B 93 85 08 00 A2 8D 7C 8B EC 88              OCTAL:  DW      DOCOL LIT 8 BASE STORE SEMIS
                                                      
9123 87 28 3B 43 4F 44 45 A9                          HPSCOD: DB      ^7 "(;CODE" ^')'                        ; ***** (;CODE)
912B 0F 91                                                    DW      HOCTAL
912D B9 8B 2E 89 A3 8F E7 8F C3 8F 7C 8B EC 88        PSCOD:  DW      DOCOL FROMR LATES PFA CFA STORE SEMIS
                                                      
913B 87 3C 42 55 49 4C 44 D3                          HBUILD: DB      ^7 "<BUILD" ^'S'                        ; ***** <BUILDS
9143 23 91                                                    DW      HPSCOD
9145 B9 8B 6E 8C F7 8B EC 88                          BUILD:  DW      DOCOL ZERO CON SEMIS
                                                      
914D 85 44 4F 45 53 BE                                HDOES:  DB      ^5 "DOES" ^'>'                          ; ***** DOES>
9153 3B 91                                                    DW      HBUILD
9155 B9 8B 2E 89 A3 8F E7 8F 7C 8B 2D 91              DOES:   DW      DOCOL FROMR LATES PFA STORE PSCOD
9161 2F EE FE                                         DODOE:  DEW     RP              ; -(RP) = IP
9164 15 E9 FE                                                 LDA     IP.1            ; :
9167 1E EE FE                                                 STR     RP              ; :
916A 2F EE FE                                                 DEW     RP              ; :
916D 15 E8 FE                                                 LDA     IP.0            ; :
9170 1E EE FE                                                 STR     RP              ; :
9173 1D EA FE                                                 LDR     WA              ; IP = (WA)+
9176 16 E8 FE                                                 STA     IP.0            ; :
9179 2E EA FE                                                 INW     WA              ; :
917C 1D EA FE                                                 LDR     WA              ; :
917F 16 E9 FE                                                 STA     IP.1            ; :
9182 2E EA FE                                                 INW     WA              ; :
9185 2F EC FE                                                 DEW     SP              ; -(SP) = WA
9188 15 EB FE                                                 LDA     WA.1            ; :
918B 1E EC FE                                                 STR     SP              ; :
918E 2F EC FE                                                 DEW     SP              ; :
9191 15 EA FE                                                 LDA     WA.0            ; :
9194 1E EC FE                                                 STR     SP              ; :
9197 14 30 85                                                 JPA     NEXT            ; Done
                                                      
                                                      ; ------------------------------
                                                      ; MISC WORDS RELATED TO PRINTING
                                                      
919A 85 43 4F 55 4E D4                                HCOUNT: DB      ^5 "COUN" ^'T'                          ; ***** COUNT
91A0 4D 91                                                    DW      HDOES
91A2 B9 8B 77 8A 3E 8E 5F 8A 67 8B EC 88              COUNT:  DW      DOCOL DUP ONEP SWAP CAT SEMIS
                                                      
91AE 84 54 59 50 C5                                   HTYPE:  DB      ^4 "TYP" ^'E'                           ; ***** TYPE
91B3 9A 91                                                    DW      HCOUNT
91B5 B9 8B 53 8F D7 85 18 00                          TYPE:   DW      DOCOL DDUP ZBRAN +TYPE20
91BD 2E 8A A9 89 5F 8A 6D 86                                  DW      OVER PLUS SWAP XDO
91C5 7F 86 67 8B 4A 9D 58 86 F8 FF                    TYPE10: DW      I CAT EMIT XLOOP +TYPE10
91CF C5 85 04 00                                              DW      BRAN +TYPE30
91D3 4A 8A                                            TYPE20: DW      DROP
91D5 EC 88                                            TYPE30: DW      SEMIS
                                                      
91D7 89 2D 54 52 41 49 4C 49 4E C7                    HDTRAI: DB      ^9 "-TRAILIN" ^'G'                      ; ***** -TRAILING
91E1 AE 91                                                    DW      HTYPE
91E3 B9 8B 77 8A 6E 8C 6D 86                          DTRAI:  DW      DOCOL DUP ZERO XDO
91EB 2E 8A 2E 8A A9 89 76 8C D2 8E                    DTRA10: DW      OVER OVER PLUS ONE SUB
91F5 67 8B 8F 8C D2 8E D7 85 08 00                            DW      CAT BL SUB ZBRAN +DTRA20
91FF 0B 89 C5 85 06 00                                        DW      LEAVE BRAN +DTRA30
9205 76 8C D2 8E                                      DTRA20: DW      ONE SUB
9209 58 86 E0 FF                                      DTRA30: DW      XLOOP +DTRA10
920D EC 88                                                    DW      SEMIS
                                                      
920F 84 28 2E 22 A9                                   HPDOTQ: DB      ^4 "(." '"' ^')'                        ; ***** (.")
9214 D7 91                                                    DW      HDTRAI
9216 B9 8B 3A 89 A2 91 77 8A 3E 8E                    PDOTQ:  DW      DOCOL R COUNT DUP ONEP
9220 2E 89 A9 89 1E 89 B5 91 EC 88                            DW      FROMR PLUS TOR TYPE SEMIS
                                                      
922A C2 2E A2                                         HDOTQ:  DB      ^^2 "." ^'"'                            ; ***** ."
922D 0F 92                                                    DW      HPDOTQ
922F B9 8B 93 85 22 00 97 8D 50 8B D7 85 14 00        DOTQ:   DW      DOCOL LIT '"' STATE AT ZBRAN +DOTQ10
923D A2 90 16 92 9C 93 62 8E 67 8B 3E 8E                      DW      COMP PDOTQ WORD HERE CAT ONEP
9249 81 8E C5 85 0A 00                                        DW      ALLOT BRAN +DOTQ20
924F 9C 93 62 8E A2 91 B5 91                          DOTQ10: DW      WORD HERE COUNT TYPE
9257 EC 88                                            DOTQ20: DW      SEMIS
                                                      
                                                      ; ------------------------------
                                                      ; OUTER INTERPRETER
                                                      
9259 86 45 58 50 45 43 D4                             HEXPEC: DB      ^6 "EXPEC" ^'T'                         ; ***** EXPECT
9260 2A 92                                                    DW      HDOTQ
9262 B9 8B 2E 8A A9 89 2E 8A 6D 86                    EXPEC:  DW      DOCOL OVER PLUS OVER XDO
926C 71 9D 77 8A 93 85 0E 00 BF 8C                    EXPE10: DW      KEY DUP LIT 14 PORIG
9276 50 8B F7 8E D7 85 2A 00                                  DW      AT EQUAL ZBRAN +EXPE20
927E 4A 8A 77 8A 7F 86 F7 8E 77 8A 2E 89 7E 8C D2 8E          DW      DROP DUP I EQUAL DUP FROMR TWO SUB
928E A9 89 1E 89 D7 85 0A 00                                  DW      PLUS TOR ZBRAN +EXPE60
9296 93 85 07 00 C5 85 06 00                                  DW      LIT CH_BEL BRAN +EXPE70
929E 93 85 08 00                                      EXPE60: DW      LIT CH_BSP
92A2 C5 85 28 00                                      EXPE70: DW      BRAN +EXPE30
92A6 77 8A 93 85 0A 00 F7 8E D7 85 0E 00              EXPE20: DW      DUP LIT 10 EQUAL ZBRAN +EXPE40
92B2 0B 89 4A 8A 8F 8C 6E 8C C5 85 04 00                      DW      LEAVE DROP BL ZERO BRAN +EXPE50
92BE 77 8A                                            EXPE40: DW      DUP
92C0 7F 86 93 8B 6E 8C 7F 86 3E 8E 7C 8B              EXPE50: DW      I CSTOR ZERO I ONEP STORE
92CC 4A 9D 58 86 9C FF                                EXPE30: DW      EMIT XLOOP +EXPE10
92D2 4A 8A EC 88                                              DW      DROP SEMIS
                                                      
92D6 85 51 55 45 52 D9                                HQUERY: DB      ^5 "QUER" ^'Y'                          ; ***** QUERY
92DC 59 92                                                    DW      HEXPEC
92DE B9 8B E5 8C 50 8B 93 85 50 00 62 92              QUERY:  DW      DOCOL TIB AT LIT 80 EXPEC
92EA 6E 8C 4E 8D 7C 8B EC 88                                  DW      ZERO IN STORE SEMIS
                                                      
92F2 C1 80                                            HNULL:  DB      ^^1 ^0                                  ; ***** <the NULL word>
92F4 D6 92                                                    DW      HQUERY
92F6 B9 8B 45 8D 50 8B D7 85 26 00                    NULL:   DW      DOCOL BLK AT ZBRAN +NULL20
9300 76 8C 45 8D EF 8A 6E 8C 4E 8D 7C 8B                      DW      ONE BLK PSTOR ZERO IN STORE
930C 45 8D 50 8B B1 8C 80 99 47 89 D7 85 08 00                DW      BLK AT BSCR MOD ZEQU ZBRAN +NULL10
931A 41 90 2E 89 4A 8A                                        DW      QEXEC FROMR DROP
9320 C5 85 06 00                                      NULL10: DW      BRAN +NULL30
9324 2E 89 4A 8A                                      NULL20: DW      FROMR DROP
9328 EC 88                                            NULL30: DW      SEMIS
                                                      
932A 84 46 49 4C CC                                   HFILL:  DB      ^4 "FIL" ^'L'                           ; ***** FILL
932F F2 92                                                    DW      HNULL
9331 B9 8B 5F 8A 1E 89 2E 8A 93 8B 77 8A              FILL:   DW      DOCOL SWAP TOR OVER CSTOR DUP
933D 3E 8E 2E 89 76 8C D2 8E BE 87 EC 88                      DW      ONEP FROMR ONE SUB CMOVE SEMIS
                                                      
9349 85 45 52 41 53 C5                                HERASE: DB      ^5 "ERAS" ^'E'                          ; ***** ERASE
934F 2A 93                                                    DW      HFILL
9351 B9 8B 6E 8C 31 93 EC 88                          ERASE:  DW      DOCOL ZERO FILL SEMIS
                                                      
9359 86 42 4C 41 4E 4B D3                             HBLANK: DB      ^6 "BLANK" ^'S'                         ; ***** BLANKS
9360 49 93                                                    DW      HERASE
9362 B9 8B 8F 8C 31 93 EC 88                          BLANK:  DW      DOCOL BL FILL SEMIS
                                                      
936A 84 48 4F 4C C4                                   HHOLD:  DB      ^4 "HOL" ^'D'                           ; ***** HOLD
936F 59 93                                                    DW      HBLANK
9371 B9 8B 93 85 FF FF D3 8D EF 8A                    HOLD:   DW      DOCOL LIT -1 HLD PSTOR
937B D3 8D 50 8B 93 8B EC 88                                  DW      HLD AT CSTOR SEMIS
                                                      
9383 83 50 41 C4                                      HPAD:   DB      ^3 "PA" ^'D'                            ; ***** PAD
9387 6A 93                                                    DW      HHOLD
9389 B9 8B 62 8E 93 85 54 00 A9 89 EC 88              PAD:    DW      DOCOL HERE LIT 84 PLUS SEMIS
                                                      
9395 84 57 4F 52 C4                                   HWORD:  DB      ^4 "WOR" ^'D'                           ; ***** WORD
939A 83 93                                                    DW      HPAD
939C B9 8B 45 8D 50 8B D7 85 0C 00                    WORD:   DW      DOCOL BLK AT ZBRAN +WORD10
93A6 45 8D 50 8B F4 9A C5 85 06 00                            DW      BLK AT BLOCK BRAN +WORD20
93B0 E5 8C 50 8B                                      WORD10: DW      TIB AT
93B4 4E 8D 50 8B A9 89 5F 8A 5F 87                    WORD20: DW      IN AT PLUS SWAP ENCL
93BE 62 8E 93 85 22 00 62 93 4E 8D EF 8A                      DW      HERE LIT 34 BLANK IN PSTOR
93CA 2E 8A D2 8E 1E 89 3A 89 62 8E 93 8B A9 89                DW      OVER SUB TOR R HERE CSTOR PLUS
93D8 62 8E 3E 8E 2E 89 BE 87 EC 88                            DW      HERE ONEP FROMR CMOVE SEMIS
                                                      
93E2 88 28 4E 55 4D 42 45 52 A9                       HPNUMB: DB      ^8 "(NUMBER" ^')'                       ; ***** (NUMBER)
93EB 95 93                                                    DW      HWORD
93ED B9 8B                                            PNUMB:  DW      DOCOL
93EF 3E 8E 77 8A 1E 89 67 8B                          PNUM10: DW      ONEP DUP TOR CAT
93F7 A2 8D 50 8B 8F 86 D7 85 2C 00                            DW      BASE AT DIGIT ZBRAN +PNUM30
9401 5F 8A A2 8D 50 8B EA 87 4A 8A 23 8F A2 8D 50 8B          DW      SWAP BASE AT USTAR DROP ROT BASE AT
9411 EA 87 B9 89 AC 8D 50 8B 3E 8E D7 85 08 00                DW      USTAR DPLUS DPL AT ONEP ZBRAN +PNUM20
941F 76 8C AC 8D EF 8A                                        DW      ONE DPL PSTOR
9425 2E 89 C5 85 C6 FF                                PNUM20: DW      FROMR BRAN +PNUM10
942B 2E 89 EC 88                                      PNUM30: DW      FROMR SEMIS
                                                      
942F 86 4E 55 4D 42 45 D2                             HNUMB:  DB      ^6 "NUMBE" ^'R'                         ; ***** NUMBER
9436 E2 93                                                    DW      HPNUMB
9438 B9 8B 6E 8C 6E 8C 23 8F 77 8A 3E 8E 67 8B        NUMB:   DW      DOCOL ZERO ZERO ROT DUP ONEP CAT
9446 93 85 2D 00 F7 8E 77 8A 1E 89 D2 8E 93 85 FF FF          DW      LIT '-' EQUAL DUP TOR SUB LIT -1
9456 AC 8D 7C 8B ED 93 77 8A                          NUMB10: DW      DPL STORE PNUMB DUP
945E 67 8B 8F 8C D2 8E D7 85 16 00                            DW      CAT BL SUB ZBRAN +NUMB20
9468 77 8A 67 8B 93 85 2E 00 D2 8E                            DW      DUP CAT LIT '.' SUB
9472 6E 8C 0F 90 6E 8C C5 85 DC FF                            DW      ZERO QERR ZERO BRAN +NUMB10
947C 4A 8A 2E 89 D7 85 04 00                          NUMB20: DW      DROP FROMR ZBRAN +NUMB30
9484 E3 89                                                    DW      DMINU
9486 EC 88                                            NUMB30: DW      SEMIS
                                                      
9488 85 2D 46 49 4E C4                                HDFIND: DB      ^5 "-FIN" ^'D'                          ; ***** -FIND
948E 2F 94                                                    DW      HNUMB
9490 B9 8B 8F 8C 9C 93 62 8E A2 91 C0 94              DFIND:  DW      DOCOL BL WORD HERE COUNT UPPER
949C 62 8E 7D 8D 50 8B 50 8B CE 86                            DW      HERE CONT AT AT PFIND
94A6 77 8A 47 89 D7 85 0A 00                                  DW      DUP ZEQU ZBRAN +DFIN10
94AE 4A 8A 62 8E A3 8F CE 86                                  DW      DROP HERE LATES PFIND
94B6 EC 88                                            DFIN10: DW      SEMIS
                                                      
94B8 85 55 50 50 45 D2                                HUPPER: DB      ^5 "UPPE" ^'R'                          ; ***** UPPER
94BE 88 94                                                    DW      HDFIND
94C0 B9 8B 2E 8A A9 89 5F 8A 6D 86                    UPPER:  DW      DOCOL OVER PLUS SWAP XDO
94CA 7F 86 67 8B 93 85 60 00 15 8F                    UPPE10: DW      I CAT LIT 0x60 GREAT
94D4 7F 86 67 8B 93 85 7B 00 06 8F                            DW      I CAT LIT 0x7B LESS
94DE 3E 88 D7 85 0A 00                                        DW      AND ZBRAN +UPPE20
94E4 7F 86 93 85 20 00 10 8B                                  DW      I LIT 0x20 TOGGL
94EC 58 86 DC FF                                      UPPE20: DW      XLOOP +UPPE10
94F0 EC 88                                                    DW      SEMIS
                                                      
94F2 87 28 41 42 4F 52 54 A9                          HPABOR: DB      ^7 "(ABORT" ^')'                        ; ***** (ABORT)
94FA B8 94                                                    DW      HUPPER
94FC B9 8B 70 97 EC 88                                PABOR:  DW      DOCOL ABORT SEMIS
                                                      
9502 85 45 52 52 4F D2                                HERROR: DB      ^5 "ERRO" ^'R'                          ; ***** ERROR
9508 F2 94                                                    DW      HPABOR
950A B9 8B FF 8C 50 8B 7E 89 D7 85 04 00              ERROR:  DW      DOCOL WARN AT ZLESS ZBRAN +ERRO10
9516 FC 94                                                    DW      PABOR
9518 62 8E A2 91 B5 91 16 92                          ERRO10: DW      HERE COUNT TYPE PDOTQ
9520 03 20 3F 20                                              DB      3 32 '?' 32
9524 89 9B 87 88 4E 8D 50 8B 45 8D 50 8B 42 97 EC 88          DW      MESS SPSTO IN AT BLK AT QUIT SEMIS
                                                      
9534 83 49 44 AE                                      HIDDOT: DB      ^3 "ID" ^'.'                            ; ***** ID.
9538 02 95                                                    DW      HERROR
953A B9 8B 89 93 8F 8C 93 85 5F 00 31 93              IDDOT:  DW      DOCOL PAD BL LIT 95 FILL
9546 77 8A E7 8F B3 8F 2E 8A D2 8E 89 93 5F 8A BE 87          DW      DUP PFA LFA OVER SUB PAD SWAP CMOVE
9556 89 93 A2 91 93 85 1F 00 3E 88                            DW      PAD COUNT LIT 31 AND
9560 2E 8A 2E 8A 76 8C D2 8E A9 89 77 8A 67 8B                DW      OVER OVER ONE SUB PLUS DUP CAT
956E 93 85 7F 00 3E 88 5F 8A 93 8B                            DW      LIT 0x7F AND SWAP CSTOR
9578 B5 91 39 8F EC 88                                        DW      TYPE SPACE SEMIS
                                                      
957E 86 43 52 45 41 54 C5                             HCREAT: DB      ^6 "CREAT" ^'E'                         ; ***** CREATE
9585 34 95                                                    DW      HIDDOT
9587 B9 8B 90 94 D7 85 10 00                          CREAT:  DW      DOCOL DFIND ZBRAN +CREA10
958F 4A 8A D1 8F 3A 95 93 85 04 00 89 9B 39 8F                DW      DROP NFA IDDOT LIT 4 MESS SPACE
959D 62 8E 77 8A 67 8B F1 8C 50 8B DF 98 3E 8E 81 8E  CREA10: DW      HERE DUP CAT WIDTH AT MIN ONEP ALLOT
95AD 77 8A 93 85 A0 00 10 8B 62 8E 76 8C D2 8E                DW      DUP LIT 0xA0 TOGGL HERE ONE SUB
95BB 93 85 80 00 10 8B A3 8F B1 8E 8B 8D 50 8B 7C 8B          DW      LIT 0x80 TOGGL LATES COMMA CURR AT STORE
95CB 62 8E 4E 8E B1 8E EC 88                                  DW      HERE TWOP COMMA SEMIS
                                                      
95D3 C9 5B 43 4F 4D 50 49 4C 45 DD                    HBCOMP: DB      ^^9 "[COMPILE" ^']'                     ; ***** [COMPILE]
95DD 7E 95                                                    DW      HCREAT
95DF B9 8B 90 94 47 89 6E 8C 0F 90                    BCOMP:  DW      DOCOL DFIND ZEQU ZERO QERR
95E9 4A 8A C3 8F B1 8E EC 88                                  DW      DROP CFA COMMA SEMIS
                                                      
95F1 C7 4C 49 54 45 52 41 CC                          HLITER: DB      ^^7 "LITERA" ^'L'                       ; ***** LITERAL
95F9 D3 95                                                    DW      HBCOMP
95FB B9 8B 97 8D 50 8B D7 85 08 00                    LITER:  DW      DOCOL STATE AT ZBRAN +LITE10
9605 A2 90 93 85 B1 8E                                        DW      COMP LIT COMMA
960B EC 88                                            LITE10: DW      SEMIS
                                                      
960D C8 44 4C 49 54 45 52 41 CC                       HDLITE: DB      ^^8 "DLITERA" ^'L'                      ; ***** DLITERAL
9616 F1 95                                                    DW      HLITER
9618 B9 8B 97 8D 50 8B D7 85 08 00                    DLITE:  DW      DOCOL STATE AT ZBRAN +DLIT10
9622 5F 8A FB 95 FB 95                                        DW      SWAP LITER LITER
9628 EC 88                                            DLIT10: DW      SEMIS
                                                      
962A 82 55 BC                                         HULESS: DB      ^2 "U" ^'<'                             ; ***** U<
962D 0D 96                                                    DW      HDLITE
962F B9 8B 2E 8A 2E 8A 5F 88 7E 89 D7 85 0C 00        ULESS:  DW      DOCOL OVER OVER XOR ZLESS ZBRAN +ULES10
963D 4A 8A 7E 89 47 89 C5 85 06 00                            DW      DROP ZLESS ZEQU BRAN +ULES20
9647 D2 8E 7E 89                                      ULES10: DW      SUB ZLESS
964B EC 88                                            ULES20: DW      SEMIS
                                                      
964D 86 3F 53 54 41 43 CB                             HQSTAC: DB      ^6 "?STAC" ^'K'                         ; ***** ?STACK
9654 2A 96                                                    DW      HULESS
9656 B9 8B 70 88 D2 8C 50 8B 5F 8A 2F 96              QSTAC:  DW      DOCOL SPAT SZERO AT SWAP ULESS
9662 76 8C 0F 90 70 88 62 8E 93 85 80 00                      DW      ONE QERR SPAT HERE LIT 128
966E A9 89 2F 96 7E 8C 0F 90 EC 88                            DW      PLUS ULESS TWO QERR SEMIS
                                                      
9678 89 49 4E 54 45 52 50 52 45 D4                    HINTER: DB      ^9 "INTERPRE" ^'T'                      ; ***** INTERPRET
9682 4D 96                                                    DW      HQSTAC
9684 B9 8B                                            INTER:  DW      DOCOL
9686 90 94 D7 85 1E 00                                INTE10: DW      DFIND ZBRAN +INTE40
968C 97 8D 50 8B 06 8F D7 85 0A 00                            DW      STATE AT LESS ZBRAN +INTE20
9696 C3 8F B1 8E C5 85 06 00                                  DW      CFA COMMA BRAN +INTE30
969E C3 8F A5 85                                      INTE20: DW      CFA EXEC
96A2 56 96 C5 85 1C 00                                INTE30: DW      QSTAC BRAN +INTE70
96A8 62 8E 38 94 AC 8D 50 8B 3E 8E D7 85 08 00        INTE40: DW      HERE NUMB DPL AT ONEP ZBRAN +INTE50
96B6 18 96 C5 85 06 00                                        DW      DLITE BRAN +INTE60
96BC 4A 8A FB 95                                      INTE50: DW      DROP LITER
96C0 56 96                                            INTE60: DW      QSTAC
96C2 C5 85 C2 FF                                      INTE70: DW      BRAN +INTE10
                                                      
96C6 89 49 4D 4D 45 44 49 41 54 C5                    HIMMED: DB      ^9 "IMMEDIAT" ^'E'                      ; ***** IMMEDIATE
96D0 78 96                                                    DW      HINTER
96D2 B9 8B A3 8F 93 85 40 00 10 8B EC 88              IMMED:  DW      DOCOL LATES LIT 0x40 TOGGL SEMIS
                                                      
96DE 8A 56 4F 43 41 42 55 4C 41 52 D9                 HVOCAB: DB      ^10 "VOCABULAR" ^'Y'                    ; ***** VOCABULARY
96E9 C6 96                                                    DW      HIMMED
96EB B9 8B 45 91 93 85 81 A0 B1 8E                    VOCAB:  DW      DOCOL BUILD LIT 0xa081 COMMA
96F5 8B 8D 50 8B C3 8F B1 8E                                  DW      CURR AT CFA COMMA
96FD 62 8E 23 8D 50 8B B1 8E 23 8D 7C 8B 55 91                DW      HERE VOCL AT COMMA VOCL STORE DOES
970B 4E 8E 7D 8D 7C 8B EC 88                          DOVOC:  DW      TWOP CONT STORE SEMIS
                                                      
9713 8B 44 45 46 49 4E 49 54 49 4F 4E D3              HDEFIN: DB      ^11 "DEFINITION" ^'S'                   ; ***** DEFINITIONS
971F DE 96                                                    DW      HVOCAB
9721 B9 8B 7D 8D 50 8B 8B 8D 7C 8B EC 88              DEFIN:  DW      DOCOL CONT AT CURR STORE SEMIS
                                                      
972D 81 A8                                            HPAREN: DB      ^1 ^'('                                 ; ***** (
972F 13 97                                                    DW      HDEFIN
9731 B9 8B 93 85 29 00 9C 93 EC 88                    PAREN:  DW      DOCOL LIT ')' WORD SEMIS
                                                      
973B 84 51 55 49 D4                                   HQUIT:  DB      ^4 "QUI" ^'T'                           ; ***** QUIT
9740 2D 97                                                    DW      HPAREN
9742 B9 8B 6E 8C 45 8D 7C 8B B8 90                    QUIT:   DW      DOCOL ZERO BLK STORE LBRAC
974C A9 88 A4 9D DE 92 84 96 97 8D 50 8B              QUIT10: DW      RPSTO CR QUERY INTER STATE AT
9758 47 89 D7 85 08 00                                        DW      ZEQU ZBRAN +QUIT20
975E 16 92                                                    DW      PDOTQ
9760 03 20 6F 6B                                              DB      3 32 "ok"
9764 C5 85 E6 FF                                      QUIT20: DW      BRAN +QUIT10
                                                      
9768 85 41 42 4F 52 D4                                HABORT: DB      ^5 "ABOR" ^'T'                          ; ***** ABORT
976E 3B 97                                                    DW      HQUIT
9770 B9 8B                                            ABORT:  DW      DOCOL
9772 A9 88 87 88 03 91 39 8F                          ABOR10: DW      RPSTO SPSTO DEC SPACE
977A 89 93 50 8B 93 85 37 37 D2 8E D7 85 1A 00                DW      PAD AT LIT COLD_MAGIC SUB ZBRAN +ABOR20
9788 6E 8C 89 93 7C 8B A4 9D 16 92                            DW      ZERO PAD STORE CR PDOTQ
9792 0D 4D 69 6E 69 6D 61 6C 2D 46 4F 52 54 48                DB      13 "Minimal-FORTH"
97A0 72 A1 21 97 42 97                                ABOR20: DW      FORTH DEFIN QUIT
                                                      
                                                      ; INCLUDE         coldwarm.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; COLD AND WARM START ENTRY POINTS
                                                      
97A6 0E FE                                            CENT:   LDI     0xFE            ; Initialize Minimal stack pointer
97A8 16 FF FF                                                 STA     0xFFFF          ; :
97AB 0E D3                                                    LDI     <COLD10         ; Start by executing COLD
97AD 16 E8 FE                                                 STA     IP.0            ; :
97B0 0E 97                                                    LDI     >COLD10         ; :
97B2 16 E9 FE                                                 STA     IP.1            ; :
97B5 14 30 85                                                 JPA     NEXT            ; ... and over to FORTH VM
                                                      
97B8 0E FE                                            WENT:   LDI     0xFE            ; Initialize Minimal stack pointer
97BA 16 FF FF                                                 STA     0xFFFF          ; :
97BD 0E 72                                                    LDI     <ABOR10         ; Start by executing ABORT
97BF 16 E8 FE                                                 STA     IP.0            ; :
97C2 0E 97                                                    LDI     >ABOR10         ; :
97C4 16 E9 FE                                                 STA     IP.1            ; :
97C7 14 30 85                                                 JPA     NEXT            ; ... and over to FORTH VM
                                                      
97CA 84 43 4F 4C C4                                   HCOLD:  DB      ^4 "COL" ^'D'                           ; ***** COLD
97CF 68 97                                                    DW      HABORT
97D1 B9 8B                                            COLD:   DW      DOCOL
                                                      COLD10: ; Init FORTH registers
97D3 A9 88 87 88 CB 88                                        DW      RPSTO SPSTO UPSTO
                                                              ; Set FORTH vocabulary
97D9 93 85 0C 00 BF 8C 50 8B                                  DW      LIT 12 PORIG AT
97E1 93 85 06 00 93 85 72 A1 A9 89 7C 8B                      DW      LIT 6 LIT FORTH PLUS STORE
                                                              ; Init 12 items (24 bytes) in user area ...
                                                              ; ... with values from boot table
97ED 93 85 12 00 BF 8C                                        DW      LIT 18 PORIG
97F3 93 85 10 00 BF 8C 50 8B 93 85 06 00 A9 89                DW      LIT 16 PORIG AT LIT 6 PLUS
9801 93 85 18 00 BE 87                                        DW      LIT 24 CMOVE
                                                              ; Erase disk buffers
9807 93 85 22 00 BF 8C 50 8B 93 85 24 00 BF 8C 50 8B          DW      LIT 34 PORIG AT LIT 36 PORIG AT
9817 2E 8A D2 8E 51 93                                        DW      OVER SUB ERASE
                                                              ; Initialize some of the user variables
981D 6E 8C 4E 8D 7C 8B 6E 8C 58 8D 7C 8B                      DW      ZERO IN STORE ZERO OUT STORE
9829 2F 8D 50 8B DD 8D 7C 8B 2F 8D 50 8B E8 8D 7C 8B          DW      FIRST AT USE STORE FIRST AT PREV STORE
                                                              ; Set minimum environment for autoexec of SCR #1
9839 72 A1 21 97 03 91 6E 8C 45 8D 7C 8B B8 90                DW      FORTH DEFIN DEC ZERO BLK STORE LBRAC
                                                              ; Try to load ("autoexec") SCR #1
9847 76 8C F4 9A 77 8A 67 8B 93 85 5C 00 F7 8E                DW      ONE BLOCK DUP CAT LIT CH_BSL EQUAL
9855 5F 8A 3E 8E 67 8B 8F 8C F7 8E 3E 88 D7 85 0E 00          DW      SWAP ONEP CAT BL EQUAL AND ZBRAN +COLD20
9865 76 8C BF 9B 93 85 37 37 89 93 7C 8B                      DW      ONE LOAD LIT COLD_MAGIC PAD STORE
                                                              ; Continue via ABORT
9871 70 97                                            COLD20: DW      ABORT
                                                      
                                                      ; INCLUDE         math.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; MATHEMATICS WORDS
                                                      
9873 84 53 2D 3E C4                                   HSTOD:  DB      ^4 "S->" ^'D'                           ; ***** S->D
9878 CA 97                                                    DW      HCOLD
987A 7C 98                                            STOD:   DW      STOD0
987C 2C F2 FE                                         STOD0:  CLW     R1              ; Assume high word zero
987F 2E EC FE                                                 INW     SP              ; Get operand high byte
9882 1D EC FE                                                 LDR     SP              ; :
9885 11 00                                                    CPI     0               ; Negative?
9887 3F 90 98                                                 BMI     STOD10          ; YES: Push 0xFFFF
988A 2F EC FE                                                 DEW     SP              ; :
988D 14 1E 85                                                 JPA     PUSH            ; NO: Push 0x0000
9890 2F EC FE                                         STOD10: DEW     SP              ; :
9893 2F F2 FE                                                 DEW     R1              ; Make 0x0000 into 0xFFFF
9896 14 1E 85                                                 JPA     PUSH            ; Done
                                                      
9899 82 2B AD                                         HPM:    DB      ^2 "+" ^'-'                             ; ***** +-
989C 73 98                                                    DW      HSTOD
989E B9 8B 7E 89 D7 85 04 00                          PM:     DW      DOCOL ZLESS ZBRAN +PM10
98A6 CF 89                                                    DW      MINUS
98A8 EC 88                                            PM10:   DW      SEMIS
                                                      
98AA 83 44 2B AD                                      HDPM:   DB      ^3 "D+" ^'-'                            ; ***** D+-
98AE 99 98                                                    DW      HPM
98B0 B9 8B 7E 89 D7 85 04 00                          DPM:    DW      DOCOL ZLESS ZBRAN +DPM10
98B8 E3 89                                                    DW      DMINU
98BA EC 88                                            DPM10:  DW      SEMIS
                                                      
98BC 83 41 42 D3                                      HABS:   DB      ^3 "AB" ^'S'                            ; ***** ABS
98C0 AA 98                                                    DW      HDPM
98C2 B9 8B 77 8A 9E 98 EC 88                          ABS:    DW      DOCOL DUP PM SEMIS
                                                      
98CA 84 44 41 42 D3                                   HDABS:  DB      ^4 "DAB" ^'S'                           ; ***** DABS
98CF BC 98                                                    DW      HABS
98D1 B9 8B 77 8A B0 98 EC 88                          DABS:   DW      DOCOL DUP DPM SEMIS
                                                      
98D9 83 4D 49 CE                                      HMIN:   DB      ^3 "MI" ^'N'                            ; ***** MIN
98DD CA 98                                                    DW      HDABS
98DF B9 8B 2E 8A 2E 8A 15 8F D7 85 04 00              MIN:    DW      DOCOL OVER OVER GREAT ZBRAN +MIN10
98EB 5F 8A                                                    DW      SWAP
98ED 4A 8A EC 88                                      MIN10:  DW      DROP SEMIS
                                                      
98F1 83 4D 41 D8                                      HMAX:   DB      ^3 "MA" ^'X'                            ; ***** MAX
98F5 D9 98                                                    DW      HMIN
98F7 B9 8B 2E 8A 2E 8A 06 8F D7 85 04 00              MAX:    DW      DOCOL OVER OVER LESS ZBRAN +MAX10
9903 5F 8A                                                    DW      SWAP
9905 4A 8A EC 88                                      MAX10:  DW      DROP SEMIS
                                                      
9909 82 4D AA                                         HMSTAR: DB      ^2 "M" ^'*'                             ; ****** M*
990C F1 98                                                    DW      HMAX
990E B9 8B 2E 8A 2E 8A 5F 88 1E 89 C2 98 5F 8A C2 98  MSTAR:  DW      DOCOL OVER OVER XOR TOR ABS SWAP ABS
991E EA 87 2E 89 B0 98 EC 88                                  DW      USTAR FROMR DPM SEMIS
                                                      
9926 82 4D AF                                         HMSLAS: DB      ^2 "M" ^'/'                             ; ***** M/
9929 09 99                                                    DW      HMSTAR
992B B9 8B 2E 8A 1E 89 1E 89 D1 98 3A 89 C2 98        MSLAS:  DW      DOCOL OVER TOR TOR DABS R ABS
9939 1E 88 2E 89 3A 89 5F 88 9E 98 5F 8A                      DW      USLAS FROMR R XOR PM SWAP
9945 2E 89 9E 98 5F 8A EC 88                                  DW      FROMR PM SWAP SEMIS
                                                      
994D 81 AA                                            HSTAR:  DB      ^1 ^'*'                                 ; ***** *
994F 26 99                                                    DW      HMSLAS
9951 B9 8B 0E 99 4A 8A EC 88                          STAR:   DW      DOCOL MSTAR DROP SEMIS
                                                      
9959 84 2F 4D 4F C4                                   HSLMOD: DB      ^4 "/MO" ^'D'                           ; ***** /MOD
995E 4D 99                                                    DW      HSTAR
9960 B9 8B 1E 89 7A 98 2E 89 2B 99 EC 88              SLMOD:  DW      DOCOL TOR STOD FROMR MSLAS SEMIS
                                                      
996C 81 AF                                            HSLAS:  DB      ^1 ^'/'                                 ; ***** /
996E 59 99                                                    DW      HSLMOD
9970 B9 8B 60 99 5F 8A 4A 8A EC 88                    SLASH:  DW      DOCOL SLMOD SWAP DROP SEMIS
                                                      
997A 83 4D 4F C4                                      HMOD:   DB      ^3 "MO" ^'D'                            ; ***** MOD
997E 6C 99                                                    DW      HSLAS
9980 B9 8B 60 99 4A 8A EC 88                          MOD:    DW      DOCOL SLMOD DROP SEMIS
                                                      
9988 85 2A 2F 4D 4F C4                                HSSMOD: DB      ^5 "*/MO" ^'D'                          ; ***** */MOD
998E 7A 99                                                    DW      HMOD
9990 B9 8B 1E 89 0E 99 2E 89 2B 99 EC 88              SSMOD:  DW      DOCOL TOR MSTAR FROMR MSLAS SEMIS
                                                      
999C 82 2A AF                                         HSSLA:  DB      ^2 "*" ^'/'                             ; ***** */
999F 88 99                                                    DW      HSSMOD
99A1 B9 8B 90 99 5F 8A 4A 8A EC 88                    SSLA:   DW      DOCOL SSMOD SWAP DROP SEMIS
                                                      
99AB 85 4D 2F 4D 4F C4                                HMSMOD: DB      ^5 "M/MO" ^'D'                          ; ***** M/MOD
99B1 88 99                                                    DW      HSSMOD
99B3 B9 8B 1E 89 6E 8C 3A 89 1E 88 2E 89              MSMOD:  DW      DOCOL TOR ZERO R USLAS FROMR
99BF 5F 8A 1E 89 1E 88 2E 89 EC 88                            DW      SWAP TOR USLAS FROMR SEMIS
                                                      
                                                      ; INCLUDE         diskio.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; DISK I/O
                                                      
99C9 83 52 2F D7                                      HRW:    DB      ^3 "R/" ^'W'                            ; ***** R/W
99CD AB 99                                                    DW      HMSMOD
99CF B9 8B 1E 89                                      RW:     DW      DOCOL TOR
99D3 93 85 20 00 60 99 3E 8E 35 8B                            DW      LIT 32 SLMOD ONEP TBANK
99DD 93 85 00 04 51 99 2E 89 D7 85 04 00                      DW      LIT 1024 STAR FROMR ZBRAN +RW10
99E9 5F 8A                                                    DW      SWAP
99EB 93 85 00 04 BE 87 EC 88                          RW10:   DW      LIT 1024 CMOVE SEMIS
                                                      
99F3 84 2B 42 55 C6                                   HPBUF:  DB      ^4 "+BU" ^'F'                           ; ***** +BUF
99F8 C9 99                                                    DW      HRW
99FA B9 8B A5 8C 93 85 04 00 A9 89 A9 89              PBUF:   DW      DOCOL BBUF LIT 4 PLUS PLUS
9A06 77 8A 3B 8D 50 8B F7 8E D7 85 08 00                      DW      DUP LIMIT AT EQUAL ZBRAN +PBUF10
9A12 4A 8A 2F 8D 50 8B                                        DW      DROP FIRST AT
9A18 77 8A E8 8D 50 8B D2 8E EC 88                    PBUF10: DW      DUP PREV AT SUB SEMIS
                                                      
9A22 86 55 50 44 41 54 C5                             HUPDAT: DB      ^6 "UPDAT" ^'E'                         ; ***** UPDATE
9A29 F3 99                                                    DW      HPBUF
9A2B B9 8B E8 8D 50 8B 50 8B 93 85 00 80              UPDAT:  DW      DOCOL PREV AT AT LIT 0x8000
9A37 4E 88 E8 8D 50 8B 7C 8B EC 88                            DW      OR PREV AT STORE SEMIS
                                                      
9A41 8D 45 4D 50 54 59 2D 42 55 46 46 45 52 D3        HMTBUF: DB      ^13 "EMPTY-BUFFER" ^'S'                 ; ***** EMPTY-BUFFERS
9A4F 22 9A                                                    DW      HUPDAT
9A51 B9 8B 2F 8D 50 8B 3B 8D 50 8B                    MTBUF:  DW      DOCOL FIRST AT LIMIT AT
9A5B 2E 8A D2 8E 51 93 EC 88                                  DW      OVER SUB ERASE SEMIS
                                                      
9A63 85 46 4C 55 53 C8                                HFLUSH: DB      ^5 "FLUS" ^'H'                          ; ***** FLUSH
9A69 41 9A                                                    DW      HMTBUF
9A6B B9 8B 3B 8D 50 8B 2F 8D 50 8B 6D 86              FLUSH:  DW      DOCOL LIMIT AT FIRST AT XDO
9A77 7F 86 50 8B 7E 89 D7 85 14 00                    FLUS10: DW      I AT ZLESS ZBRAN +FLUS20
9A81 7F 86 4E 8E 7F 86 50 8B 93 85 FF 7F                      DW      I TWOP I AT LIT 0x7FFF
9A8D 3E 88 6E 8C CF 99                                        DW      AND ZERO RW
9A93 A5 8C 93 85 04 00 A9 89 0B 86 DA FF              FLUS20: DW      BBUF LIT 4 PLUS XPLOO +FLUS10
9A9F 51 9A EC 88                                              DW      MTBUF SEMIS
                                                      
9AA3 86 42 55 46 46 45 D2                             HBUFFE: DB      ^6 "BUFFE" ^'R'                         ; ***** BUFFER
9AAA 63 9A                                                    DW      HFLUSH
9AAC B9 8B DD 8D 50 8B 77 8A 1E 89                    BUFFE:  DW      DOCOL USE AT DUP TOR
9AB6 FA 99 D7 85 FC FF                                BUFF10: DW      PBUF ZBRAN +BUFF10
9ABC DD 8D 7C 8B 3A 89 50 8B 7E 89 D7 85 14 00                DW      USE STORE R AT ZLESS ZBRAN +BUFF20
9ACA 3A 89 4E 8E 3A 89 50 8B 93 85 FF 7F                      DW      R TWOP R AT LIT 0x7FFF
9AD6 3E 88 6E 8C CF 99                                        DW      AND ZERO RW
9ADC 3A 89 7C 8B 3A 89 E8 8D 7C 8B 2E 89 4E 8E EC 88  BUFF20: DW      R STORE R PREV STORE FROMR TWOP SEMIS
                                                      
9AEC 85 42 4C 4F 43 CB                                HBLOCK: DB      ^5 "BLOC" ^'K'                          ; ***** BLOCK
9AF2 A3 9A                                                    DW      HBUFFE
9AF4 B9 8B 1E 89 E8 8D 50 8B 77 8A 50 8B              BLOCK:  DW      DOCOL TOR PREV AT DUP AT
9B00 93 85 FF 7F 3E 88 3A 89 D2 8E D7 85 36 00                DW      LIT 0x7FFF AND R SUB ZBRAN +BLOC30
9B0E FA 99 47 89 D7 85 14 00                          BLOC10: DW      PBUF ZEQU ZBRAN +BLOC20
9B16 4A 8A 3A 89 AC 9A 77 8A 3A 89                            DW      DROP R BUFFE DUP R
9B20 76 8C CF 99 7E 8C D2 8E                                  DW      ONE RW TWO SUB
9B28 77 8A 50 8B 93 85 FF 7F 3E 88 3A 89              BLOC20: DW      DUP AT LIT 0x7FFF AND R
9B34 D2 8E 47 89 D7 85 D4 FF                                  DW      SUB ZEQU ZBRAN +BLOC10
9B3C 77 8A E8 8D 7C 8B                                        DW      DUP PREV STORE
9B42 2E 89 4A 8A 4E 8E EC 88                          BLOC30: DW      FROMR DROP TWOP SEMIS
                                                      
9B4A 86 28 4C 49 4E 45 A9                             HPLINE: DB      ^6 "(LINE" ^')'                         ; ***** (LINE)
9B51 EC 9A                                                    DW      HBLOCK
9B53 B9 8B 1E 89 99 8C A5 8C 90 99 2E 89 B1 8C        PLINE:  DW      DOCOL TOR CL BBUF SSMOD FROMR BSCR
9B61 51 99 A9 89 F4 9A A9 89 99 8C EC 88                      DW      STAR PLUS BLOCK PLUS CL SEMIS
                                                      
9B6D 85 2E 4C 49 4E C5                                HDLINE: DB      ^5 ".LIN" ^'E'                          ; ***** .LINE
9B73 4A 9B                                                    DW      HPLINE
9B75 B9 8B 53 9B E3 91 B5 91 EC 88                    DLINE:  DW      DOCOL PLINE DTRAI TYPE SEMIS
                                                      
9B7F 87 4D 45 53 53 41 47 C5                          HMESS:  DB      ^7 "MESSAG" ^'E'                        ; ***** MESSAGE
9B87 6D 9B                                                    DW      HDLINE
9B89 B9 8B FF 8C 50 8B D7 85 1A 00                    MESS:   DW      DOCOL WARN AT ZBRAN +MESS20
9B93 53 8F D7 85 10 00                                        DW      DDUP ZBRAN +MESS10
9B99 93 85 10 00 60 99 93 85 04 00 A9 89 75 9B                DW      LIT 16 SLMOD LIT 4 PLUS DLINE
9BA7 C5 85 0D 00                                      MESS10: DW      BRAN +MESS30
9BAB 16 92                                            MESS20: DW      PDOTQ
9BAD 06 4D 53 47 20 23 20                                     DB      6 "MSG" 32 '#' 32
9BB4 67 A0                                                    DW      DOT
9BB6 EC 88                                            MESS30: DW      SEMIS
                                                      
9BB8 84 4C 4F 41 C4                                   HLOAD:  DB      ^4 "LOA" ^'D'                           ; ***** LOAD
9BBD 7F 9B                                                    DW      HMESS
9BBF B9 8B 45 8D 50 8B 1E 89 4E 8D 50 8B 1E 89 6E 8C  LOAD:   DW      DOCOL BLK AT TOR IN AT TOR ZERO IN
9BCF 4E 8D 7C 8B B1 8C 51 99 45 8D 7C 8B 84 96                DW      STORE BSCR STAR BLK STORE INTER
9BDD 2E 89 4E 8D 7C 8B 2E 89 45 8D 7C 8B EC 88                DW      FROMR IN STORE FROMR BLK STORE SEMIS
                                                      
9BEB C3 2D 2D BE                                      HARROW: DB      ^^3 "--" ^'>'                           ; ***** -->
9BEF B8 9B                                                    DW      HLOAD
9BF1 B9 8B 88 90 6E 8C 4E 8D 7C 8B B1 8C 45 8D 50 8B  ARROW:  DW      DOCOL QLOAD ZERO IN STORE BSCR BLK AT
9C01 2E 8A 80 99 D2 8E 45 8D EF 8A EC 88                      DW      OVER MOD SUB BLK PSTOR SEMIS
                                                      
                                                      ; INCLUDE         extras.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; EXTRAS (added by SlowCorners)
                                                      
9C0D 84 4E 4F 4F D0                                   HNOOP:  DB      ^4 "NOO" ^'P'                           ; ***** NOOP
9C12 EB 9B                                                    DW      HARROW
9C14 B9 8B                                            NOOP:   DW      DOCOL
9C16 EC 88                                            NOO10:  DW      SEMIS
                                                      
9C18 C5 41 53 43 49 C9                                HASCII: DB      ^^5 "ASCI" ^'I'                         ; ***** ASCII
9C1E 0D 9C                                                    DW      HNOOP
9C20 B9 8B 8F 8C 9C 93 62 8E 3E 8E                    ASCII:  DW      DOCOL BL WORD HERE ONEP
9C2A 67 8B 97 8D 50 8B D7 85 04 00                            DW      CAT STATE AT ZBRAN +ASCI10
9C34 FB 95                                                    DW      LITER
9C36 EC 88                                            ASCI10: DW      SEMIS
                                                      
9C38 C1 DC                                            HBSLAS: DB      ^^1 ^'\'                                ; ***** \
9C3A 18 9C                                                    DW      HASCII
9C3C B9 8B 45 8D 50 8B D7 85 1C 00                    BSLAS:  DW      DOCOL BLK AT ZBRAN +BSLA10
9C46 4E 8D 50 8B 77 8A 99 8C 80 99 99 8C 5F 8A                DW      IN AT DUP CL MOD CL SWAP
9C54 D2 8E A9 89 4E 8D 7C 8B C5 85 06 00                      DW      SUB PLUS IN STORE BRAN +BSLA20
9C60 76 8C 9C 93                                      BSLA10: DW      ONE WORD
9C64 EC 88                                            BSLA20: DW      SEMIS
                                                      
9C66 84 54 41 53 CB                                   HTASK:  DB      ^4 "TAS" ^'K'                           ; ***** TASK
9C6B 38 9C                                                    DW      HBSLAS
9C6D B9 8B 45 91 6E 8C B1 8E                          TASK:   DW      DOCOL BUILD ZERO COMMA
9C75 93 85 14 9C B1 8E 6E 8C B1 8E 55 91                      DW      LIT NOOP COMMA ZERO COMMA DOES
9C81 EC 88                                            DOTAS:  DW      SEMIS
                                                      
9C83 84 52 55 4E D3                                   HRUNS:  DB      ^4 "RUN" ^'S'                           ; ***** RUNS
9C88 66 9C                                                    DW      HTASK
9C8A B9 8B 06 9E C3 8F 5F 8A 4E 8E 7C 8B EC 88        RUNS:   DW      DOCOL TICK CFA SWAP TWOP STORE SEMIS
                                                      
                                                      ; To be added as primaries: STOP AFTER NOW
                                                      
9C98 87 52 45 51 55 49 52 C5                          HRQUIR: DB      ^7 "REQUIR" ^'E'                        ; ***** REQUIRE
9CA0 83 9C                                                    DW      HRUNS
9CA2 B9 8B 90 94 C5 85 08 00                          RQUIR:  DW      DOCOL DFIND BRAN +RQUI10
9CAA A8 8A C5 85 08 00                                        DW      TDROP BRAN +RQUI20
9CB0 93 85 22 00 0A 95                                RQUI10: DW      LIT 34 ERROR
9CB6 EC 88                                            RQUI20: DW      SEMIS
                                                      
9CB8 82 3E BC                                         HBOUND: DB      ^2 ">" ^'<'                         ; ***** ><
9CBB 98 9C                                                    DW      HRQUIR
9CBD B9 8B 1E 89 F7 98 2E 89 DF 98 EC 88              BOUND:  DW      DOCOL TOR MAX FROMR MIN SEMIS
                                                      
9CC9 84 44 4F 45 D2                                   HDOER:  DB      ^4 "DOE" ^'R'                           ; ***** DOER
9CCE B8 9C                                                    DW      HBOUND
9CD0 B9 8B 45 91 93 85 16 9C B1 8E 55 91              DOER:   DW      DOCOL BUILD LIT NOO10 COMMA DOES
9CDC 50 8B 1E 89 EC 88                                DODOR:  DW      AT TOR SEMIS
                                                      
9CE2 84 4D 41 4B C5                                   HMAKE:  DB      ^4 "MAK" ^'E'                           ; ***** MAKE
9CE7 C9 9C                                                    DW      HDOER
9CE9 B9 8B 90 94 47 89 6E 8C 0F 90 4A 8A 4E 8E 90 94  MAKE:   DW      DOCOL DFIND ZEQU ZERO QERR DROP TWOP DFIND
9CF9 47 89 6E 8C 0F 90 4A 8A 97 8D 50 8B D7 85 0E 00          DW      ZEQU ZERO QERR DROP STATE AT ZBRAN +MAKE10
9D09 FB 95 FB 95 A2 90 7C 8B C5 85 06 00                      DW      LITER LITER COMP STORE BRAN +MAKE20
9D15 5F 8A 7C 8B                                      MAKE10: DW      SWAP STORE
9D19 EC 88                                            MAKE20: DW      SEMIS
                                                      
9D1B 86 28 54 52 55 45 A9                             HPTRUE: DB      ^6 "(TRUE" ^')'                         ; ***** (TRUE)
9D22 E2 9C                                                    DW      HMAKE
9D24 B9 8B                                            PTRUE:  DW      DOCOL
9D26 66 8C EC 88                                      PTR10:  DW      MONE SEMIS
                                                      
9D2A 84 54 52 55 C5                                   HTRUE:  DB      ^4 "TRU" ^'E'                           ; ***** TRUE
9D2F 1B 9D                                                    DW      HPTRUE
9D31 61 91 DC 9C 26 9D                                TRUE:   DW      DODOE DODOR PTR10
                                                      
9D37 85 46 41 4C 53 C5                                HFALSE: DB      ^5 "FALS" ^'E'                          ; ***** FALSE
9D3D 2A 9D                                                    DW      HTRUE
9D3F 01 8C 00 00                                      FALSE:  DW      DOCON 0
                                                      
9D43 84 45 4D 49 D4                                   HEMIT:  DB      ^4 "EMI" ^'T'                           ; ***** EMIT
9D48 37 9D                                                    DW      HFALSE
9D4A 4C 9D                                            EMIT:   DW      EMIT0
9D4C 38 52 9D                                         EMIT0:  JPS     _EMIT
9D4F 14 30 85                                                 JPA     NEXT
                                                              ;
9D52 38 73 80                                         _EMIT:  JPS     _POP1           ; Get character
9D55 15 F2 FE                                                 LDA     R1.0            ; Send char to terminal
9D58 02                                                       OUT                     ; :
9D59 0E 22                                                    LDI     34              ; OUT++
9D5B 16 F6 FE                                                 STA     R2.0            ; : R2 = Index to OUT
9D5E 38 84 83                                                 JPS     _USER           ; : R3 = Addr to OUT
9D61 38 6C 82                                                 JPS     _LD16           ; : R1 = OUT
9D64 2E F2 FE                                                 INW     R1              ; : R1++
9D67 38 7F 82                                                 JPS     _ST16           ; : OUT = R1'
9D6A 39                                                       RTS                     ; Done
                                                      
9D6B 83 4B 45 D9                                      HKEY:   DB      ^3 "KE" ^'Y'                            ; ***** KEY
9D6F 43 9D                                                    DW      HEMIT
9D71 73 9D                                            KEY:    DW      KEY0
9D73 0A                                               KEY0:   INP                     ; Get char from terminal
9D74 11 FF                                                    CPI     0xFF            ; Did we get a character?
9D76 3B 73 9D                                                 BEQ     KEY0            ; NO: Try again
9D79 16 F2 FE                                                 STA     R1.0            ; YES: Push character
9D7C 24 F3 FE                                                 CLB     R1.1            ; :
9D7F 14 1E 85                                                 JPA     PUSH            ; Push R1; NEXT
                                                      
9D82 89 3F 54 45 52 4D 49 4E 41 CC                    HQTERM: DB      ^9 "?TERMINA" ^'L'                      ; ***** ?TERMINAL
9D8C 6B 9D                                                    DW      HKEY
9D8E 90 9D                                            QTERM:  DW      QTERM0
9D90 2C F2 FE                                         QTERM0: CLW     R1              ; Default FALSE to return
9D93 0A                                                       INP                     ; Get char from terminal
9D94 11 FF                                                    CPI     0xFF            ; Did we get a character?
9D96 3B 9C 9D                                                 BEQ     QTER10          ; NO: Return FALSE
9D99 2F F2 FE                                                 DEW     R1              ; Make default FALSE into TRUE
9D9C 14 1E 85                                         QTER10: JPA     PUSH            ; Push R1; NEXT
                                                      
9D9F 82 43 D2                                         HCR:    DB      ^2 "C" ^'R'                             ; ***** CR
9DA2 82 9D                                                    DW      HQTERM
9DA4 B9 8B 93 85 0D 00 4A 9D 93 85 0A 00 4A 9D EC 88  CR:     DW      DOCOL LIT 13 EMIT LIT 10 EMIT SEMIS
                                                      
9DB4 83 28 22 A9                                      HPQUOT: DB      ^3 '(' '"' ^')'                         ; ***** (")
9DB8 9F 9D                                                    DW      HCR
9DBA B9 8B 3A 89 77 8A 67 8B 3E 8E                    PQUOT:  DW      DOCOL R DUP CAT ONEP
9DC4 2E 89 A9 89 1E 89 EC 88                                  DW      FROMR PLUS TOR SEMIS
                                                      
9DCC C1 A2                                            HQUOTE: DB      ^^1 ^'"'                                ; ***** "
9DCE B4 9D                                                    DW      HPQUOT
9DD0 B9 8B 93 85 22 00 97 8D 50 8B D7 85 14 00        QUOTE:  DW      DOCOL LIT CH_DQUOTE STATE AT ZBRAN +QUOT10
9DDE A2 90 BA 9D 9C 93 62 8E                                  DW      COMP PQUOT WORD HERE
9DE6 67 8B 3E 8E 81 8E C5 85 12 00                            DW      CAT ONEP ALLOT BRAN +QUOT20
9DF0 9C 93 62 8E 89 93 2E 8A 67 8B 3E 8E BE 87 89 93  QUOT10: DW      WORD HERE PAD OVER CAT ONEP CMOVE PAD
9E00 EC 88                                            QUOT20: DW      SEMIS
                                                      
                                                      
                                                      ; INCLUDE         misc.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; MISCELLANEOUS HIGHER LEVEL
                                                      
9E02 C1 A7                                            HTICK:  DB      ^^1 ^39                                 ; ***** '
9E04 CC 9D                                                    DW      HQUOTE
9E06 B9 8B 90 94 47 89 6E 8C 0F 90 4A 8A FB 95 EC 88  TICK:   DW      DOCOL DFIND ZEQU ZERO QERR DROP LITER SEMIS
                                                      
9E16 86 46 4F 52 47 45 D4                             HFORGE: DB      ^6 "FORGE" ^'T'                         ; ***** FORGET
9E1D 02 9E                                                    DW      HTICK
9E1F B9 8B 8B 8D 50 8B 7D 8D 50 8B D2 8E 93 85 18 00  FORGE:  DW      DOCOL CURR AT CONT AT SUB LIT 24
9E2F 0F 90 06 9E 77 8A 0B 8D 50 8B 06 8F 93 85 15 00          DW      QERR TICK DUP FENCE AT LESS LIT 21
9E3F 0F 90 77 8A D1 8F 14 8D 7C 8B B3 8F 50 8B 7D 8D          DW      QERR DUP NFA DP STORE LFA AT CONT
9E4F 50 8B 7C 8B EC 88                                        DW      AT STORE SEMIS
                                                      
9E55 84 42 41 43 CB                                   HBACK:  DB      ^4 "BAC" ^'K'                           ; ***** BACK
9E5A 16 9E                                                    DW      HFORGE
9E5C B9 8B 62 8E D2 8E B1 8E EC 88                    BACK:   DW      DOCOL HERE SUB COMMA SEMIS
                                                      
9E66 C5 42 45 47 49 CE                                HBEGIN: DB      ^^5 "BEGI" ^'N'                         ; ***** BEGIN
9E6C 55 9E                                                    DW      HBACK
9E6E B9 8B 29 90 62 8E 76 8C EC 88                    BEGIN:  DW      DOCOL QCOMP HERE ONE SEMIS
                                                      
9E78 C5 45 4E 44 49 C6                                HENDIF: DB      ^^5 "ENDI" ^'F'                         ; ***** ENDIF
9E7E 66 9E                                                    DW      HBEGIN
9E80 B9 8B 29 90 7E 8C 58 90 62 8E                    ENDIF:  DW      DOCOL QCOMP TWO QPAIR HERE
9E8A 2E 8A D2 8E 5F 8A 7C 8B EC 88                            DW      OVER SUB SWAP STORE SEMIS
                                                      
9E94 C4 54 48 45 CE                                   HTHEN:  DB      ^^4 "THE" ^'N'                          ; ***** THEN
9E99 78 9E                                                    DW      HENDIF
9E9B B9 8B 80 9E EC 88                                THEN:   DW      DOCOL ENDIF SEMIS
                                                      
9EA1 C2 44 CF                                         HDO:    DB      ^^2 "D" ^'O'                            ; ***** DO
9EA4 94 9E                                                    DW      HTHEN
9EA6 B9 8B A2 90 6D 86 62 8E 93 85 03 00 EC 88        DO:     DW      DOCOL COMP XDO HERE LIT 3 SEMIS
                                                      
9EB4 C4 4C 4F 4F D0                                   HLOOP:  DB      ^^4 "LOO" ^'P'                          ; ***** LOOP
9EB9 A1 9E                                                    DW      HDO
9EBB B9 8B 93 85 03 00 58 90 A2 90 58 86 5C 9E EC 88  LOOP:   DW      DOCOL LIT 3 QPAIR COMP XLOOP BACK SEMIS
                                                      
9ECB C5 2B 4C 4F 4F D0                                HPLOOP: DB      ^^5 "+LOO" ^'P'                         ; ***** +LOOP
9ED1 B4 9E                                                    DW      HLOOP
9ED3 B9 8B 93 85 03 00 58 90 A2 90 0B 86 5C 9E EC 88  PLOOP:  DW      DOCOL LIT 3 QPAIR COMP XPLOO BACK SEMIS
                                                      
9EE3 C5 55 4E 54 49 CC                                HUNTIL: DB      ^^5 "UNTI" ^'L'                         ; ***** UNTIL
9EE9 CB 9E                                                    DW      HPLOOP
9EEB B9 8B 76 8C 58 90 A2 90 D7 85 5C 9E EC 88        UNTIL:  DW      DOCOL ONE QPAIR COMP ZBRAN BACK SEMIS
                                                      
9EF9 C3 45 4E C4                                      HEND:   DB      ^^3 "EN" ^'D'                           ; ***** ENDI
9EFD E3 9E                                                    DW      HUNTIL
9EFF B9 8B EB 9E EC 88                                END:    DW      DOCOL UNTIL SEMIS
                                                      
9F05 C5 41 47 41 49 CE                                HAGAIN: DB      ^^5 "AGAI" ^'N'                         ; ***** AGAIN
9F0B F9 9E                                                    DW      HEND
9F0D B9 8B 76 8C 58 90 A2 90 C5 85 5C 9E EC 88        AGAIN:  DW      DOCOL ONE QPAIR COMP BRAN BACK SEMIS
                                                      
9F1B C6 52 45 50 45 41 D4                             HREPEA: DB      ^^6 "REPEA" ^'T'                        ; ***** REPEAT
9F22 05 9F                                                    DW      HAGAIN
9F24 B9 8B 1E 89 1E 89 0D 9F 2E 89 2E 89              REPEA:  DW      DOCOL TOR TOR AGAIN FROMR FROMR
9F30 7E 8C D2 8E 80 9E EC 88                                  DW      TWO SUB ENDIF SEMIS
                                                      
9F38 C2 49 C6                                         HIF:    DB      ^^2 "I" ^'F'                            ; ***** IF
9F3B 1B 9F                                                    DW      HREPEA
9F3D B9 8B A2 90 D7 85 62 8E 6E 8C B1 8E 7E 8C EC 88  IF:     DW      DOCOL COMP ZBRAN HERE ZERO COMMA TWO SEMIS
                                                      
9F4D C4 45 4C 53 C5                                   HELSE:  DB      ^^4 "ELS" ^'E'                          ; ***** ELSE
9F52 38 9F                                                    DW      HIF
9F54 B9 8B 7E 8C 58 90 A2 90 C5 85 62 8E 7E 8C B1 8E  ELSE:   DW      DOCOL TWO QPAIR COMP BRAN HERE TWO COMMA
9F64 5F 8A 7E 8C 80 9E 7E 8C EC 88                            DW      SWAP TWO ENDIF TWO SEMIS
                                                      
9F6E C5 57 48 49 4C C5                                HWHILE: DB      ^^5 "WHIL" ^'E'                         ; ***** WHILE
9F74 4D 9F                                                    DW      HELSE
9F76 B9 8B 3D 9F 4E 8E EC 88                          WHILE:  DW      DOCOL IF TWOP SEMIS
                                                      
9F7E 86 53 50 41 43 45 D3                             HSPACS: DB      ^6 "SPACE" ^'S'                         ; ***** SPACES
9F85 6E 9F                                                    DW      HWHILE
9F87 B9 8B 6E 8C F7 98 53 8F D7 85 0C 00              SPACS:  DW      DOCOL ZERO MAX DDUP ZBRAN +SPAC20
9F93 6E 8C 6D 86                                              DW      ZERO XDO
9F97 39 8F 58 86 FC FF                                SPAC10: DW      SPACE XLOOP +SPAC10
9F9D EC 88                                            SPAC20: DW      SEMIS
                                                      
9F9F 82 3C A3                                         HBDIGS: DB      ^2 "<" ^'#'                             ; ***** <#
9FA2 7E 9F                                                    DW      HSPACS
9FA4 B9 8B 89 93 D3 8D 7C 8B EC 88                    BDIGS:  DW      DOCOL PAD HLD STORE SEMIS
                                                      
9FAE 82 23 BE                                         HEDIGS: DB      ^2 "#" ^'>'                             ; ***** #>
9FB1 9F 9F                                                    DW      HBDIGS
9FB3 B9 8B 4A 8A 4A 8A D3 8D 50 8B                    EDIGS:  DW      DOCOL DROP DROP HLD AT
9FBD 89 93 2E 8A D2 8E EC 88                                  DW      PAD OVER SUB SEMIS
                                                      
9FC5 84 53 49 47 CE                                   HSIGN:  DB      ^4 "SIG" ^'N'                           ; ***** SIGN
9FCA AE 9F                                                    DW      HEDIGS
9FCC B9 8B 23 8F 7E 89 D7 85 08 00                    SIGN:   DW      DOCOL ROT ZLESS ZBRAN +SIGN10
9FD6 93 85 2D 00 71 93                                        DW      LIT '-' HOLD
9FDC EC 88                                            SIGN10: DW      SEMIS
                                                      
9FDE 81 A3                                            HDIG:   DB      ^1 ^'#'                                 ; ***** #
9FE0 C5 9F                                                    DW      HSIGN
9FE2 B9 8B A2 8D 50 8B B3 99 23 8F                    DIG:    DW      DOCOL BASE AT MSMOD ROT
9FEC 93 85 09 00 2E 8A 06 8F D7 85 08 00                      DW      LIT 9 OVER LESS ZBRAN +DIG10
9FF8 93 85 07 00 A9 89                                        DW      LIT 7 PLUS
9FFE 93 85 30 00 A9 89 71 93 EC 88                    DIG10:  DW      LIT '0' PLUS HOLD SEMIS
                                                      
A008 82 23 D3                                         HDIGS:  DB      ^2 "#" ^'S'                             ; ***** #S
A00B DE 9F                                                    DW      HDIG
A00D B9 8B                                            DIGS:   DW      DOCOL
A00F E2 9F 2E 8A 2E 8A 4E 88 47 89 D7 85 F4 FF        DIGS10: DW      DIG OVER OVER OR ZEQU ZBRAN +DIGS10
A01D EC 88                                                    DW      SEMIS
                                                      
A01F 83 44 2E D2                                      HDDOTR: DB      ^3 "D." ^'R'                            ; ***** D.R
A023 08 A0                                                    DW      HDIGS
A025 B9 8B 1E 89 5F 8A 2E 8A D1 98                    DDOTR:  DW      DOCOL TOR SWAP OVER DABS
A02F A4 9F 0D A0 CC 9F B3 9F                                  DW      BDIGS DIGS SIGN EDIGS
A037 2E 89 2E 8A D2 8E 87 9F B5 91 EC 88                      DW      FROMR OVER SUB SPACS TYPE SEMIS
                                                      
A043 82 2E D2                                         HDOTR:  DB      ^2 "." ^'R'                             ; ***** .R
A046 1F A0                                                    DW      HDDOTR
A048 B9 8B 1E 89 7A 98 2E 89 25 A0 EC 88              DOTR:   DW      DOCOL TOR STOD FROMR DDOTR SEMIS
                                                      
A054 82 44 AE                                         HDDOT:  DB      ^2 "D" ^'.'                             ; ***** D.
A057 43 A0                                                    DW      HDOTR
A059 B9 8B 6E 8C 25 A0 39 8F EC 88                    DDOT:   DW      DOCOL ZERO DDOTR SPACE SEMIS
                                                      
A063 81 AE                                            HDOT:   DB      ^1 ^'.'                                 ; ***** .
A065 54 A0                                                    DW      HDDOT
A067 B9 8B 7A 98 59 A0 EC 88                          DOT:    DW      DOCOL STOD DDOT SEMIS
                                                      
A06F 81 BF                                            HQUEST: DB      ^1 ^'?'                                 ; ***** ?
A071 63 A0                                                    DW      HDOT
A073 B9 8B 50 8B 67 A0 EC 88                          QUEST:  DW      DOCOL AT DOT SEMIS
                                                      
A07B 82 55 AE                                         HUDOT:  DB      ^2 "U" ^'.'                             ; ***** U.
A07E 6F A0                                                    DW      HQUEST
A080 B9 8B 6E 8C 59 A0 EC 88                          UDOT:   DW      DOCOL ZERO DDOT SEMIS
                                                      
                                                      ; ----------------------------------
                                                      ; UTILITY WORDS
                                                      
A088 84 4C 49 53 D4                                   HLIST:  DB      ^4 "LIS" ^'T'                           ; ***** LIST
A08D 7B A0                                                    DW      HUDOT
A08F B9 8B 03 91 A4 9D 77 8A 62 8D 7C 8B 16 92        LIST:   DW      DOCOL DEC CR DUP SCR STORE PDOTQ
A09D 06 53 43 52 20 23 20                                     DB      6 "SCR" 32 "#" 32
A0A4 67 A0 93 85 10 00 6E 8C 6D 86                            DW      DOT LIT 16 ZERO XDO
A0AE A4 9D 7F 86 86 8C 48 A0 39 8F                    LIST10: DW      CR I THREE DOTR SPACE
A0B8 7F 86 62 8D 50 8B 75 9B 58 86 EC FF                      DW      I SCR AT DLINE XLOOP +LIST10
A0C4 A4 9D EC 88                                              DW      CR SEMIS
                                                      
A0C8 85 49 4E 44 45 D8                                HINDEX: DB      ^5 "INDE" ^'X'                          ; ***** INDEX
A0CE 88 A0                                                    DW      HLIST
A0D0 B9 8B A4 9D 3E 8E 5F 8A 6D 86                    INDEX:  DW      DOCOL CR ONEP SWAP XDO
A0DA A4 9D 7F 86 86 8C 48 A0 39 8F 6E 8C 7F 86 75 9B  INDE10: DW      CR I THREE DOTR SPACE ZERO I DLINE
A0EA 8E 9D D7 85 04 00                                        DW      QTERM ZBRAN +INDE20
A0F0 0B 89                                                    DW      LEAVE
A0F2 58 86 E6 FF                                      INDE20: DW      XLOOP +INDE10
A0F6 EC 88                                                    DW      SEMIS
                                                      
A0F8 85 56 4C 49 53 D4                                HVLIST: DB      ^5 "VLIS" ^'T'                          ; ***** VLIST
A0FE C8 A0                                                    DW      HINDEX
A100 B9 8B 93 85 80 00 58 8D 7C 8B 7D 8D 50 8B 50 8B  VLIST:  DW      DOCOL LIT 128 OUT STORE CONT AT AT
A110 58 8D 50 8B 99 8C 93 85 0A 00 D2 8E              VLIS10: DW      OUT AT CL LIT 10 SUB
A11C 15 8F D7 85 0A 00                                        DW      GREAT ZBRAN +VLIS20
A122 A4 9D 6E 8C 58 8D 7C 8B                                  DW      CR ZERO OUT STORE
A12A 77 8A 3A 95 39 8F E7 8F B3 8F 50 8B              VLIS20: DW      DUP IDDOT SPACE PFA LFA AT
A136 77 8A 47 89 8E 9D 4E 88 D7 85 D0 FF                      DW      DUP ZEQU QTERM OR ZBRAN +VLIS10
A142 4A 8A EC 88                                              DW      DROP SEMIS
                                                      
A146 C5 3B 43 4F 44 C5                                HSCODE: DB      ^^5 ";COD" ^'E'                         ; ***** ;CODE
A14C F8 A0                                                    DW      HVLIST
A14E B9 8B 6B 90 A2 90 2D 91 B8 90 DB 90 EC 88        SCODE:  DW      DOCOL QCSP COMP PSCOD LBRAC SMUDG SEMIS
                                                      
A15C 83 42 59 C5                                      HBYE:   DB      ^3 "BY" ^'E'                            ; ***** BYE
A160 46 A1                                                    DW      HSCODE
A162 64 A1                                            BYE:    DW      BYE0
A164 0E 00                                            BYE0:   LDI     0               ; Select EEPROM bank 0
A166 01                                                       BNK                     ; :
A167 14 00 00                                                 JPA     0               ; Re-start monitor
                                                      
A16A C5 46 4F 52 54 C8                                HFORTH: DB      ^^5 "FORT" ^'H'                         ; ***** FORTH
A170 5C A1                                                    DW      HBYE
A172 61 91 0B 97 81 A0 6A A1                          FORTH:  DW      DODOE DOVOC 0xA081 HFORTH
A17A 00 00                                            XXVOC:  DW      0
                                                      
A17C 00                                               XDP:    DB      0
                                                      
                                                      ; INCLUDE         uppermem.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; UPPER MEMORY AREA
                                                      
                                                              ORG     0xF5B9
                                                      
F5B9 00                                               XSP:    DB      0
F5BA 00                                               XTIB:   DB      0
                                                              DS      210             ; TIB:      84
F68D 00                                               XRP:    DB      0               ; RSTACK:  128
F68E 00                                               XUP:    DB      0
                                                              DS      80              ; Room for 40 variables
F6DF 00                                               DSKBF:  DB      0
                                                              DS      2055            ; 2 * 1028 bytes
FEE7 00                                               ENDBF:  DB      0
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; THE VIRTUAL FORTH MACHINE REGISTERS
                                                      
                                                      IP:                             ; Instruction Pointer
FEE8 00                                               IP.0:   DB      0
FEE9 00                                               IP.1:   DB      0
                                                      
                                                      WA:                             ; Word Address Register
FEEA 00                                               WA.0:   DB      0
FEEB 00                                               WA.1:   DB      0
                                                      
                                                      SP:                             ; Data stack pointer
FEEC 00                                               SP.0:   DB      0
FEED 00                                               SP.1:   DB      0
                                                      
                                                      RP:                             ; Return stack pointer
FEEE 00                                               RP.0:   DB      0
FEEF 00                                               RP.1:   DB      0
                                                      
                                                      UP:                             ; User area pointer
FEF0 00                                               UP.0:   DB      0
FEF1 00                                               UP.1:   DB      0
                                                      
                                                      R1:                             ; Working register R1
FEF2 00                                               R1.0:   DB      0
FEF3 00                                               R1.1:   DB      0
                                                      R1H:
FEF4 00                                               R1.2:   DB      0
FEF5 00                                               R1.3:   DB      0
                                                      
                                                      R2:                             ; Working register R2
FEF6 00                                               R2.0:   DB      0
FEF7 00                                               R2.1:   DB      0
                                                      R2H:
FEF8 00                                               R2.2:   DB      0
FEF9 00                                               R2.3:   DB      0
                                                      
                                                      R3:                             ; Working register R3
FEFA 00                                               R3.0:   DB      0
FEFB 00                                               R3.1:   DB      0
                                                      R3H:
FEFC 00                                               R3.2:   DB      0
FEFD 00                                               R3.3:   DB      0
                                                      
FEFE 00                                               BC:     DB      0               ; "Hidden" registers
FEFF 00                                               TMP:    DB      0               ; (used by _AND8 _OR8 _XOR8)
