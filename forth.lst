                                                      ; ----------------------------------------------------------------------
                                                      ; M i n i m a l - F O R T H
                                                      ;
                                                      ; A minimal FORTH for the Minimal-CPU.
                                                      ;
                                                      ; Date:         2021-03-18
                                                      ; Version:      0.1
                                                      ; Author:       Nils "slowcorners" Kullberg
                                                      ; License:      MIT Open Source Initiative
                                                      ; ----------------------------------------------------------------------
                                                      
                                                      
                                                              ORG     0x8000
                                                              
                                                      
                                                      ; INCLUDE         defs.asm
                                                      
                                                      CH_LF   EQU     10
                                                      CH_DEL  EQU     127
                                                      
                                                      ; INCLUDE         boot-table.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; BOOT TABLE
                                                      
8000 14 EF 8C                                         ORIGIN: JPA     CENT            ;  0: COLD start
8003 00                                                       NOP
8004 14 1B 8D                                                 JPA     WENT            ;  4: WARM start
8007 00                                                       NOP
8008 00 00                                                    DW      0               ;  8: Processor type in radix 36
800A 00 00                                                    DW      0               ; 10: Revision
800C 00 00                                                    DW      HFORTH          ; 12: Pointer to latest word defined
800E 7F 00                                                    DW      CH_DEL          ; 14: Backspace character
8010 00 00                                                    DW      XUP             ; 16: Pointer to initial user area
8012 30 89                                                    DW      XSP             ; 18: Initial data stack pointer
8014 40 89                                                    DW      XRP             ; 20: Initial data stack pointer
8016 00 00                                                    DW      XTIB            ; 22: Pointer to terminal input buffer
8018 1F 00                                                    DW      31              ; 24: Maximum FORTH word name length
801A 00 00                                                    DW      0               ; 26: Initial WARNING mode
801C 20 89                                                    DW      XDP             ; 28: Initial FENCE
801E 20 89                                                    DW      XDP             ; 30: Initial HERE
8020 00 00                                                    DW      XXVOC           ; 32: Pointer to initial VOC-LINK
8022 00 00                                                    DW      DSKBF           ; 34: Initial FIRST
8024 00 00                                                    DW      ENDBF           ; 36: Initial LIMIT
8026 00 00                                                    DW      0               ; 38: unused
8028 00 00                                                    DW      0               ; 40: unused
                                                      ; INCLUDE         regs.asm
                                                      
                                                      ; INCLUDE         helpers.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; HELPER FUNCTIONS
                                                      ;
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (IP)+
                                                      
802A 1D 00 89                                         _LIT:   LDR     IP
802D 16 10 89                                                 STA     R1.0
8030 2E 00 89                                                 INW     IP
8033 1D 00 89                                                 LDR     IP
8036 16 11 89                                                 STA     R1.1
8039 2E 00 89                                                 INW     IP
803C 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       IP = IP + (IP)+
                                                      
803D 1D 00 89                                         _BRAN:  LDR     IP
8040 16 10 89                                                 STA     R1.0
8043 2E 00 89                                                 INW     IP
8046 1D 00 89                                                 LDR     IP
8049 16 11 89                                                 STA     R1.1
804C 2F 00 89                                                 DEW     IP
804F 15 10 89                                                 LDA     R1.0
8052 28 00 89                                                 ADB     IP.0
8055 15 11 89                                                 LDA     R1.1
8058 2A 01 89                                                 ACB     IP.1
805B 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (SP) "half function"
                                                      
805C 1D 04 89                                         _GET1_: LDR     SP
805F 16 10 89                                                 STA     R1.0
8062 2E 04 89                                                 INW     SP
8065 1D 04 89                                                 LDR     SP
8068 16 11 89                                                 STA     R1.1
806B 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (SP)
                                                      
806C 38 5C 80                                         _GET1:  JPS     _GET1_
806F 2F 04 89                                                 DEW     SP
8072 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (SP)+
                                                      
8073 38 5C 80                                         _POP1:  JPS     _GET1_
8076 2E 04 89                                                 INW     SP
8079 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1X = (SP)+
                                                      
807A 1D 04 89                                         _DPOP1: LDR     SP
807D 16 10 89                                                 STA     R1.0
8080 2E 04 89                                                 INW     SP
8083 1D 04 89                                                 LDR     SP
8086 16 11 89                                                 STA     R1.1
8089 2E 04 89                                                 INW     SP
808C 1D 04 89                                                 LDR     SP
808F 16 12 89                                                 STA     R1.2
8092 2E 04 89                                                 INW     SP
8095 1D 04 89                                                 LDR     SP
8098 16 13 89                                                 STA     R1.3
809B 2E 04 89                                                 INW     SP
809E 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R2 = (SP) "half function"
                                                      
809F 1D 04 89                                         _GET2_: LDR     SP
80A2 16 14 89                                                 STA     R2.0
80A5 2E 04 89                                                 INW     SP
80A8 1D 04 89                                                 LDR     SP
80AB 16 15 89                                                 STA     R2.1
80AE 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R2 = (SP)
                                                      
80AF 38 9F 80                                         _GET2:  JPS     _GET2_
80B2 2F 04 89                                                 DEW     SP
80B5 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (SP)+
                                                      
80B6 38 9F 80                                         _POP2:  JPS     _GET2_
80B9 2E 04 89                                                 INW     SP
80BC 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R2X = (SP)+
                                                      
80BD 1D 04 89                                         _DPOP2: LDR     SP
80C0 16 14 89                                                 STA     R2.0
80C3 2E 04 89                                                 INW     SP
80C6 1D 04 89                                                 LDR     SP
80C9 16 15 89                                                 STA     R2.1
80CC 2E 04 89                                                 INW     SP
80CF 1D 04 89                                                 LDR     SP
80D2 16 16 89                                                 STA     R2.2
80D5 2E 04 89                                                 INW     SP
80D8 1D 04 89                                                 LDR     SP
80DB 16 17 89                                                 STA     R2.3
80DE 2E 04 89                                                 INW     SP
80E1 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R3 = (SP) "half function"
                                                      
80E2 1D 04 89                                         _GET3_: LDR     SP
80E5 16 18 89                                                 STA     R3.0
80E8 2E 04 89                                                 INW     SP
80EB 1D 04 89                                                 LDR     SP
80EE 16 19 89                                                 STA     R3.1
80F1 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R3 = (SP)
                                                      
80F2 38 E2 80                                         _GET3:  JPS     _GET3_
80F5 2F 04 89                                                 DEW     SP
80F8 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R3 = (SP)+
                                                      
80F9 38 E2 80                                         _POP3:  JPS     _GET3_
80FC 2E 04 89                                                 INW     SP
80FF 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R2 = (SP)+
                                                      ;       R1 = (SP)+
                                                      
8100 38 B6 80                                         _POP21: JPS     _POP2
8103 38 73 80                                                 JPS     _POP1
8106 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (RP) "half function"
                                                      
8107 1D 06 89                                         _RGET1_: LDR    RP
810A 16 10 89                                                 STA     R1.0
810D 2E 06 89                                                 INW     RP
8110 1D 06 89                                                 LDR     RP
8113 16 11 89                                                 STA     R1.1
8116 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (RP)
                                                      
8117 38 07 81                                         _RGET1: JPS     _RGET1_
811A 2F 06 89                                                 DEW     RP
811D 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (RP)+
                                                      
811E 38 07 81                                         _RPOP1: JPS     _RGET1_
8121 2E 06 89                                                 INW     RP
8124 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R2 = (RP) "half function"
                                                      
8125 1D 06 89                                         _RGET2_: LDR    RP
8128 16 14 89                                                 STA     R2.0
812B 2E 06 89                                                 INW     RP
812E 1D 06 89                                                 LDR     RP
8131 16 15 89                                                 STA     R2.1
8134 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R2 = (RP)
                                                      
8135 38 25 81                                         _RGET2: JPS     _RGET2_
8138 2F 06 89                                                 DEW     RP
813B 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (RP)
                                                      
813C 38 25 81                                         _RPOP2: JPS     _RGET2_
813F 2E 06 89                                                 INW     RP
8142 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R3 = (RP) "half function"
                                                      
8143 1D 06 89                                         _RGET3_: LDR    RP
8146 16 18 89                                                 STA     R3.0
8149 2E 06 89                                                 INW     RP
814C 1D 06 89                                                 LDR     RP
814F 16 19 89                                                 STA     R3.1
8152 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R3 = (RP)
                                                      
8153 38 43 81                                         _RGET3: JPS     _RGET3_
8156 2F 06 89                                                 DEW     RP
8159 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R3 = (RP)
                                                      
815A 38 43 81                                         _RPOP3: JPS     _RGET3_
815D 2E 06 89                                                 INW     RP
8160 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (SP) = R1 "half function"
                                                      
8161 15 11 89                                         _PUT1_: LDA     R1.1
8164 1E 04 89                                                 STR     SP
8167 2F 04 89                                                 DEW     SP
816A 15 10 89                                                 LDA     R1.0
816D 1E 04 89                                                 STR     SP
8170 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (SP) = R1
                                                      
8171 2E 04 89                                         _PUT1:  INW     SP
8174 38 61 81                                                 JPS     _PUT1_
8177 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       -(SP) = R1
                                                      
8178 2F 04 89                                         _PUSH1: DEW     SP
817B 38 61 81                                                 JPS     _PUT1_
817E 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (SP) = R2 "half function"
                                                      
817F 15 15 89                                         _PUT2_: LDA     R2.1
8182 1E 04 89                                                 STR     SP
8185 2F 04 89                                                 DEW     SP
8188 15 14 89                                                 LDA     R2.0
818B 1E 04 89                                                 STR     SP
818E 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (SP) = R2
                                                      
818F 2E 04 89                                         _PUT2:  INW     SP
8192 38 7F 81                                                 JPS     _PUT2_
8195 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       -(SP) = R2
                                                      
8196 2F 04 89                                         _PUSH2: DEW     SP
8199 38 7F 81                                                 JPS     _PUT2_
819C 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (SP) = R3 "half function"
                                                      
819D 15 19 89                                         _PUT3_: LDA     R3.1
81A0 1E 04 89                                                 STR     SP
81A3 2F 04 89                                                 DEW     SP
81A6 15 18 89                                                 LDA     R3.0
81A9 1E 04 89                                                 STR     SP
81AC 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (SP) = R3
                                                      
81AD 2E 04 89                                         _PUT3:  INW     SP
81B0 38 9D 81                                                 JPS     _PUT3_
81B3 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       -(SP) = R3
                                                      
81B4 2F 04 89                                         _PUSH3: DEW     SP
81B7 38 9D 81                                                 JPS     _PUT3_
81BA 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (RP) = R1 "half function"
                                                      
81BB 15 11 89                                         _RPUT1_: LDA    R1.1
81BE 1E 06 89                                                 STR     RP
81C1 2F 06 89                                                 DEW     RP
81C4 15 10 89                                                 LDA     R1.0
81C7 1E 06 89                                                 STR     RP
81CA 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (RP) = R1
                                                      
81CB 2E 06 89                                         _RPUT1: INW     RP
81CE 38 BB 81                                                 JPS     _RPUT1_
81D1 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       -(RP) = R1
                                                      
81D2 2F 06 89                                         _RPUSH1: DEW    RP
81D5 38 61 81                                                 JPS     _PUT1_
81D8 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (RP) = R2 "half function"
                                                      
81D9 15 15 89                                         _RPUT2_: LDA    R2.1
81DC 1E 06 89                                                 STR     RP
81DF 2F 06 89                                                 DEW     RP
81E2 15 14 89                                                 LDA     R2.0
81E5 1E 06 89                                                 STR     RP
81E8 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (RP) = R2
                                                      
81E9 2E 06 89                                         _RPUT2: INW     RP
81EC 38 D9 81                                                 JPS     _RPUT2_
81EF 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       -(RP) = R2
                                                      
81F0 2F 06 89                                         _RPUSH2: DEW    RP
81F3 38 D9 81                                                 JPS     _RPUT2_
81F6 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (RP) = R3 "half function"
                                                      
81F7 15 19 89                                         _RPUT3_: LDA    R3.1
81FA 1E 06 89                                                 STR     RP
81FD 2F 06 89                                                 DEW     RP
8200 15 18 89                                                 LDA     R3.0
8203 1E 06 89                                                 STR     RP
8206 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (RP) = R3
                                                      
8207 2E 06 89                                         _RPUT3: INW     RP
820A 38 F7 81                                                 JPS     _RPUT3_
820D 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       -(RP) = R3
                                                      
820E 2F 06 89                                         _RPUSH3: DEW    RP
8211 38 F7 81                                                 JPS     _RPUT3_
8214 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = R1 + R2
                                                      
8215 15 14 89                                         _ADD16: LDA     R2.0
8218 28 10 89                                                 ADB     R1.0
821B 15 15 89                                                 LDA     R2.1
821E 2A 11 89                                                 ACB     R1.1
8221 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1X = R1X + R2X
                                                      
8222 15 14 89                                         _ADD32: LDA     R2.0
8225 28 10 89                                                 ADB     R1.0
8228 15 15 89                                                 LDA     R2.1
822B 2A 11 89                                                 ACB     R1.1
822E 15 16 89                                                 LDA     R2.2
8231 2A 12 89                                                 ACB     R1.2
8234 15 17 89                                                 LDA     R2.3
8237 2A 13 89                                                 ACB     R1.3
823A 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (R3)
                                                      
823B 1D 18 89                                         _LD16:  LDR     R3
823E 16 10 89                                                 STA     R1.0
8241 2E 18 89                                                 INW     R3
8244 1D 18 89                                                 LDR     R3
8247 16 11 89                                                 STA     R1.1
824A 2F 18 89                                                 DEW     R3
824D 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (R3) = R1
                                                      
824E 15 10 89                                         _ST16:  LDA     R1.0
8251 1E 18 89                                                 STR     R3
8254 2E 18 89                                                 INW     R3
8257 15 11 89                                                 LDA     R1.1
825A 1E 18 89                                                 STR     R3
825D 2F 18 89                                                 DEW     R3
8260 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1.0 = R1.0 & R2.0
                                                      
8261 0E 08                                            _AND8:  LDI     8               ; Load bit counter
8263 16 1C 89                                                 STA     BC              ; :
8266 15 14 89                                         _AND81: LDA     R2.0            ; Load second operand
8269 05                                                       LSL                     ; Shift 2b7 into C
826A 16 14 89                                                 STA     R2.0            ; Store shifted second operand
826D 15 10 89                                                 LDA     R1.0            ; Load first operand
8270 3C 79 82                                                 BCC     _AND82          ; If C is clear: Shift in a zero
                                                              ; 2b7 is set
8273 11 00                                                    CPI     0               ; Is first operand < 0, i.e. is 1b7 set?
8275 3F 79 82                                                 BMI     _AND82           ; N is set: 1b7 is set
                                                              ; 1b7 is clear
8278 03                                                       CLC                     ; 1b7 is clear: Clear C
8279 06                                               _AND82: ROL                     ; Shift C into result
827A 16 10 89                                                 STA     R1.0            ; Store first operand/result
827D 27 1C 89                                                 DEB     BC              ; All bits done?
8280 3A 66 82                                                 BNE     _AND81          ;   NO: Do one more
8283 39                                                       RTS                     ;   YES: All done
                                                      
                                                      ; ------------------------------
                                                      ;       R1.0 = R1.0 | R2.0
                                                      
8284 0E 08                                            _OR8:   LDI     8               ; Load bit counter
8286 16 1C 89                                                 STA     BC              ; :
8289 15 14 89                                         _OR810: LDA     R2.0            ; Load second operand
828C 05                                                       LSL                     ; Shift 2b7 into C
828D 16 14 89                                                 STA     R2.0            ; Store shifted second operand
8290 15 10 89                                                 LDA     R1.0            ; Load first operand
8293 3D 9C 82                                                 BCS     _OR820          ; If C is set, shift it into result
                                                              ; 2b7 is clear
8296 11 00                                                    CPI     0               ; Is first operand < 0, i.e. is 1b7 set?
8298 3F 9C 82                                                 BMI     _OR820          ; N is clear: 1b7 is clear
                                                              ; 1b7 is clear
829B 03                                                       CLC                     ; Neither bit is set: Clear C 
829C 06                                               _OR820: ROL                     ; Shift C into result
829D 16 10 89                                                 STA     R1.0            ; Store first operand/result
82A0 27 1C 89                                                 DEB     BC              ; All bits done?
82A3 3A 89 82                                                 BNE     _OR810          ;   NO: Do one more
82A6 39                                                       RTS                     ;   YES: All done
                                                      
                                                      ; ------------------------------
                                                      ;       R1.0 = R1.0 ^ R2.0
                                                      
82A7 0E 08                                            _XOR8:  LDI     8               ; Load bit counter
82A9 16 1C 89                                                 STA     BC              ; :
82AC 15 14 89                                         _XOR81: LDA     R2.0            ; Get second operand
82AF 05                                                       LSL                     ; Shift b7 into C
82B0 16 14 89                                                 STA     R2.0            ; Store shifted second operand
82B3 15 10 89                                                 LDA     R1.0            ; Load first operand
82B6 3D C1 82                                                 BCS     _XOR82          ; C is set, check 1b7 for zero
                                                              ; 2b7 is clear
82B9 11 00                                                    CPI     0               ; Is first operand < 0, i.e. is b7 set?
82BB 3F C7 82                                                 BMI     _XOR84          ; 1b7 is set and 2b7 is clear, shift in C which is set
82BE 14 C6 82                                                 JPA     _XOR83          ; 1b7 and 2b7 are both zero, clear C and shift in 
                                                              ; 2b7 is set, check 1b7 for zero
82C1 11 00                                            _XOR82: CPI     0
82C3 3E C7 82                                                 BPL     _XOR84          ; If 1b7 is zero, shift in C which is set
82C6 03                                               _XOR83: CLC                     ; 1b7 and 2b7 are equal, shift in a zero
82C7 06                                               _XOR84: ROL                     ; Shift whatever is in C into result
82C8 16 10 89                                                 STA     R1.0            ; Store first operand/result
82CB 27 1C 89                                                 DEB     BC              ; All bits done?
82CE 3A AC 82                                                 BNE     _XOR81          ;   NO: Do one more
82D1 39                                                       RTS                     ;   YES: All done
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = ~R1
                                                      
82D2 15 13 89                                         _NOT32: LDA     R1.3            ; Negate MSB
82D5 0B                                                       NEG                     ; Two-complement negation
82D6 10 01                                                    SBI     1               ; Adjust to bitwise not
82D8 16 13 89                                                 STA     R1.3            ; Store negated MSB
82DB 15 12 89                                                 LDA     R1.2            ; Negate byte2
82DE 0B                                                       NEG                     ; Two-complement negation
82DF 10 01                                                    SBI     1               ; Adjust to bitwise not
82E1 16 12 89                                                 STA     R1.2            ; Store negated byte2
82E4 15 11 89                                         _NOT16: LDA     R1.1            ; Negate byte1
82E7 0B                                                       NEG                     ; Two-complement negation
82E8 10 01                                                    SBI     1               ; Adjust to bitwise not
82EA 16 11 89                                                 STA     R1.1            ; Store negated byte1
82ED 15 10 89                                                 LDA     R1.0            ; Negate LSB
82F0 0B                                                       NEG                     ; Two-complement negation
82F1 10 01                                                    SBI     1               ; Adjust to bitwise not
82F3 16 10 89                                                 STA     R1.0            ; Store negated LSB
82F6 39                                                       RTS                     ; Done
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = -R1
                                                      
82F7 38 E4 82                                         _NEG16: JPS     _NOT16          ; Bitwise NOT R1
82FA 0E 01                                                    LDI     1               ; Add one to make it 2-complement
82FC 28 10 89                                                 ADB     R1.0            ; :
82FF 0E 00                                                    LDI     0               ; :
8301 2A 11 89                                                 ACB     R1.1            ; :
8304 39                                                       RTS                     ; Done
                                                      
                                                      ; ------------------------------
                                                      ;       R1X = -R1X
                                                      
8305 38 D2 82                                         _NEG32: JPS     _NOT32          ; Bitwise NOT R1X
8308 0E 01                                                    LDI     1               ; Add one to make it 2-complement
830A 28 10 89                                                 ADB     R1.0            ; :
830D 0D                                                       DEC                     ; :
830E 2A 11 89                                                 ACB     R1.1            ; :
8311 2A 12 89                                                 ACB     R1.2            ; :
8314 2A 13 89                                                 ACB     R1.3            ; :
8317 39                                                       RTS                     ; Done
                                                      
                                                      ; ------------------------------
                                                      ;       R1 <-> R2
                                                      
8318 38 78 81                                         _XCH16: JPS     _PUSH1          ; Temp = R1
831B 15 14 89                                                 LDA     R2.0            ; R1 = R2
831E 16 10 89                                                 STA     R1.0            ; :
8321 15 15 89                                                 LDA     R2.1            ; :
8324 16 11 89                                                 STA     R1.1            ; :
8327 38 B6 80                                                 JPS     _POP2           ; R2 = Temp
832A 39                                                       RTS                     ; Done
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (R1)
                                                      
832B 1D 10 89                                         _AT:    LDR     R1              ; Get LSB
832E 16 12 89                                                 STA     R1.2            ; ... Store temp
8331 2E 10 89                                                 INW     R1              ; Bump
8334 1D 10 89                                                 LDR     R1              ; Get MSB
8337 16 13 89                                                 STA     R1.3            ; ... Store temp
833A 15 12 89                                                 LDA     R1.2            ; Get temp LSB
833D 16 10 89                                                 STA     R1.0            ; ... Store
8340 15 13 89                                                 LDA     R1.3            ; Get temp MSB
8343 16 11 89                                                 STA     R1.1            ; ... Store
8346 39                                                       RTS                     ; Done
                                                      
                                                      ; ------------------------------
                                                      ;       "HALT"
                                                      
8347 49 83                                            _HALT:  DW      _HALT0
8349 14 49 83                                         _HALT0: JPA     _HALT0
                                                      
                                                      ; ------------------------------
                                                      ;       +ORIGIN
                                                      ; NOTE: Index number in R2
                                                      
834C 0E 00                                            _PORIG: LDI     <ORIGIN         ; R1 = ORIGIN address
834E 16 10 89                                                 STA     R1.0            ; :
8351 0E 80                                                    LDI     >ORIGIN         ; :
8353 16 11 89                                                 STA     R1.1            ; :
8356 15 14 89                                                 LDA     R2.0            ; Get index number
8359 30 10 89                                                 ADW     R1              ; Compute addr
835C 39                                                       RTS                     ; Done
                                                      
                                                      ; ------------------------------
                                                      ;       _USER
                                                      ; NOTE: Index number in R2
                                                      
835D 15 08 89                                         _USER:  LDA     UP.0            ; R1 = UP
8360 16 10 89                                                 STA     R1.0            ; :
8363 15 09 89                                                 LDA     UP.1            ; :
8366 16 11 89                                                 STA     R1.1            ; :
8369 15 14 89                                                 LDA     R2.0            ; Get index number
836C 30 10 89                                                 ADW     R1              ; Compute addr
836F 39                                                       RTS                     ; Done
                                                      
                                                      ; ------------------------------
                                                      ;       _SWAP8
                                                      ; Swaps R1.1 <-> R1.0
                                                      ;       R2.1 <-> R2.0
                                                      
8370 15 10 89                                         _SWAP8: LDA     R1.0
8373 16 1D 89                                                 STA     TMP
8376 15 11 89                                                 LDA     R1.1
8379 16 10 89                                                 STA     R1.0
837C 15 1D 89                                                 LDA     TMP
837F 16 11 89                                                 STA     R1.1
8382 15 14 89                                                 LDA     R2.0
8385 16 1D 89                                                 STA     TMP
8388 15 15 89                                                 LDA     R2.1
838B 16 14 89                                                 STA     R2.0
838E 15 1D 89                                                 LDA     TMP
8391 16 15 89                                                 STA     R2.1
8394 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = R1 & R2
                                                      
8395 38 61 82                                         _AND16: JPS     _AND8
8398 38 70 83                                                 JPS     _SWAP8
839B 38 61 82                                                 JPS     _AND8
839E 38 70 83                                                 JPS     _SWAP8
83A1 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = R1 | R2
                                                      
83A2 38 84 82                                         _OR16:  JPS     _OR8
83A5 38 70 83                                                 JPS     _SWAP8
83A8 38 84 82                                                 JPS     _OR8
83AB 38 70 83                                                 JPS     _SWAP8
83AE 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = R1 ^ R2
                                                      
83AF 38 A7 82                                         _XOR16: JPS     _XOR8
83B2 38 70 83                                                 JPS     _SWAP8
83B5 38 A7 82                                                 JPS     _XOR8
83B8 38 70 83                                                 JPS     _SWAP8
83BB 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1X = R1X * R2X
                                                      
83BC 0E 00                                            _UMULT: LDI     0               ; R1H = 0
83BE 16 12 89                                                 STA     R1.2
83C1 16 13 89                                                 STA     R1.3
83C4 16 16 89                                                 STA     R2.2            ; R2H = 0
83C7 16 17 89                                                 STA     R2.3
83CA 16 1A 89                                                 STA     R3.2            ; R3H = 0
83CD 16 1B 89                                                 STA     R3.3
                                                      
83D0 15 10 89                                                 LDA     R1.0            ; R3L = R1L
83D3 16 18 89                                                 STA     R3.0
83D6 15 11 89                                                 LDA     R1.1
83D9 16 19 89                                                 STA     R3.1
                                                      
83DC 0E 00                                                    LDI     0               ; R1L = 0
83DE 16 10 89                                                 STA     R1.0
83E1 16 11 89                                                 STA     R1.1
                                                      
83E4 0E 10                                                    LDI     16              ; Set bit counter
83E6 16 1C 89                                                 STA     BC
                                                      
83E9 15 19 89                                         _UMU10: LDA     R3.1            ; R3L = R3L >> 1
83EC 07                                                       LSR
83ED 16 19 89                                                 STA     R3.1
83F0 15 18 89                                                 LDA     R3.0
83F3 08                                                       ROR
83F4 16 18 89                                                 STA     R3.0
83F7 3C FD 83                                                 BCC     _UMU20
                                                      
83FA 38 22 82                                                 JPS     _ADD32          ; R1X = R1X + R2X
                                                      
83FD 15 14 89                                         _UMU20: LDA     R2.0            ; R2X = R2X << 1
8400 05                                                       LSL
8401 16 14 89                                                 STA     R2.0
8404 15 15 89                                                 LDA     R2.1
8407 06                                                       ROL
8408 16 15 89                                                 STA     R2.1
840B 15 16 89                                                 LDA     R2.2
840E 06                                                       ROL
840F 16 16 89                                                 STA     R2.2
8412 15 17 89                                                 LDA     R2.3
8415 06                                                       ROL
8416 16 17 89                                                 STA     R2.3
                                                      
8419 27 1C 89                                                 DEB     BC
841C 3A E9 83                                                 BNE     _UMU10
841F 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1X / R2L
                                                      ;       R1H: Quotient
                                                      ;       R1L: Remainder
                                                      
8420 0E 10                                            _UDIV:  LDI     16              ; Set bit counter
8422 16 1C 89                                                 STA     BC              ; :
                                                              
8425 15 10 89                                         _UDI10: LDA     R1.0            ; R1X = R1X << 1
8428 05                                                       LSL                     ; :
8429 16 10 89                                                 STA     R1.0            ; :
842C 15 11 89                                                 LDA     R1.1            ; :
842F 06                                                       ROL                     ; :
8430 16 11 89                                                 STA     R1.1            ; :
8433 15 12 89                                                 LDA     R1.2            ; :
8436 06                                                       ROL                     ; :
8437 16 12 89                                                 STA     R1.2            ; :
843A 15 13 89                                                 LDA     R1.3            ; :
843D 06                                                       ROL                     ; :
843E 16 13 89                                                 STA     R1.3            ; :
                                                      
8441 15 12 89                                                 LDA     R1.2            ; R3H = R1H
8444 16 1A 89                                                 STA     R3.2            ; :
8447 15 13 89                                                 LDA     R1.3            ; :
844A 16 1B 89                                                 STA     R3.3            ; :
                                                              
844D 15 1A 89                                                 LDA     R3.2            ; R3H = R3H - R2L
8450 18 14 89                                                 SBA     R2.0            ; :
8453 16 1A 89                                                 STA     R3.2            ; :
8456 15 1B 89                                                 LDA     R3.3            ; :
8459 1B 15 89                                                 SCA     R2.1            ; :
845C 16 1B 89                                                 STA     R3.3            ; :
                                                              
845F 3C 71 84                                                 BCC     _UDI20
                                                              
8462 15 1A 89                                                 LDA     R3.2            ; R1H = R3H
8465 16 12 89                                                 STA     R1.2            ; :
8468 15 1B 89                                                 LDA     R3.3            ; :
846B 16 13 89                                                 STA     R1.3            ; :
                                                              
846E 2E 10 89                                                 INW     R1.0            ; R1L++
                                                              
8471 27 1C 89                                         _UDI20: DEB     BC              ; All bits done?
8474 3A 25 84                                                 BNE     _UDI10          ; NO: Loop again
                                                              
8477 39                                                       RTS
                                                      
                                                      ; INCLUDE         inner.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; INNER INTERPRETER
                                                      
8478 2F 04 89                                         IPUSH:  DEW     SP              ; -(SP) = R1H
847B 15 13 89                                                 LDA     R1.3
847E 1E 04 89                                                 STR     SP
8481 2F 04 89                                                 DEW     SP
8484 15 12 89                                                 LDA     R1.2
8487 1E 04 89                                                 STR     SP
848A 2F 04 89                                         PUSH:   DEW     SP              ; -(SP) = R1L
848D 15 11 89                                                 LDA     R1.1
8490 1E 04 89                                                 STR     SP
8493 2F 04 89                                                 DEW     SP
8496 15 10 89                                                 LDA     R1.0
8499 1E 04 89                                                 STR     SP
849C 1D 00 89                                         NEXT:   LDR     IP              ; WA = (IP)+
849F 16 02 89                                                 STA     WA.0
84A2 2E 00 89                                                 INW     IP
84A5 1D 00 89                                                 LDR     IP
84A8 16 03 89                                                 STA     WA.1
84AB 2E 00 89                                                 INW     IP
84AE 1D 02 89                                         NEXT10: LDR     WA              ; R1 = (WA)+
84B1 16 10 89                                                 STA     R1.0
84B4 2E 02 89                                                 INW     WA
84B7 1D 02 89                                                 LDR     WA
84BA 16 11 89                                                 STA     R1.1
84BD 2E 02 89                                                 INW     WA
84C0 1C 10 89                                                 JPR     R1              ; jump @(R1)
                                                      
                                                      ; ------------------------------
                                                      ;       Push TRUE and FALSE
                                                      
84C3 2C 10 89                                         PUSHT:  CLW     R1              ; A zero
84C6 2F 10 89                                                 DEW     R1              ; Make it into a -1 i.e. TRUE flag
84C9 14 8A 84                                                 JPA     PUSH
                                                      
84CC 2C 10 89                                         PUSHF:  CLW     R1              ; A zero
84CF 14 8A 84                                                 JPA     PUSH
                                                      
                                                      ; ------------------------------
                                                      ;       Push R1X, MSB as TOS
                                                      
84D2 2F 04 89                                         DPUSH:  DEW     SP              ; -(SP) = R1X
84D5 15 11 89                                                 LDA     R1.1
84D8 1E 04 89                                                 STR     SP
84DB 2F 04 89                                                 DEW     SP
84DE 15 10 89                                                 LDA     R1.0
84E1 1E 04 89                                                 STR     SP
84E4 2F 04 89                                                 DEW     SP
84E7 15 13 89                                                 LDA     R1.3
84EA 1E 04 89                                                 STR     SP
84ED 2F 04 89                                                 DEW     SP
84F0 15 12 89                                                 LDA     R1.2
84F3 1E 04 89                                                 STR     SP
84F6 14 9C 84                                                 JPA     NEXT
                                                      
                                                      ; INCLUDE         primaries.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; FORTH PRIMARIES
                                                      ;
                                                      
84F9 83 4C 49 D4                                      HLIT:   DB      ^3 "LI" ^'T'                            ; ***** LIT
84FD 00 00                                                    DW      0
84FF 01 85                                            LIT:    DW      LIT0
8501 38 2A 80                                         LIT0:   JPS     _LIT            ; R1 = (IP)+
8504 14 8A 84                                                 JPA     PUSH            ; -(SP) = R1; NEXT
                                                      
8507 87 45 58 45 43 55 54 C5                          HEXEC:  DB      ^7 "EXECUT" ^'E'                        ; ***** EXECUTE
850F F9 84                                                    DW      HLIT
8511 13 85                                            EXEC:   DW      EXEC0
8513 1D 04 89                                         EXEC0:  LDR     SP              ; WA = (SP)+
8516 16 02 89                                                 STA     WA.0
8519 2E 04 89                                                 INW     SP
851C 1D 04 89                                                 LDR     SP
851F 16 03 89                                                 STA     WA.1
8522 2E 04 89                                                 INW     SP
8525 14 AE 84                                                 JPA     NEXT10          ; jump @(WA)+
                                                      
8528 86 42 52 41 4E 43 C8                             HBRAN:  DB      ^6 "BRANC" ^'H'                         ; ***** BRANCH
852F 07 85                                                    DW      HEXEC
8531 33 85                                            BRAN:   DW      BRAN0
8533 38 3D 80                                         BRAN0:  JPS     _BRAN           ; IP = IP + (IP)
8536 14 9C 84                                                 JPA     NEXT
                                                      
8539 87 30 42 52 41 4E 43 C8                          HZBRAN: DB      ^7 "0BRANC" ^'H'                        ; ***** 0BRANCH
8541 28 85                                                    DW      HBRAN
8543 45 85                                            ZBRAN:  DW      ZBRAN0
8545 1D 04 89                                         ZBRAN0: LDR     SP
8548 11 00                                                    CPI     0               ; Low byte non-zero?
854A 3A 5E 85                                                 BNE     ZBRA10          ; YES: Do not branch
854D 2E 04 89                                                 INW     SP
8550 1D 04 89                                                 LDR     SP
8553 11 00                                                    CPI     0               ; High byte non-zero?
8555 3A 61 85                                                 BNE     ZBRA20          ; YES: Do not branch
8558 2E 04 89                                                 INW     SP
855B 14 33 85                                                 JPA     BRAN0           ; IP = IP + (IP); NEXT
855E 2E 04 89                                         ZBRA10: INW     SP
8561 2E 04 89                                         ZBRA20: INW     SP
8564 2E 00 89                                                 INW     IP              ; Just skip jump offset
8567 2E 00 89                                                 INW     IP
856A 14 9C 84                                                 JPA     NEXT
                                                      
856D 87 28 2B 4C 4F 4F 50 A9                          HXPLOO: DB      ^7 "(+LOOP" ^')'                        ; ***** (+LOOP)
8575 39 85                                                    DW      HZBRAN
8577 79 85                                            XPLOO:  DW      XPLOO0
8579 38 AF 80                                         XPLOO0: JPS     _GET2           ; R2 = (SP) [only copying increment]
857C 38 1E 81                                                 JPS     _RPOP1          ; R1 = (RP)+
857F 38 15 82                                                 JPS     _ADD16          ; R1 = counter'
8582 38 35 81                                                 JPS     _RGET2          ; R2 = limit
8585 38 D2 81                                                 JPS     _RPUSH1         ; -(RP) = R1'
8588 38 F9 80                                                 JPS     _POP3           ; R3 = (SP)+ [now popping incr]
858B 15 19 89                                                 LDA     R3.1            ; Is increment negative?
858E 11 00                                                    CPI     0               ; :
8590 3E 96 85                                                 BPL     XPLO10
                                                              ; Handle negative increment
8593 38 18 83                                                 JPS     _XCH16          ; R1 <-> R2
                                                              ; Compare counter to limit
8596 15 11 89                                         XPLO10: LDA     R1.1            ; Compare MSB
8599 19 15 89                                                 CPA     R2.1            ; :
859C 3F 33 85                                                 BMI     BRAN0           ; R2 is greater, continue looping
859F 3B A5 85                                                 BEQ     XPLO20          ; MSBs are equal, check LSBs
85A2 14 AE 85                                                 JPA     XPLO30          ; R1 is greater, stop looping
                                                              ; MSBs are equal
85A5 15 10 89                                         XPLO20: LDA     R1.0            ; Compare LSB
85A8 19 14 89                                                 CPA     R2.0            
85AB 3F 33 85                                                 BMI     BRAN0           ; R2 is greater, continue looping
                                                              ; Limit reached, cleanup rstack and stop looping
85AE 0E 04                                            XPLO30: LDI     4               ; Drop loop counter ...
85B0 30 06 89                                                 ADW     RP              ; ... and loop limit
85B3 0E 02                                                    LDI     2               ; Skip branch offset
85B5 30 00 89                                                 ADW     IP              ; :
85B8 14 9C 84                                                 JPA     NEXT
                                                      
85BB 86 28 4C 4F 4F 50 A9                             HXLOOP: DB      ^6 "(LOOP" ^')'                         ; ***** (LOOP)
85C2 6D 85                                                    DW      HXPLOO
85C4 C6 85                                            XLOOP:  DW      XLOOP0
85C6 2C 10 89                                         XLOOP0: CLW     R1              ; Push a one
85C9 2E 10 89                                                 INW     R1              ; :
85CC 38 78 81                                                 JPS     _PUSH1          ; :
85CF 14 79 85                                                 JPA     XPLOO0          ; (+LOOP)
                                                      
85D2 84 28 44 4F A9                                   HXDO:   DB      ^4 "(DO" ^')'                           ; ***** (DO)
85D7 BB 85                                                    DW      HXLOOP
85D9 DB 85                                            XDO:    DW      XDO0
85DB 38 B6 80                                         XDO0:   JPS     _POP2           ; Loop counter
85DE 38 73 80                                                 JPS     _POP1           ; Limit
85E1 38 D2 81                                                 JPS     _RPUSH1         ; Push limit onto rstack
85E4 38 F0 81                                                 JPS     _RPUSH2         ; Push loop counter onto rstack
85E7 14 9C 84                                                 JPA     NEXT
                                                      
85EA 81 C9                                            HI:     DB      ^1 ^'I'                                 ; ***** I
85EC D2 85                                                    DW      HXDO
85EE F0 85                                            I:      DW      I0
85F0 38 17 81                                         I0:     JPS     _RGET1          ; Get loop counter
85F3 38 78 81                                                 JPS     _PUSH1          ; Push it onto dstack
85F6 14 9C 84                                                 JPA     NEXT
                                                      
85F9 85 44 49 47 49 D4                                HDIGIT: DB      ^5 "DIGI" ^'T'                          ; ***** DIGIT
85FF EA 85                                                    DW      HI
8601 03 86                                            DIGIT:  DW      DIGIT0
8603 38 00 81                                         DIGIT0: JPS     _POP21          ; R2 = base, R1 = char
8606 15 10 89                                                 LDA     R1.0            ; Get character into A
8609 10 30                                                    SBI     '0'             ; Assume '0' - '9'
860B 3F 27 86                                                 BMI     DIGI88          ; Oops! Negative
860E 11 0A                                                    CPI     10              ; Greater than 9?
8610 3F 15 86                                                 BMI     DIGI10          ; No, it is 0 - 9
                                                              ; 'A' - 'Z' case
8613 10 07                                                    SBI     7               ; ch -= ('A' - '0') + 10
8615 19 14 89                                         DIGI10: CPA     R2.0            ; Greater than base?
8618 3F 1E 86                                                 BMI     DIGI77
861B 14 27 86                                                 JPA     DIGI88
861E 16 10 89                                         DIGI77: STA     R1.0            ; Store binary value
8621 38 78 81                                                 JPS     _PUSH1          ; Push the value
8624 14 C3 84                                                 JPA     PUSHT           ; Push TRUE; NEXT
8627 14 CC 84                                         DIGI88: JPA     PUSHF           ; Push FALSE; NEXT
                                                      
862A 86 28 46 49 4E 44 A9                             HPFIND: DB      ^6 "(FIND" ^')'                         ; ***** (FIND)
8631 F9 85                                                    DW      HDIGIT
8633 35 86                                            PFIND:  DW      PFIND0
8635 38 73 80                                         PFIND0: JPS     _POP1           ; NFA
8638 38 F9 80                                                 JPS     _POP3           ; String address
863B 15 18 89                                         PFIN10: LDA     R3.0            ; R2 = R3 (string address)
863E 16 14 89                                                 STA     R2.0            ; :
8641 15 19 89                                                 LDA     R3.1            ; :
8644 16 15 89                                                 STA     R2.1            ; :
                                                              ; Fast comparison of length bytes
8647 1D 10 89                                                 LDR     R1              ; Get lByte
864A 16 12 89                                                 STA     R1.2            ; ... Store as potential result
864D 05                                                       LSL                     ; lByte &= 0x3F
864E 05                                                       LSL                     ; :
864F 07                                                       LSR                     ; :
8650 07                                                       LSR                     ; :
8651 16 16 89                                                 STA     R2.2            ; R2.2 is counter for string match
8654 21 14 89                                                 CPR     R2              ; lByte == string length?
8657 3A 76 86                                                 BNE     PFIN25
                                                              ; Length bytes match, check names
865A 2E 10 89                                         PFIN20: INW     R1              ; Bump pointers
865D 2E 14 89                                                 INW     R2              ; :
8660 1D 10 89                                                 LDR     R1              ; Get char from dictionary
8663 05                                                       LSL                     ; char &= 0x7F
8664 07                                                       LSR
8665 21 14 89                                                 CPR     R2              ; Is it a match with search string?
8668 3A 79 86                                                 BNE     PFIN30          ; NO: Look at next header in dictionary
866B 27 16 89                                                 DEB     R2.2            ; Decrement character counter
866E 11 00                                                    CPI     0               ; :
8670 3B 9A 86                                                 BEQ     PFIN77          ; YES: This is the word we are looking for
8673 14 5A 86                                                 JPA     PFIN20          ; Match so far, try next char
                                                              ; Step to next header in dictionary
8676 2E 10 89                                         PFIN25: INW     R1              ; Bump NFA pointer to actual characters
8679 2E 10 89                                         PFIN30: INW     R1              ; Bump NFA pointer
867C 27 16 89                                                 DEB     R2.2            ; Decrement character counter
867F 11 00                                                    CPI     0               ; End of name field?
8681 3A 79 86                                                 BNE     PFIN30          ; NO: Step to next char
8684 38 2B 83                                                 JPS     _AT             ; R1 = (R1)
8687 15 11 89                                                 LDA     R1.1            ; At end of dictionary?
868A 11 00                                                    CPI     0               ; :
868C 3A 3B 86                                                 BNE     PFIN10          ; NO: Try this word for match
868F 15 10 89                                                 LDA     R1.0            ; :
8692 11 00                                                    CPI     0               ; :
8694 3A 3B 86                                                 BNE     PFIN10          ; NO: Try this word for match
                                                              ; Word not found, return a single FALSE
8697 14 CC 84                                         PFIN88: JPA     PUSHF           ; Done
                                                              ; Word found, return PFA, lByte, TRUE
869A 0E 05                                            PFIN77: LDI     5               ; Bump ptr to PFA
869C 30 10 89                                                 ADW     R1              ; :
869F 38 78 81                                                 JPS     _PUSH1          ; Push PFA
86A2 15 12 89                                                 LDA     R1.2            ; Get stored length byte
86A5 16 10 89                                                 STA     R1.0            ; :
86A8 24 11 89                                                 CLB     R1.1            ; Clear MSB
86AB 38 78 81                                                 JPS     _PUSH1          ; Push length byte
86AE 14 C3 84                                                 JPA     PUSHT           ; Done
                                                      
86B1 87 45 4E 43 4C 4F 53 C5                          HENCL:  DB      ^7 "ENCLOS" ^'E'                        ; ***** ENCLOSE
86B9 2A 86                                                    DW      HPFIND
86BB BD 86                                            ENCL:   DW      ENCL0
86BD 38 F9 80                                         ENCL0:  JPS     _POP3           ; Get delimiter char
86C0 38 6C 80                                                 JPS     _GET1           ; Get addr of input
86C3 2C 14 89                                                 CLW     R2              ; Initialize char index
                                                              ; Scan preceeding delimiters
86C6 1D 10 89                                         ENCL10: LDR     R1              ; Get char from input
86C9 11 00                                                    CPI     0               ; Is it <NUL>?
86CB 3B 03 87                                                 BEQ     ENCL50          ; YES: <NUL> before first non-delimiter
86CE 19 18 89                                                 CPA     R3.0            ; Is it a delimiter?
86D1 3A DD 86                                                 BNE     ENCL20          ; NO: We have the start of next token
86D4 2E 10 89                                                 INW     R1              ; Bump to next char ...
86D7 26 14 89                                                 INB     R2.0            ; ... also increase index
86DA 14 C6 86                                                 JPA     ENCL10          ; Go back to look at next char
                                                              ; Start of token
86DD 38 96 81                                         ENCL20: JPS     _PUSH2          ; Push result n1 (first char of token)
86E0 1D 10 89                                         ENCL30: LDR     R1              ; Get char from input
86E3 11 00                                                    CPI     0               ; Is it <NUL>?
86E5 3B 12 87                                                 BEQ     ENCL60          ; YES: <NUL> found
86E8 19 18 89                                                 CPA     R3.0            ; Is it a delimiter?
86EB 3B F7 86                                                 BEQ     ENCL40          ; YES: We have the end of the token
86EE 2E 10 89                                                 INW     R1              ; Bump to next char ...
86F1 26 14 89                                                 INB     R2.0            ; ... also increase index
86F4 14 E0 86                                                 JPA     ENCL30          ; Go back to look at next char
                                                              ; End of token
86F7 38 96 81                                         ENCL40: JPS     _PUSH2          ; Push result n2 (ending delimiter)
86FA 26 14 89                                                 INB     R2.0            ; Also push n3 ...
86FD 38 96 81                                                 JPS     _PUSH2          ; : ... (index to first non-scanned char)
8700 14 9C 84                                                 JPA     NEXT            ; Done
                                                              ; <NUL> appears before token
8703 26 14 89                                         ENCL50: INB     R2.0            ; Push i + 1
8706 38 96 81                                                 JPS     _PUSH2          ; :
8709 27 14 89                                                 DEB     R2.0            ; Push i
870C 38 96 81                                                 JPS     _PUSH2          ; : ... indicating <NUL> before token
870F 14 9C 84                                                 JPA     NEXT            ; Done
                                                              ; Token ends with a <NUL>
8712 38 96 81                                         ENCL60: JPS     _PUSH2          ; Push i twice to indicate ...
8715 38 96 81                                                 JPS     _PUSH2          ; : ... that token ends in a <NUL>
8718 14 9C 84                                                 JPA     NEXT            ; Done
                                                      
871B 84 45 4D 49 D4                                   HEMIT:  DB      ^4 "EMI" ^'T'                           ; ***** EMIT
8720 B1 86                                                    DW      HENCL
8722 24 87                                            EMIT:   DW      EMIT0
8724 38 73 80                                         EMIT0:  JPS     _POP1           ; Get character
8727 15 10 89                                                 LDA     R1.0            ; Send char to terminal
872A 02                                                       OUT                     ;
872B 14 9C 84                                                 JPA     NEXT            ; Done
                                                      
872E 83 4B 45 D9                                      HKEY:   DB      ^3 "KE" ^'Y'                            ; ***** KEY
8732 1B 87                                                    DW      HEMIT
8734 36 87                                            KEY:    DW      KEY0
8736 0A                                               KEY0:   INP                     ; Get char form terminal
8737 11 FF                                                    CPI     0xFF            ; Did we get a character?
8739 3B 36 87                                                 BEQ     KEY0            ; NO: Try again
873C 16 10 89                                                 STA     R1.0            ; YES: Push character
873F 24 11 89                                                 CLB     R1.1            ; :
8742 14 8A 84                                                 JPA     PUSH            ; Push R1; NEXT
                                                      
8745 89 3F 54 45 52 4D 49 4E 41 CC                    HQTERM: DB      ^9 "?TERMINA" ^'L'                      ; ***** ?TERMINAL
874F 2E 87                                                    DW      HKEY
8751 53 87                                            QTERM:  DW      QTERM0
8753 2C 10 89                                         QTERM0: CLW     R1              ; Default FALSE to return
8756 0A                                                       INP                     ; Get char from terminal
8757 11 FF                                                    CPI     0xFF            ; Did we get a character?
8759 3B 5F 87                                                 BEQ     QTER10          ; NO: Return FALSE
875C 2F 10 89                                                 DEW     R1              ; Make default FALSE into TRUE
875F 14 8A 84                                         QTER10: JPA     PUSH            ; Push R1; NEXT
                                                      
8762 82 43 D2                                         HCR:    DB      ^2 "C" ^'R'                             ; ***** CR
8765 45 87                                                    DW      HQTERM
8767 69 87                                            CR:     DW      CR0
8769 0E 0A                                            CR0:    LDI     CH_LF           ; Output a linefeed ...
876B 02                                                       OUT                     ; ... to the terminal
876C 14 9C 84                                                 JPA     NEXT            ; Done
                                                      
876F 85 43 4D 4F 56 C5                                HCMOVE: DB      ^5 "CMOV" ^'E'                          ; ***** CMOVE
8775 62 87                                                    DW      HCR
8777 79 87                                            CMOVE:  DW      CMOVE0
8779 38 F9 80                                         CMOVE0: JPS     _POP3           ; R3 = count
877C 38 00 81                                                 JPS     _POP21          ; R2 = dst, R1 = src
877F 1D 10 89                                         CMOV10: LDR     R1              ; Get byte from source
8782 1E 14 89                                                 STR     R2              ; Store to destination
8785 2E 10 89                                                 INW     R1              ; Bump source pointer
8788 2E 14 89                                                 INW     R2              ; Bump destination pointer
878B 2F 18 89                                                 DEW     R3              ; Decrement count
878E 3B 94 87                                                 BEQ     CMOV20          ; Count zero: We are done
8791 14 7F 87                                                 JPA     CMOV10          ; Count non-zero: Next byte
8794 14 9C 84                                         CMOV20: JPA     NEXT            ; Done
                                                      
8797 82 55 AA                                         HUSTAR: DB      ^2 "U" ^'*'                             ; ***** U*
879A 6F 87                                                    DW      HCMOVE
879C 9E 87                                            USTAR:  DW      USTAR0
879E 38 00 81                                         USTAR0: JPS     _POP21          ; R2 = oper2, R1 = oper1
87A1 38 BC 83                                                 JPS     _UMULT          ; u32 = u16 * u16
87A4 14 D2 84                                                 JPA     DPUSH           ; Done
                                                      
87A7 82 55 AF                                         HUSLAS: DB      ^2 "U" ^'/'                             ; ***** U/
87AA 97 87                                                    DW      HUSTAR
87AC AE 87                                            USLAS:  DW      USLAS0
87AE 38 00 81                                         USLAS0: JPS     _POP21          ; R2 = divisor, R1 = dividend-hi
87B1 15 10 89                                                 LDA     R1.0            ; Move high part to R1.2 and R1.3
87B4 16 12 89                                                 STA     R1.2            ; :
87B7 15 11 89                                                 LDA     R1.1            ; :
87BA 16 13 89                                                 STA     R1.3            ; :
87BD 38 73 80                                                 JPS     _POP1           ; dividend, low 16b
87C0 38 20 84                                                 JPS     _UDIV           ; u32 / u16 --> quot_u16, rem_u16
87C3 14 78 84                                                 JPA     IPUSH           ; Push R1H; Push R1L; NEXT
                                                      
87C6 83 41 4E C4                                      HAND:   DB      ^3 "AN" ^'D'                            ; ***** AND
87CA A7 87                                                    DW      HUSLAS
87CC CE 87                                            AND:    DW      AND0
87CE 38 00 81                                         AND0:   JPS     _POP21          ; R2 = oper2, R1 = oper1
87D1 38 95 83                                                 JPS     _AND16          ; R1 = R1 & R2
87D4 14 8A 84                                                 JPA     PUSH            ; Done
                                                      
87D7 82 4F D2                                         HOR:    DB      ^2 "O" ^'R'                             ; ***** OR
87DA C6 87                                                    DW      HAND
87DC DE 87                                            OR:     DW      OR0
87DE 38 00 81                                         OR0:    JPS     _POP21          ; R2 = oper2, R1 = oper1
87E1 38 A2 83                                                 JPS     _OR16           ; R1 = R1 | R2
87E4 14 8A 84                                                 JPA     PUSH            ; Done
                                                      
87E7 83 58 4F D2                                      HXOR:   DB      ^3 "XO" ^'R'                            ; ***** XOR
87EB D7 87                                                    DW      HOR
87ED EF 87                                            XOR:    DW      XOR0
87EF 38 00 81                                         XOR0:   JPS     _POP21          ; R2 = oper2, R1 = oper1
87F2 38 AF 83                                                 JPS     _XOR16          ; R1 = R1 ^ R2
87F5 14 8A 84                                                 JPA     PUSH            ; Done
                                                      
87F8 83 53 50 C0                                      HSPAT:  DB      ^3 "SP" ^'@'                            ; ***** SP@
87FC E7 87                                                    DW      HXOR
87FE 00 88                                            SPAT:   DW      SPAT0
8800 15 04 89                                         SPAT0:  LDA     SP.0            ; Get stack pointer
8803 16 10 89                                                 STA     R1.0            ; : into R1
8806 15 05 89                                                 LDA     SP.1            ; :
8809 16 11 89                                                 STA     R1.1            ; :
880C 14 8A 84                                                 JPA     PUSH            ; Push R1; NEXT
                                                      
880F 83 53 50 A1                                      HSPSTO: DB      ^3 "SP" ^'!'                            ; ***** SP!
8813 F8 87                                                    DW      HSPAT
8815 17 88                                            SPSTO:  DW      SPSTO0
8817 0E 06                                            SPSTO0: LDI     6               ; Index of SP0
8819 16 14 89                                                 STA     R2.0            ; : in USER table
881C 38 5D 83                                                 JPS     _USER           ; R1 = &USER[R2]
881F 38 2B 83                                                 JPS     _AT             ; R1 = (R1)
8822 15 10 89                                                 LDA     R1.0            ; SP = R1
8825 16 04 89                                                 STA     SP.0            ; :
8828 15 11 89                                                 LDA     R1.1            ; :
882B 16 05 89                                                 STA     SP.1            ; :
882E 14 9C 84                                                 JPA     NEXT            ; Done
                                                      
8831 83 52 50 A1                                      HRPSTO: DB      ^3 "RP" ^'!'                            ; ***** RP!
8835 0F 88                                                    DW      HSPSTO
8837 39 88                                            RPSTO:  DW      RPSTO0
8839 0E 18                                            RPSTO0: LDI     24              ; Index of SP0
883B 16 14 89                                                 STA     R2.0            ; : in boot table
883E 38 4C 83                                                 JPS     _PORIG          ; R1 = &bootTable[R2]
8841 38 2B 83                                                 JPS     _AT             ; R1 = XRP
8844 15 10 89                                                 LDA     R1.0            ; SP = R1
8847 16 06 89                                                 STA     RP.0            ; :
884A 15 11 89                                                 LDA     R1.1            ; :
884D 16 07 89                                                 STA     RP.1            ; :
8850 14 9C 84                                                 JPA     NEXT            ; Done
                                                      
8853 82 3B D3                                         HSEMIS: DB      ^2 ";" ^'S'                             ; ***** ;S
8856 31 88                                                    DW      HRPSTO
8858 1D 06 89                                         SEMIS:  LDR     RP              ; IP = (RP)+
885B 16 00 89                                                 STA     IP.0            ; :
885E 2E 06 89                                                 INW     RP              ; :
8861 1D 06 89                                                 LDR     RP              ; :
8864 16 01 89                                                 STA     IP.1            ; :
8867 2E 06 89                                                 INW     RP              ; :
886A 14 9C 84                                                 JPA     NEXT            ; Done
                                                      
886D 85 4C 45 41 56 C5                                HLEAVE: DB      ^5 "LEAV" ^'E'                          ; ***** LEAVE
8873 53 88                                                    DW      HSEMIS
8875 77 88                                            LEAVE:  DW      LEAVE0
8877 38 1E 81                                         LEAVE0: JPS     _RPOP1          ; 2(RP) = (RP)
887A 38 CB 81                                                 JPS     _RPUT1          ; :
887D 38 D2 81                                                 JPS     _RPUSH1         ; :
8880 14 9C 84                                                 JPA     NEXT
                                                      
8883 82 3E D2                                         HTOR:   DB      ^2 ">" ^'R'                             ; ***** >R
8886 6D 88                                                    DW      HLEAVE
8888 8A 88                                            TOR:    DW      TOR0
888A 38 73 80                                         TOR0:   JPS     _POP1           ; -(RP) = (SP)+
888D 38 D2 81                                                 JPS     _RPUSH1         ; :
8890 14 9C 84                                                 JPA     NEXT
                                                      
8893 82 52 BE                                         HFROMR: DB      ^2 "R" ^'>'                             ; ***** R>
8896 83 88                                                    DW      HTOR
8898 9A 88                                            FROMR:  DW      FROMR0
889A 38 1E 81                                         FROMR0: JPS     _RPOP1          ; -(SP) = (RP)+
889D 14 8A 84                                                 JPA     PUSH            ; :
                                                      
88A0 81 D2                                            HR:     DB      ^1 ^'R'                                 ; ***** R
88A2 93 88                                                    DW      HFROMR
88A4 A6 88                                            R:      DW      R0
88A6 38 17 81                                         R0:     JPS     _RGET1          ; -(SP) = (RP)
88A9 14 8A 84                                                 JPA     PUSH            ; :
                                                      
88AC 82 30 BD                                         HZEQU:  DB      ^2 "0" ^'='                             ; ***** 0=
88AF A0 88                                                    DW      HR
88B1 B3 88                                            ZEQU:   DW      ZEQU0
88B3 1D 04 89                                         ZEQU0:  LDR     SP              ; Get low byte
88B6 11 00                                                    CPI     0               ; Is it zero?
88B8 3A CC 88                                                 BNE     ZEQU10          ; NO: Return FALSE
88BB 2E 04 89                                                 INW     SP              ; YES: Have to inspect
88BE 1D 04 89                                                 LDR     SP              ; : high byte as well
88C1 11 00                                                    CPI     0               ; Is it zero?
88C3 3A CF 88                                                 BNE     ZEQU20          ; NO: Return FALSE
88C6 2E 04 89                                                 INW     SP              ; Make POP complete
88C9 14 C3 84                                                 JPA     PUSHT           ; YES: Return TRUE
88CC 2E 04 89                                         ZEQU10: INW     SP              ; POP argument off dstack
88CF 2E 04 89                                         ZEQU20: INW     SP              ; : Make POP complete
88D2 14 CC 84                                                 JPA     PUSHF           ; Return FALSE
                                                      
88D5 82 30 BC                                         HZLESS: DB      ^2 "0" ^'<'                             ; ***** 0<
88D8 AC 88                                                    DW      HZEQU
88DA DC 88                                            ZLESS:  DW      ZLESS0
88DC 2E 04 89                                         ZLESS0: INW     SP              ; Inspect high byte only
88DF 1D 04 89                                                 LDR     SP              ; Get high byte
88E2 11 00                                                    CPI     0               ; Is high byte negative?
88E4 3F ED 88                                                 BMI     ZLES10          ; YES: Return TRUE
88E7 2E 04 89                                                 INW     SP              ; NO: POP high byte also
88EA 14 CC 84                                                 JPA     PUSHF           ; Return FALSE
88ED 2E 04 89                                         ZLES10: INW     SP              ; POP high byte also
88F0 14 C3 84                                                 JPA     PUSHT           ; Return TRUE
                                                      
88F3 81 AB                                            HPLUS:  DB      ^1 ^'+'                                 ; ***** +
88F5 D5 88                                                    DW      HZLESS
88F7 F9 88                                            PLUS:   DW      PLUS0
88F9 38 00 81                                         PLUS0:  JPS     _POP21          ; R2 = oper2, R1 = oper1
88FC 38 15 82                                                 JPS     _ADD16          ; R1 = R1 + R2
88FF 14 00 00                                                 JPA     PUSH            ; -(SP) = R1; NEXT
                                                      
8902 00 00 00                                         HDPLUS: DB      ^2 "D" ^'+'                             ; ***** D+
8905 00 00                                                    DW      HPLUS
8907 00 00                                            DPLUS:  DW      DPLUS0
8909 00 BD 80                                         DPLUS0: JPS     _DPOP2          ; Get second operand
890C 38 7A 80                                                 JPS     _DPOP1          ; Get first operand
890F 38 00 00                                                 JPS     _ADD32          ; R1X = R1X + R2X
8912 00 00 00                                                 JPA     DPUSH           ; -(SP) = R1X; NEXT
                                                      
8915 00 00 00 00 00 00                                HMINUS: DB      ^5 "MINU" ^'S'                          ; ***** MINUS
891B 00 00                                                    DW      HDPLUS
891D 00 89                                            MINUS:  DW      MINUS0
891F 38 00 00                                         MINUS0: JPS     _POP1           ; Get operand
8922 00 00 00                                                 JPS     _NEG16          ; Negate
8925 00 00 00                                                 JPA     PUSH
                                                      
8928 00 00 00 00 00 00 00                             HDMINU: DB      ^6 "DMINU" ^'S'                         ; ***** DMINUS
892F 00 00                                                    DW      HMINUS
8931 00 00                                            DMINU:  DW      DMINU0
8933 00 00 00                                         DMINU0: JPS     _DPOP1          ; Get operand
8936 00 00 00                                                 JPS     _NEG32          ; Negate
8939 00 00 00                                                 JPA     DPUSH
                                                      
893C 00 00 00 00 00                                   HOVER:  DB      ^4 "OVE" ^'R'                           ; **** OVER
8941 00 89                                                    DW      HDMINU
8943 45 89                                            OVER:   DW      OVER0
8945 38 B6 80                                         OVER0:  JPS     _POP2           ; n1 n2 -- n1 n2 n1
8948 38 6C 80                                                 JPS     _GET1           ; :
894B 38 96 81                                                 JPS     _PUSH2          ; :
894E 14 8A 84                                                 JPA     PUSH            ; :
                                                      
8951 84 44 52 4F D0                                   HDROP:  DB      ^4 "DRO" ^'P'                           ; **** DROP
8956 3C 89                                                    DW      HOVER
8958 5A 89                                            DROP:   DW      DROP0
895A 2E 04 89                                         DROP0:  INW     SP              ; n1 --
895D 2E 04 89                                                 INW     SP              ; :
8960 14 9C 84                                                 JPA     NEXT            ; Done
                                                      
8963 84 53 57 41 D0                                   HSWAP:  DB      ^4 "SWA" ^'P'                           ; **** SWAP
8968 51 89                                                    DW      HDROP
896A 45 89                                            SWAP:   DW      OVER0
896C 38 00 81                                         SWAP0:  JPS     _POP21          ; n1 n2 -- n2 n1
896F 38 96 81                                                 JPS     _PUSH2          ; :
8972 14 8A 84                                                 JPA     PUSH            ; :
                                                      
8975 83 44 55 D0                                      HDUP:   DB      ^3 "DU" ^'P'                            ; **** DUP
8979 63 89                                                    DW      HSWAP
897B 7D 89                                            DUP:    DW      DUP0
897D 38 6C 80                                         DUP0:   JPS     _GET1           ; n1 -- n1 n1
8980 14 8A 84                                                 JPA     PUSH            ; :
                                                      
8983 82 2B A1                                         HPSTOR: DB      ^2 "+" ^'!'                             ; ***** +!
8986 75 89                                                    DW      HDUP
8988 89                                               PSTOR:  DB      PSTOR0
8989 38 F9 80                                         PSTOR0: JPS     _POP3           ; R3 = addr
898C 38 B6 80                                                 JPS     _POP2           ; R2 = incr
898F 38 3B 82                                                 JPS     _LD16           ; R1 = (R3)
8992 38 15 82                                                 JPS     _ADD16          ; R1 = R1 + R2
8995 38 4E 82                                                 JPS     _ST16           ; (R3) = R1
8998 14 9C 84                                                 JPA     NEXT            ; Done
                                                      
899B 86 54 4F 47 47 4C C5                             HTOGGL: DB      ^6 "TOGGL" ^'E'                         ; ***** TOGGLE
89A2 83 89                                                    DW      HPSTOR
89A4 A6 89                                            TOGGL:  DW      TOGGL0
89A6 38 B6 80                                         TOGGL0: JPS     _POP2           ; R2 = bit mask
89A9 38 F9 80                                                 JPS     _POP3           ; R3 = addr
89AC 38 3B 82                                                 JPS     _LD16           ; R1 = (R3)
89AF 38 AF 83                                                 JPS     _XOR16          ; R1 = R1 ^ R2
89B2 38 4E 82                                                 JPS     _ST16           ; (R3) = R1
89B5 14 9C 84                                                 JPA     NEXT            ; Done
                                                      
89B8 81 C0                                            HAT:    DB      ^1 ^'@'                                 ; ***** @
89BA 9B 89                                                    DW      HTOGGL
89BC BE 89                                            AT:     DW      AT0
89BE 38 F9 80                                         AT0:    JPS     _POP3           ; R3 = addr
89C1 38 3B 82                                                 JPS     _LD16           ; R1 = (R3)
89C4 14 8A 84                                                 JPA     PUSH            ; -(SP) = R1; NEXT
                                                      
89C7 82 43 C0                                         HCAT:   DB      ^2 "C" ^'@'                             ; ***** C@
89CA B8 89                                                    DW      HAT
89CC CE 89                                            CAT:    DW      CAT0
89CE 2C 10 89                                         CAT0:   CLW     R1              ; R1 = 0
89D1 38 F9 80                                                 JPS     _POP3           ; R3 = addr
89D4 1D 18 89                                                 LDR     R3              ; A = (R3)
89D7 16 10 89                                                 STA     R1.0            ; R1 = A
89DA 14 8A 84                                                 JPA     PUSH            ; -(SP) = R1; NEXT
                                                      
89DD 81 A1                                            HSTORE: DB      ^1 ^'!'                                 ; ***** !
89DF C7 89                                                    DW      HCAT
89E1 E3 89                                            STORE:  DW      STORE0
89E3 38 F9 80                                         STORE0: JPS     _POP3           ; R3 = addr
89E6 38 73 80                                                 JPS     _POP1           ; R1 = data
89E9 38 4E 82                                                 JPS     _ST16           ; (R3) = R1
89EC 14 9C 84                                                 JPA     NEXT            ; Done
                                                      
89EF 82 43 A1                                         HCSTOR: DB      ^2 "C" ^'!'                             ; ***** C!
89F2 DD 89                                                    DW      HSTORE
89F4 F6 89                                            CSTOR:  DW      CSTOR0
89F6 38 F9 80                                         CSTOR0: JPS     _POP3           ; R3 = addr
89F9 38 73 80                                                 JPS     _POP1           ; R1 = data
89FC 15 10 89                                                 LDA     R1.0            ; A = R1.0
89FF 1E 18 89                                                 STR     R3              ; (R3) = A
8A02 14 9C 84                                                 JPA     NEXT            ; Done
                                                      
                                                      ; INCLUDE         precompiled.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; PRECOMPILED FORTH WORDS
                                                      ;
                                                      
8A05 C1 BA                                            HCOLON: DB      ^^1 ^':'                                ; ***** :
8A07 EF 89                                                    DW      HCSTOR
8A09 1D 8A 00 00 00 00 E0 8B BC 89 D2 8B E1 89        COLON:  DW      DOCOL QEXEC SCSP CURR AT CONT STORE
8A17 00 00 00 00 00 00                                        DW      CREAT RBRAC PSCOD
8A1D 2F 06 89                                         DOCOL:  DEW     RP              ; -(RP) = IP
8A20 15 01 89                                                 LDA     IP.1            ; :
8A23 1E 06 89                                                 STR     RP              ; :
8A26 2F 06 89                                                 DEW     RP              ; :
8A29 15 00 89                                                 LDA     IP.0            ; :
8A2C 1E 06 89                                                 STR     RP              ; :
8A2F 15 02 89                                                 LDA     WA.0            ; IP = WA
8A32 16 00 89                                                 STA     IP.0            ; :
8A35 15 03 89                                                 LDA     WA.1            ; :
8A38 16 01 89                                                 STA     IP.1            ; :
8A3B 14 9C 84                                                 JPA     NEXT
                                                      
8A3E C1 BB                                            HSEMI:  DB      ^^1 ^';'                                ; ***** ;
8A40 05 8A                                                    DW      HCOLON
8A42 00 00 00 00 58 88 00 00 00 00 58 88              SEMI:   DW      QCSP COMP SEMIS SMUDG LBRAC SEMIS
                                                      
8A4E 88 43 4F 4E 53 54 41 4E D4                       HCON:   DB      ^8 "CONSTAN" ^'T'                       ; ***** CONSTANT
8A57 3E 8A                                                    DW      HSEMI
8A59 1D 8A 00 00 00 00 7E 8C 00 00                    CON:    DW      DOCOL CREAT SMUDG COMMA PSCOD
8A63 1D 02 89                                         DOCON:  LDR     WA              ; -(SP) = (WA)
8A66 16 10 89                                                 STA     R1.0            ; :
8A69 2E 02 89                                                 INW     WA              ; :
8A6C 1D 02 89                                                 LDR     WA              ; :
8A6F 16 11 89                                                 STA     R1.1            ; :
8A72 2F 02 89                                                 DEW     WA              ; :
8A75 14 8A 84                                                 JPA     PUSH            ; Done
                                                      
8A78 88 56 41 52 49 41 42 4C C5                       HVAR:   DB      ^8 "VARIABL" ^'E'                       ; ***** VARIABLE
8A81 4E 8A                                                    DW      HCON
8A83 1D 8A 59 8A 00 00                                VAR:    DW      DOCOL CON PSCOD
8A89 2F 04 89                                         DOVAR:  DEW     SP              ; -(SP) = WA
8A8C 15 03 89                                                 LDA     WA.1            ; :
8A8F 1E 04 89                                                 STR     SP              ; :
8A92 2F 04 89                                                 DEW     SP              ; :
8A95 15 02 89                                                 LDA     WA.0            ; :
8A98 1E 04 89                                                 STR     SP              ; :
8A9B 14 9C 84                                                 JPA     NEXT            ; Done
                                                      
8A9E 84 55 53 45 D2                                   HUSER:  DB      ^4 "USE" ^'R'                           ; ***** USER
8AA3 78 8A                                                    DW      HVAR
8AA5 1D 8A 59 8A 00 00                                USER:   DW      DOCOL CON PSCOD
8AAB 38 73 80                                         DOUSE:  JPS     _POP1           ; Get index
8AAE 15 10 89                                                 LDA     R1.0            ; Compute UP[index]
8AB1 17 08 89                                                 ADA     UP.0            ; :
8AB4 16 10 89                                                 STA     R1.0            ; :
8AB7 15 11 89                                                 LDA     R1.1            ; :
8ABA 1A 09 89                                                 ACA     UP.1            ; :
8ABD 16 11 89                                                 STA     R1.1            ; :
8AC0 14 8A 84                                                 JPA     PUSH            ; Push address; NEXT
                                                      
                                                      ; ------------------------------
                                                      ; PRECOMPILED CONSTANTS
                                                      
8AC3 81 B0                                            HZERO:  DB      ^1 ^'0'                                 ; ***** 0
8AC5 9E 8A                                                    DW      HUSER
8AC7 63 8A 00 00                                      ZERO:   DW      DOCON 0
                                                      
8ACB 81 B1                                            HONE:   DB      ^1 ^'1'                                 ; ***** 1
8ACD C3 8A                                                    DW      HZERO
8ACF 63 8A 01 00                                      ONE:    DW      DOCON 1
                                                      
8AD3 81 B2                                            HTWO:   DB      ^1 ^'2'                                 ; ***** 2
8AD5 CB 8A                                                    DW      HONE
8AD7 63 8A 02 00                                      TWO:    DW      DOCON 2
                                                      
8ADB 81 B3                                            HTHREE: DB      ^1 ^'3'                                 ; ***** 3
8ADD D3 8A                                                    DW      HTWO
8ADF 63 8A 03 00                                      THREE:  DW      DOCON 3
                                                      
8AE3 82 42 CC                                         HBL:    DB      ^2 "B" ^'L'                             ; ***** BL
8AE6 DB 8A                                                    DW      HTHREE
8AE8 63 8A 20 00                                      BL:     DW      DOCON 32
                                                      
8AEC 83 43 2F CC                                      HCL:    DB      ^3 "C/" ^'L'                            ; ***** C/L
8AF0 E3 8A                                                    DW      HBL
8AF2 63 8A 50 00                                      CL:     DW      DOCON 80
                                                      
8AF6 85 42 2F 42 55 C6                                HBBUF:  DB      ^5 "B/BU" ^'F'                          ; ***** B/BUF
8AFC EC 8A                                                    DW      HCL
8AFE 63 8A 00 04                                      BBUF:   DW      DOCON 1024
                                                      
8B02 85 42 2F 53 43 D2                                HBSCR:  DB      ^5 "B/SC" ^'R'                          ; ***** B/SCR
8B08 F6 8A                                                    DW      HBBUF
8B0A 63 8A 01 00                                      BSCR:   DW      DOCON 1
                                                      
8B0E 87 2B 4F 52 49 47 49 CE                          HPORIG: DB      ^7 "+ORIGI" ^'N'                        ; ***** +ORIGIN
8B16 02 8B                                                    DW      HBSCR
8B18 1D 8A FF 84 00 80 F7 88 58 88                    PORIG:  DW      DOCOL LIT ORIGIN PLUS SEMIS
                                                      
                                                      ; ------------------------------
                                                      ; USER VARIABLES
                                                      
8B22 82 53 B0                                         HSZERO: DB      ^2 "S" ^'0'                             ; ***** S0
8B25 0E 8B                                                    DW      HPORIG
8B27 AB 8A 06 00                                      SZERO:  DW      DOUSE 6
                                                      
8B2B 82 52 B0                                         HRZERO: DB      ^2 "R" ^'0'                             ; ***** R0
8B2E 22 8B                                                    DW      HSZERO
8B30 AB 8A 08 00                                      RZERO:  DW      DOUSE 8
                                                      
8B34 83 54 49 C2                                      HTIB:   DB      ^3 "TI" ^'B'                            ; ***** TIB
8B38 2B 8B                                                    DW      HRZERO
8B3A AB 8A 0A 00                                      TIB:    DW      DOUSE 10
                                                      
8B3E 85 57 49 44 54 C8                                HWIDTH: DB      ^5 "WIDT" ^'H'                          ; ***** WIDTH
8B44 34 8B                                                    DW      HTIB
8B46 AB 8A 0C 00                                      WIDTH:  DW      DOUSE 12
                                                      
8B4A 87 57 41 52 4E 49 4E C7                          HWARN:  DB      ^7 "WARNIN" ^'G'                        ; ***** WARNING
8B52 3E 8B                                                    DW      HWIDTH
8B54 AB 8A 0E 00                                      WARN:   DW      DOUSE 14
                                                      
8B58 85 46 45 4E 43 C5                                HFENCE: DB      ^5 "FENC" ^'E'                          ; ***** FENCE
8B5E 4A 8B                                                    DW      HWARN
8B60 AB 8A 10 00                                      FENCE:  DW      DOUSE 16
                                                      
8B64 82 44 D0                                         HDP:    DB      ^2 "D" ^'P'                             ; ***** DP
8B67 58 8B                                                    DW      HFENCE
8B69 AB 8A 12 00                                      DP:     DW      DOUSE 18
                                                      
8B6D 88 56 4F 43 2D 4C 49 4E CB                       HVOCL:  DB      ^8 "VOC-LIN" ^'K'                       ; ***** VOC-LINK
8B76 64 8B                                                    DW      HDP
8B78 AB 8A 14 00                                      VOCL:   DW      DOUSE 20
                                                      
8B7C 85 46 49 52 53 D4                                HFIRST: DB      ^5 "FIRS" ^'T'                          ; ***** FIRST
8B82 6D 8B                                                    DW      HVOCL
8B84 AB 8A 16 00                                      FIRST:  DW      DOUSE 22
                                                      
8B88 85 4C 49 4D 49 D4                                HLIMIT: DB      ^5 "LIMI" ^'T'                          ; ***** LIMIT
8B8E 7C 8B                                                    DW      HFIRST
8B90 AB 8A 18 00                                      LIMIT:  DW      DOUSE 24
                                                      
8B94 83 42 4C CB                                      HBLK:   DB      ^3 "BL" ^'K'                            ; ***** BLK
8B98 88 8B                                                    DW      HLIMIT
8B9A AB 8A 1E 00                                      BLK:    DW      DOUSE 30
                                                      
8B9E 82 49 C9                                         HIN:    DB      ^2 "I" ^'I'                             ; ***** IN
8BA1 94 8B                                                    DW      HBLK
8BA3 AB 8A 20 00                                      IN:     DW      DOUSE 32
                                                      
8BA7 83 4F 55 D4                                      HOUT:   DB      ^3 "OU" ^'T'                            ; ***** OUT
8BAB 9E 8B                                                    DW      HIN
8BAD AB 8A 22 00                                      OUT:    DW      DOUSE 34
                                                      
8BB1 83 53 43 D2                                      HSCR:   DB      ^3 "SC" ^'R'                            ; ***** SCR
8BB5 A7 8B                                                    DW      HOUT
8BB7 AB 8A 24 00                                      SCR:    DW      DOUSE 36
                                                      
8BBB 86 4F 46 46 53 45 D4                             HOFFSE: DB      ^6 "OFFSE" ^'T'                         ; ***** OFFSET
8BC2 B1 8B                                                    DW      HSCR
8BC4 AB 8A 26 00                                      OFFSE:  DW      DOUSE 38
                                                      
8BC8 87 43 4F 4E 54 45 58 D4                          HCONT:  DB      ^7 "CONTEX" ^'T'                        ; ***** CONTEXT
8BD0 BB 8B                                                    DW      HOFFSE
8BD2 AB 8A 28 00                                      CONT:   DW      DOUSE 40
                                                      
8BD6 87 43 55 52 52 45 4E D4                          HCURR:  DB      ^7 "CURREN" ^'T'                        ; ***** CURRENT
8BDE C8 8B                                                    DW      HCONT
8BE0 AB 8A 2A 00                                      CURR:   DW      DOUSE 42
                                                      
8BE4 85 53 54 41 54 C5                                HSTATE: DB      ^5 "STAT" ^'E'                          ; ***** STATE
8BEA D6 8B                                                    DW      HCURR
8BEC AB 8A 2C 00                                      STATE:  DW      DOUSE 44
                                                      
8BF0 84 42 41 53 C5                                   HBASE:  DB      ^4 "BAS" ^'E'                           ; ***** BASE
8BF5 E4 8B                                                    DW      HSTATE
8BF7 AB 8A 2E 00                                      BASE:   DW      DOUSE 46
                                                      
8BFB 83 44 50 CC                                      HDPL:   DB      ^3 "DP" ^'L'                            ; ***** DPL
8BFF F0 8B                                                    DW      HBASE
8C01 AB 8A 32 00                                      DPL:    DW      DOUSE 50
                                                      
8C05 83 46 4C C4                                      HFLD:   DB      ^3 "FL" ^'D'                            ; ***** FLD
8C09 FB 8B                                                    DW      HDPL
8C0B AB 8A 34 00                                      FLD:    DW      DOUSE 52
                                                      
8C0F 83 43 53 D0                                      HCSP:   DB      ^3 "CS" ^'P'                            ; ***** CSP
8C13 05 8C                                                    DW      HFLD
8C15 AB 8A 34 00                                      CSP:    DW      DOUSE 52
                                                      
8C19 82 52 A3                                         HRNUM:  DB      ^2 "R" ^'#'                             ; ***** R#
8C1C 0F 8C                                                    DW      HCSP
8C1E AB 8A 36 00                                      RNUM:   DW      DOUSE 54
                                                      
8C22 83 48 4C C4                                      HHLD:   DB      ^3 "HL" ^'D'                            ; ***** HLD
8C26 19 8C                                                    DW      HRNUM
8C28 AB 8A 38 00                                      HLD:    DW      DOUSE 56
                                                      
8C2C 83 55 53 C5                                      HUSE:   DB      ^3 "US" ^'E'                            ; ***** USE
8C30 22 8C                                                    DW      HHLD
8C32 AB 8A 3A 00                                      USE:    DW      DOUSE 58
                                                      
8C36 84 50 52 45 D6                                   HPREV:  DB      ^4 "PRE" ^'V'                           ; ***** PREV
8C3B 2C 8C                                                    DW      HUSE
8C3D AB 8A 3C 00                                      PREV:   DW      DOUSE 60
                                                      
                                                      ; END OF USER VARIABLES
                                                      ; ------------------------------
                                                      
8C41 82 31 AB                                         HONEP:  DB      ^2 "1" ^'+'                             ; ***** 1+
8C44 36 8C                                                    DW      HPREV
8C46 1D 8A CF 8A F7 88 58 88                          ONEP:   DW      DOCOL ONE PLUS SEMIS
                                                      
8C4E 82 32 AB                                         HTWOP:  DB      ^2 "2" ^'+'                             ; ***** 2+
8C51 36 8C                                                    DW      HPREV
8C53 1D 8A D7 8A F7 88 58 88                          TWOP:   DW      DOCOL TWO PLUS SEMIS
                                                      
8C5B 84 48 45 52 C5                                   HHERE:  DB      ^4 "HER" ^'E'                           ; ***** HERE
8C60 4E 8C                                                    DW      HTWOP
8C62 1D 8A 69 8B BC 89 58 88                          HERE:   DW      DOCOL DP AT SEMIS
                                                      
8C6A 85 41 4C 4C 4F D4                                HALLOT: DB      ^5 "ALLO" ^'T'                          ; ***** ALLOT
8C70 5B 8C                                                    DW      HHERE
8C72 1D 8A 69 8B 88 89 58 88                          ALLOT:  DW      DOCOL DP PSTOR SEMIS
                                                      
8C7A 81 AC                                            HCOMMA: DB      ^1 ^','                                 ; ***** ,
8C7C 6A 8C                                                    DW      HALLOT
8C7E 1D 8A 62 8C E1 89 D7 8A 72 8C 58 88              COMMA:  DW      DOCOL HERE STORE TWO ALLOT SEMIS
                                                      
8C8A 81 AD                                            HSUB:   DB      ^1 ^'-'                                 ; ***** -
8C8C 7A 8C                                                    DW      HCOMMA
8C8E 1D 8A 1D 89 F7 88 58 88                          SUB:    DW      DOCOL MINUS PLUS SEMIS
                                                      
8C96 81 BD                                            HEQUAL: DB      ^1 ^'='                                 ; ***** =
8C98 8A 8C                                                    DW      HSUB
8C9A 1D 8A 8E 8C B1 88 58 88                          EQUAL:  DW      DOCOL SUB ZEQU SEMIS
                                                      
8CA2 81 BC                                            HLESS:  DB      ^1 ^'<'                                 ; ***** <
8CA4 96 8C                                                    DW      HEQUAL
8CA6 1D 8A 8E 8C DA 88 58 88                          LESS:   DW      DOCOL SUB ZLESS SEMIS
                                                      
8CAE 81 BE                                            HGREAT: DB      ^1 ^'>'                                 ; ***** >
8CB0 A2 8C                                                    DW      HLESS
8CB2 1D 8A 6A 89 A6 8C 58 88                          GREAT:  DW      DOCOL SWAP LESS SEMIS
                                                      
8CBA 83 52 4F D4                                      HROT:   DB      ^3 "RO" ^'T'                            ; ***** ROT
8CBE AE 8C                                                    DW      HGREAT
8CC0 1D 8A 88 88 6A 89 98 88 6A 89 58 88              ROT:    DW      DOCOL TOR SWAP FROMR SWAP SEMIS
                                                      
8CCC 85 53 50 41 43 C5                                HSPACE: DB      ^5 "SPAC" ^'E'                          ; ***** SPACE
8CD2 BA 8C                                                    DW      HROT
8CD4 1D 8A E8 8A 22 87 58 88                          SPACE:  DW      DOCOL BL EMIT SEMIS
                                                      
8CDC 84 2D 44 55 D0                                   HDDUP:  DB      ^4 "-DU" ^'P'                           ; ***** -DUP
8CE1 CC 8C                                                    DW      HSPACE
8CE3 1D 8A 7B 89 43 85 04 00                          DDUP:   DW      DOCOL DUP ZBRAN +DDU10
8CEB 7B 89                                                    DW      DUP
8CED 58 88                                            DDU10:  DW      SEMIS
                                                      
                                                      
                                                      ; INCLUDE         coldwarm.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; COLD AND WARM START ENTRY POINTS
                                                      
8CEF 0E FE                                            CENT:   LDI     0xFE            ; Initialize Minimal stack pointer
8CF1 16 FF FF                                                 STA     0xFFFF          ; :
8CF4 0E 30                                                    LDI     <XSP            ; Initialize FORTH SP
8CF6 16 04 89                                                 STA     SP.0            ; :
8CF9 0E 89                                                    LDI     >XSP            ; :
8CFB 16 05 89                                                 STA     SP.1            ; :
8CFE 0E 0B                                                    LDI     <TEST           ; Initialize FORTH IP
8D00 16 00 89                                                 STA     IP.0            ; :
8D03 0E 8D                                                    LDI     >TEST           ; :
8D05 16 01 89                                                 STA     IP.1            ; :
8D08 14 9C 84                                                 JPA     NEXT            ; ... and over to FORTH VM
                                                      
8D0B FF 84 33 22 FF 84 11 00 FF 84 00 01 AC 87 47 83  TEST:   DW      LIT 0x2233 LIT 0x0011 LIT 0x100 USLAS _HALT
                                                      
8D1B 00                                               WENT:   NOP
                                                      
8D1C 20 20 54 4F 4B 45 4E 00 20 20 00                 STRING: DB      32 32 "TOKEN" 0 32 32 0
                                                      
                                                              ORG     0x8900
                                                      
                                                      ; INCLUDE         regs.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; THE VIRTUAL FORTH MACHINE REGISTERS
                                                      
                                                              ORG     0x8900
                                                      
                                                      IP:                             ; Instruction Pointer
8900 00                                               IP.0:   DB      0
8901 00                                               IP.1:   DB      0
                                                      
                                                      WA:                             ; Word Address Register
8902 00                                               WA.0:   DB      0
8903 00                                               WA.1:   DB      0
                                                      
                                                      SP:                             ; Data stack pointer
8904 00                                               SP.0:   DB      0
8905 00                                               SP.1:   DB      0
                                                      
                                                      RP:                             ; Return stack pointer
8906 00                                               RP.0:   DB      0
8907 00                                               RP.1:   DB      0
                                                      
                                                      UP:                             ; User area pointer
8908 00                                               UP.0:   DB      0
8909 00                                               UP.1:   DB      0
                                                      
                                                              ORG     0x8910
                                                      
                                                      R1:                             ; Working register R1
8910 00                                               R1.0:   DB      0
8911 00                                               R1.1:   DB      0
                                                      R1H:
8912 00                                               R1.2:   DB      0
8913 00                                               R1.3:   DB      0
                                                      
                                                      R2:                             ; Working register R2
8914 00                                               R2.0:   DB      0
8915 00                                               R2.1:   DB      0
                                                      R2H:
8916 00                                               R2.2:   DB      0
8917 00                                               R2.3:   DB      0
                                                      
                                                      R3:                             ; Working register R3
8918 00                                               R3.0:   DB      0
8919 00                                               R3.1:   DB      0
                                                      R3H:
891A 00                                               R3.2:   DB      0
891B 00                                               R3.3:   DB      0
                                                      
891C 00                                               BC:     DB      0               ; "Hidden" registers
891D 00                                               TMP:    DB      0               ; (used by _AND8 _OR8 _XOR8)
                                                      
                                                              ORG     0x8920
8920 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  XDP:    DW      0 0 0 0 0 0 0 0    
8930 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  XSP:    DW      0 0 0 0 0 0 0 0
8940 00 00                                            XRP:    DW      0
