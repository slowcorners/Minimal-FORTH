                                                      ; ----------------------------------------------------------------------
                                                      ; M i n i m a l - F O R T H
                                                      ;
                                                      ; A minimal FORTH for the Minimal-CPU.
                                                      ;
                                                      ; Date:         2021-03-18
                                                      ; Version:      0.1
                                                      ; Author:       Nils "slowcorners" Kullberg
                                                      ; License:      MIT Open Source Initiative
                                                      ; ----------------------------------------------------------------------
                                                      
                                                      
                                                              ORG     0x8000
                                                              
                                                      
                                                      ; INCLUDE         defs.asm
                                                      
                                                      CH_BSP  EQU     8
                                                      CH_LF   EQU     10
                                                      CH_DEL  EQU     127
                                                      
                                                      ; INCLUDE         boot-table.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; BOOT TABLE
                                                      
8000 14 45 93                                         ORIGIN: JPA     CENT            ;  0: COLD start
8003 00                                                       NOP
8004 14 85 93                                                 JPA     WENT            ;  4: WARM start
8007 00                                                       NOP
8008 00 00                                                    DW      0               ;  8: Processor type in radix 36
800A 00 00                                                    DW      0               ; 10: Revision
800C 00 00                                                    DW      HFORTH          ; 12: Pointer to latest word defined
800E 7F 00                                                    DW      CH_DEL          ; 14: Backspace character
8010 00 00                                                    DW      XUP             ; 16: Pointer to initial user area
8012 30 D0                                                    DW      XSP             ; 18: Initial data stack pointer
8014 40 D0                                                    DW      XRP             ; 20: Initial data stack pointer
8016 00 00                                                    DW      XTIB            ; 22: Pointer to terminal input buffer
8018 1F 00                                                    DW      31              ; 24: Maximum FORTH word name length
801A 00 00                                                    DW      0               ; 26: Initial WARNING mode
801C 20 D0                                                    DW      XDP             ; 28: Initial FENCE
801E 20 D0                                                    DW      XDP             ; 30: Initial HERE
8020 00 00                                                    DW      XXVOC           ; 32: Pointer to initial VOC-LINK
8022 00 00                                                    DW      DSKBF           ; 34: Initial FIRST
8024 00 00                                                    DW      ENDBF           ; 36: Initial LIMIT
8026 00 00                                                    DW      0               ; 38: unused
8028 00 00                                                    DW      0               ; 40: unused
                                                      ; INCLUDE         regs.asm
                                                      
                                                      ; INCLUDE         helpers.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; HELPER FUNCTIONS
                                                      ;
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (IP)+
                                                      
802A 1D 00 D0                                         _LIT:   LDR     IP
802D 16 10 D0                                                 STA     R1.0
8030 2E 00 D0                                                 INW     IP
8033 1D 00 D0                                                 LDR     IP
8036 16 11 D0                                                 STA     R1.1
8039 2E 00 D0                                                 INW     IP
803C 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       IP = IP + (IP)+
                                                      
803D 1D 00 D0                                         _BRAN:  LDR     IP
8040 16 10 D0                                                 STA     R1.0
8043 2E 00 D0                                                 INW     IP
8046 1D 00 D0                                                 LDR     IP
8049 16 11 D0                                                 STA     R1.1
804C 2F 00 D0                                                 DEW     IP
804F 15 10 D0                                                 LDA     R1.0
8052 28 00 D0                                                 ADB     IP.0
8055 15 11 D0                                                 LDA     R1.1
8058 2A 01 D0                                                 ACB     IP.1
805B 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (SP) "half function"
                                                      
805C 1D 04 D0                                         _GET1_: LDR     SP
805F 16 10 D0                                                 STA     R1.0
8062 2E 04 D0                                                 INW     SP
8065 1D 04 D0                                                 LDR     SP
8068 16 11 D0                                                 STA     R1.1
806B 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (SP)
                                                      
806C 38 5C 80                                         _GET1:  JPS     _GET1_
806F 2F 04 D0                                                 DEW     SP
8072 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (SP)+
                                                      
8073 38 5C 80                                         _POP1:  JPS     _GET1_
8076 2E 04 D0                                                 INW     SP
8079 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1X = (SP)+
                                                      
807A 1D 04 D0                                         _DPOP1: LDR     SP
807D 16 10 D0                                                 STA     R1.0
8080 2E 04 D0                                                 INW     SP
8083 1D 04 D0                                                 LDR     SP
8086 16 11 D0                                                 STA     R1.1
8089 2E 04 D0                                                 INW     SP
808C 1D 04 D0                                                 LDR     SP
808F 16 12 D0                                                 STA     R1.2
8092 2E 04 D0                                                 INW     SP
8095 1D 04 D0                                                 LDR     SP
8098 16 13 D0                                                 STA     R1.3
809B 2E 04 D0                                                 INW     SP
809E 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R2 = (SP) "half function"
                                                      
809F 1D 04 D0                                         _GET2_: LDR     SP
80A2 16 14 D0                                                 STA     R2.0
80A5 2E 04 D0                                                 INW     SP
80A8 1D 04 D0                                                 LDR     SP
80AB 16 15 D0                                                 STA     R2.1
80AE 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R2 = (SP)
                                                      
80AF 38 9F 80                                         _GET2:  JPS     _GET2_
80B2 2F 04 D0                                                 DEW     SP
80B5 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (SP)+
                                                      
80B6 38 9F 80                                         _POP2:  JPS     _GET2_
80B9 2E 04 D0                                                 INW     SP
80BC 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R2X = (SP)+
                                                      
80BD 1D 04 D0                                         _DPOP2: LDR     SP
80C0 16 14 D0                                                 STA     R2.0
80C3 2E 04 D0                                                 INW     SP
80C6 1D 04 D0                                                 LDR     SP
80C9 16 15 D0                                                 STA     R2.1
80CC 2E 04 D0                                                 INW     SP
80CF 1D 04 D0                                                 LDR     SP
80D2 16 16 D0                                                 STA     R2.2
80D5 2E 04 D0                                                 INW     SP
80D8 1D 04 D0                                                 LDR     SP
80DB 16 17 D0                                                 STA     R2.3
80DE 2E 04 D0                                                 INW     SP
80E1 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R3 = (SP) "half function"
                                                      
80E2 1D 04 D0                                         _GET3_: LDR     SP
80E5 16 18 D0                                                 STA     R3.0
80E8 2E 04 D0                                                 INW     SP
80EB 1D 04 D0                                                 LDR     SP
80EE 16 19 D0                                                 STA     R3.1
80F1 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R3 = (SP)
                                                      
80F2 38 E2 80                                         _GET3:  JPS     _GET3_
80F5 2F 04 D0                                                 DEW     SP
80F8 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R3 = (SP)+
                                                      
80F9 38 E2 80                                         _POP3:  JPS     _GET3_
80FC 2E 04 D0                                                 INW     SP
80FF 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R2 = (SP)+
                                                      ;       R1 = (SP)+
                                                      
8100 38 B6 80                                         _POP21: JPS     _POP2
8103 38 73 80                                                 JPS     _POP1
8106 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (RP) "half function"
                                                      
8107 1D 06 D0                                         _RGET1_: LDR    RP
810A 16 10 D0                                                 STA     R1.0
810D 2E 06 D0                                                 INW     RP
8110 1D 06 D0                                                 LDR     RP
8113 16 11 D0                                                 STA     R1.1
8116 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (RP)
                                                      
8117 38 07 81                                         _RGET1: JPS     _RGET1_
811A 2F 06 D0                                                 DEW     RP
811D 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (RP)+
                                                      
811E 38 07 81                                         _RPOP1: JPS     _RGET1_
8121 2E 06 D0                                                 INW     RP
8124 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R2 = (RP) "half function"
                                                      
8125 1D 06 D0                                         _RGET2_: LDR    RP
8128 16 14 D0                                                 STA     R2.0
812B 2E 06 D0                                                 INW     RP
812E 1D 06 D0                                                 LDR     RP
8131 16 15 D0                                                 STA     R2.1
8134 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R2 = (RP)
                                                      
8135 38 25 81                                         _RGET2: JPS     _RGET2_
8138 2F 06 D0                                                 DEW     RP
813B 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (RP)
                                                      
813C 38 25 81                                         _RPOP2: JPS     _RGET2_
813F 2E 06 D0                                                 INW     RP
8142 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R3 = (RP) "half function"
                                                      
8143 1D 06 D0                                         _RGET3_: LDR    RP
8146 16 18 D0                                                 STA     R3.0
8149 2E 06 D0                                                 INW     RP
814C 1D 06 D0                                                 LDR     RP
814F 16 19 D0                                                 STA     R3.1
8152 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R3 = (RP)
                                                      
8153 38 43 81                                         _RGET3: JPS     _RGET3_
8156 2F 06 D0                                                 DEW     RP
8159 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R3 = (RP)
                                                      
815A 38 43 81                                         _RPOP3: JPS     _RGET3_
815D 2E 06 D0                                                 INW     RP
8160 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (SP) = R1 "half function"
                                                      
8161 15 11 D0                                         _PUT1_: LDA     R1.1
8164 1E 04 D0                                                 STR     SP
8167 2F 04 D0                                                 DEW     SP
816A 15 10 D0                                                 LDA     R1.0
816D 1E 04 D0                                                 STR     SP
8170 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (SP) = R1
                                                      
8171 2E 04 D0                                         _PUT1:  INW     SP
8174 38 61 81                                                 JPS     _PUT1_
8177 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       -(SP) = R1
                                                      
8178 2F 04 D0                                         _PUSH1: DEW     SP
817B 38 61 81                                                 JPS     _PUT1_
817E 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (SP) = R2 "half function"
                                                      
817F 15 15 D0                                         _PUT2_: LDA     R2.1
8182 1E 04 D0                                                 STR     SP
8185 2F 04 D0                                                 DEW     SP
8188 15 14 D0                                                 LDA     R2.0
818B 1E 04 D0                                                 STR     SP
818E 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (SP) = R2
                                                      
818F 2E 04 D0                                         _PUT2:  INW     SP
8192 38 7F 81                                                 JPS     _PUT2_
8195 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       -(SP) = R2
                                                      
8196 2F 04 D0                                         _PUSH2: DEW     SP
8199 38 7F 81                                                 JPS     _PUT2_
819C 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (SP) = R3 "half function"
                                                      
819D 15 19 D0                                         _PUT3_: LDA     R3.1
81A0 1E 04 D0                                                 STR     SP
81A3 2F 04 D0                                                 DEW     SP
81A6 15 18 D0                                                 LDA     R3.0
81A9 1E 04 D0                                                 STR     SP
81AC 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (SP) = R3
                                                      
81AD 2E 04 D0                                         _PUT3:  INW     SP
81B0 38 9D 81                                                 JPS     _PUT3_
81B3 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       -(SP) = R3
                                                      
81B4 2F 04 D0                                         _PUSH3: DEW     SP
81B7 38 9D 81                                                 JPS     _PUT3_
81BA 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (RP) = R1 "half function"
                                                      
81BB 15 11 D0                                         _RPUT1_: LDA    R1.1
81BE 1E 06 D0                                                 STR     RP
81C1 2F 06 D0                                                 DEW     RP
81C4 15 10 D0                                                 LDA     R1.0
81C7 1E 06 D0                                                 STR     RP
81CA 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (RP) = R1
                                                      
81CB 2E 06 D0                                         _RPUT1: INW     RP
81CE 38 BB 81                                                 JPS     _RPUT1_
81D1 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       -(RP) = R1
                                                      
81D2 2F 06 D0                                         _RPUSH1: DEW    RP
81D5 38 BB 81                                                 JPS     _RPUT1_
81D8 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (RP) = R2 "half function"
                                                      
81D9 15 15 D0                                         _RPUT2_: LDA    R2.1
81DC 1E 06 D0                                                 STR     RP
81DF 2F 06 D0                                                 DEW     RP
81E2 15 14 D0                                                 LDA     R2.0
81E5 1E 06 D0                                                 STR     RP
81E8 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (RP) = R2
                                                      
81E9 2E 06 D0                                         _RPUT2: INW     RP
81EC 38 D9 81                                                 JPS     _RPUT2_
81EF 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       -(RP) = R2
                                                      
81F0 2F 06 D0                                         _RPUSH2: DEW    RP
81F3 38 D9 81                                                 JPS     _RPUT2_
81F6 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (RP) = R3 "half function"
                                                      
81F7 15 19 D0                                         _RPUT3_: LDA    R3.1
81FA 1E 06 D0                                                 STR     RP
81FD 2F 06 D0                                                 DEW     RP
8200 15 18 D0                                                 LDA     R3.0
8203 1E 06 D0                                                 STR     RP
8206 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (RP) = R3
                                                      
8207 2E 06 D0                                         _RPUT3: INW     RP
820A 38 F7 81                                                 JPS     _RPUT3_
820D 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       -(RP) = R3
                                                      
820E 2F 06 D0                                         _RPUSH3: DEW    RP
8211 38 F7 81                                                 JPS     _RPUT3_
8214 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = R1 + R2
                                                      
8215 15 14 D0                                         _ADD16: LDA     R2.0
8218 28 10 D0                                                 ADB     R1.0
821B 15 15 D0                                                 LDA     R2.1
821E 2A 11 D0                                                 ACB     R1.1
8221 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1X = R1X + R2X
                                                      
8222 15 14 D0                                         _ADD32: LDA     R2.0
8225 28 10 D0                                                 ADB     R1.0
8228 15 15 D0                                                 LDA     R2.1
822B 2A 11 D0                                                 ACB     R1.1
822E 15 16 D0                                                 LDA     R2.2
8231 2A 12 D0                                                 ACB     R1.2
8234 15 17 D0                                                 LDA     R2.3
8237 2A 13 D0                                                 ACB     R1.3
823A 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (R3)
                                                      
823B 1D 18 D0                                         _LD16:  LDR     R3
823E 16 10 D0                                                 STA     R1.0
8241 2E 18 D0                                                 INW     R3
8244 1D 18 D0                                                 LDR     R3
8247 16 11 D0                                                 STA     R1.1
824A 2F 18 D0                                                 DEW     R3
824D 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       (R3) = R1
                                                      
824E 15 10 D0                                         _ST16:  LDA     R1.0
8251 1E 18 D0                                                 STR     R3
8254 2E 18 D0                                                 INW     R3
8257 15 11 D0                                                 LDA     R1.1
825A 1E 18 D0                                                 STR     R3
825D 2F 18 D0                                                 DEW     R3
8260 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1.0 = R1.0 & R2.0
                                                      
8261 0E 08                                            _AND8:  LDI     8               ; Load bit counter
8263 16 1C D0                                                 STA     BC              ; :
8266 15 14 D0                                         _AND81: LDA     R2.0            ; Load second operand
8269 05                                                       LSL                     ; Shift 2b7 into C
826A 16 14 D0                                                 STA     R2.0            ; Store shifted second operand
826D 15 10 D0                                                 LDA     R1.0            ; Load first operand
8270 3C 79 82                                                 BCC     _AND82          ; If C is clear: Shift in a zero
                                                              ; 2b7 is set
8273 11 00                                                    CPI     0               ; Is first operand < 0, i.e. is 1b7 set?
8275 3F 79 82                                                 BMI     _AND82           ; N is set: 1b7 is set
                                                              ; 1b7 is clear
8278 03                                                       CLC                     ; 1b7 is clear: Clear C
8279 06                                               _AND82: ROL                     ; Shift C into result
827A 16 10 D0                                                 STA     R1.0            ; Store first operand/result
827D 27 1C D0                                                 DEB     BC              ; All bits done?
8280 3A 66 82                                                 BNE     _AND81          ;   NO: Do one more
8283 39                                                       RTS                     ;   YES: All done
                                                      
                                                      ; ------------------------------
                                                      ;       R1.0 = R1.0 | R2.0
                                                      
8284 0E 08                                            _OR8:   LDI     8               ; Load bit counter
8286 16 1C D0                                                 STA     BC              ; :
8289 15 14 D0                                         _OR810: LDA     R2.0            ; Load second operand
828C 05                                                       LSL                     ; Shift 2b7 into C
828D 16 14 D0                                                 STA     R2.0            ; Store shifted second operand
8290 15 10 D0                                                 LDA     R1.0            ; Load first operand
8293 3D 9C 82                                                 BCS     _OR820          ; If C is set, shift it into result
                                                              ; 2b7 is clear
8296 11 00                                                    CPI     0               ; Is first operand < 0, i.e. is 1b7 set?
8298 3F 9C 82                                                 BMI     _OR820          ; N is clear: 1b7 is clear
                                                              ; 1b7 is clear
829B 03                                                       CLC                     ; Neither bit is set: Clear C 
829C 06                                               _OR820: ROL                     ; Shift C into result
829D 16 10 D0                                                 STA     R1.0            ; Store first operand/result
82A0 27 1C D0                                                 DEB     BC              ; All bits done?
82A3 3A 89 82                                                 BNE     _OR810          ;   NO: Do one more
82A6 39                                                       RTS                     ;   YES: All done
                                                      
                                                      ; ------------------------------
                                                      ;       R1.0 = R1.0 ^ R2.0
                                                      
82A7 0E 08                                            _XOR8:  LDI     8               ; Load bit counter
82A9 16 1C D0                                                 STA     BC              ; :
82AC 15 14 D0                                         _XOR81: LDA     R2.0            ; Get second operand
82AF 05                                                       LSL                     ; Shift b7 into C
82B0 16 14 D0                                                 STA     R2.0            ; Store shifted second operand
82B3 15 10 D0                                                 LDA     R1.0            ; Load first operand
82B6 3D C1 82                                                 BCS     _XOR82          ; C is set, check 1b7 for zero
                                                              ; 2b7 is clear
82B9 11 00                                                    CPI     0               ; Is first operand < 0, i.e. is b7 set?
82BB 3F C7 82                                                 BMI     _XOR84          ; 1b7 is set and 2b7 is clear, shift in C which is set
82BE 14 C6 82                                                 JPA     _XOR83          ; 1b7 and 2b7 are both zero, clear C and shift in 
                                                              ; 2b7 is set, check 1b7 for zero
82C1 11 00                                            _XOR82: CPI     0
82C3 3E C7 82                                                 BPL     _XOR84          ; If 1b7 is zero, shift in C which is set
82C6 03                                               _XOR83: CLC                     ; 1b7 and 2b7 are equal, shift in a zero
82C7 06                                               _XOR84: ROL                     ; Shift whatever is in C into result
82C8 16 10 D0                                                 STA     R1.0            ; Store first operand/result
82CB 27 1C D0                                                 DEB     BC              ; All bits done?
82CE 3A AC 82                                                 BNE     _XOR81          ;   NO: Do one more
82D1 39                                                       RTS                     ;   YES: All done
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = ~R1
                                                      
82D2 15 13 D0                                         _NOT32: LDA     R1.3            ; Negate MSB
82D5 0B                                                       NEG                     ; Two-complement negation
82D6 10 01                                                    SBI     1               ; Adjust to bitwise not
82D8 16 13 D0                                                 STA     R1.3            ; Store negated MSB
82DB 15 12 D0                                                 LDA     R1.2            ; Negate byte2
82DE 0B                                                       NEG                     ; Two-complement negation
82DF 10 01                                                    SBI     1               ; Adjust to bitwise not
82E1 16 12 D0                                                 STA     R1.2            ; Store negated byte2
82E4 15 11 D0                                         _NOT16: LDA     R1.1            ; Negate byte1
82E7 0B                                                       NEG                     ; Two-complement negation
82E8 10 01                                                    SBI     1               ; Adjust to bitwise not
82EA 16 11 D0                                                 STA     R1.1            ; Store negated byte1
82ED 15 10 D0                                                 LDA     R1.0            ; Negate LSB
82F0 0B                                                       NEG                     ; Two-complement negation
82F1 10 01                                                    SBI     1               ; Adjust to bitwise not
82F3 16 10 D0                                                 STA     R1.0            ; Store negated LSB
82F6 39                                                       RTS                     ; Done
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = -R1
                                                      
82F7 38 E4 82                                         _NEG16: JPS     _NOT16          ; Bitwise NOT R1
82FA 0E 01                                                    LDI     1               ; Add one to make it 2-complement
82FC 28 10 D0                                                 ADB     R1.0            ; :
82FF 0E 00                                                    LDI     0               ; :
8301 2A 11 D0                                                 ACB     R1.1            ; :
8304 39                                                       RTS                     ; Done
                                                      
                                                      ; ------------------------------
                                                      ;       R1X = -R1X
                                                      
8305 38 D2 82                                         _NEG32: JPS     _NOT32          ; Bitwise NOT R1X
8308 0E 01                                                    LDI     1               ; Add one to make it 2-complement
830A 28 10 D0                                                 ADB     R1.0            ; :
830D 0D                                                       DEC                     ; :
830E 2A 11 D0                                                 ACB     R1.1            ; :
8311 2A 12 D0                                                 ACB     R1.2            ; :
8314 2A 13 D0                                                 ACB     R1.3            ; :
8317 39                                                       RTS                     ; Done
                                                      
                                                      ; ------------------------------
                                                      ;       R1 <-> R2
                                                      
8318 38 78 81                                         _XCH16: JPS     _PUSH1          ; Temp = R1
831B 15 14 D0                                                 LDA     R2.0            ; R1 = R2
831E 16 10 D0                                                 STA     R1.0            ; :
8321 15 15 D0                                                 LDA     R2.1            ; :
8324 16 11 D0                                                 STA     R1.1            ; :
8327 38 B6 80                                                 JPS     _POP2           ; R2 = Temp
832A 39                                                       RTS                     ; Done
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = (R1)
                                                      
832B 1D 10 D0                                         _AT:    LDR     R1              ; Get LSB
832E 16 12 D0                                                 STA     R1.2            ; ... Store temp
8331 2E 10 D0                                                 INW     R1              ; Bump
8334 1D 10 D0                                                 LDR     R1              ; Get MSB
8337 16 13 D0                                                 STA     R1.3            ; ... Store temp
833A 15 12 D0                                                 LDA     R1.2            ; Get temp LSB
833D 16 10 D0                                                 STA     R1.0            ; ... Store
8340 15 13 D0                                                 LDA     R1.3            ; Get temp MSB
8343 16 11 D0                                                 STA     R1.1            ; ... Store
8346 39                                                       RTS                     ; Done
                                                      
                                                      ; ------------------------------
                                                      ;       "HALT"
                                                      
8347 49 83                                            _HALT:  DW      _HALT0
8349 14 49 83                                         _HALT0: JPA     _HALT0
                                                      
                                                      ; ------------------------------
                                                      ;       +ORIGIN
                                                      ; NOTE: Index number in R2
                                                      
834C 0E 00                                            _PORIG: LDI     <ORIGIN         ; R1 = ORIGIN address
834E 16 10 D0                                                 STA     R1.0            ; :
8351 0E 80                                                    LDI     >ORIGIN         ; :
8353 16 11 D0                                                 STA     R1.1            ; :
8356 15 14 D0                                                 LDA     R2.0            ; Get index number
8359 30 10 D0                                                 ADW     R1              ; Compute addr
835C 39                                                       RTS                     ; Done
                                                      
                                                      ; ------------------------------
                                                      ;       _USER
                                                      ; NOTE: Index number in R2
                                                      
835D 15 08 D0                                         _USER:  LDA     UP.0            ; R1 = UP
8360 16 10 D0                                                 STA     R1.0            ; :
8363 15 09 D0                                                 LDA     UP.1            ; :
8366 16 11 D0                                                 STA     R1.1            ; :
8369 15 14 D0                                                 LDA     R2.0            ; Get index number
836C 30 10 D0                                                 ADW     R1              ; Compute addr
836F 39                                                       RTS                     ; Done
                                                      
                                                      ; ------------------------------
                                                      ;       _SWAP8
                                                      ; Swaps R1.1 <-> R1.0
                                                      ;       R2.1 <-> R2.0
                                                      
8370 15 10 D0                                         _SWAP8: LDA     R1.0
8373 16 1D D0                                                 STA     TMP
8376 15 11 D0                                                 LDA     R1.1
8379 16 10 D0                                                 STA     R1.0
837C 15 1D D0                                                 LDA     TMP
837F 16 11 D0                                                 STA     R1.1
8382 15 14 D0                                                 LDA     R2.0
8385 16 1D D0                                                 STA     TMP
8388 15 15 D0                                                 LDA     R2.1
838B 16 14 D0                                                 STA     R2.0
838E 15 1D D0                                                 LDA     TMP
8391 16 15 D0                                                 STA     R2.1
8394 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = R1 & R2
                                                      
8395 38 61 82                                         _AND16: JPS     _AND8
8398 38 70 83                                                 JPS     _SWAP8
839B 38 61 82                                                 JPS     _AND8
839E 38 70 83                                                 JPS     _SWAP8
83A1 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = R1 | R2
                                                      
83A2 38 84 82                                         _OR16:  JPS     _OR8
83A5 38 70 83                                                 JPS     _SWAP8
83A8 38 84 82                                                 JPS     _OR8
83AB 38 70 83                                                 JPS     _SWAP8
83AE 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1 = R1 ^ R2
                                                      
83AF 38 A7 82                                         _XOR16: JPS     _XOR8
83B2 38 70 83                                                 JPS     _SWAP8
83B5 38 A7 82                                                 JPS     _XOR8
83B8 38 70 83                                                 JPS     _SWAP8
83BB 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1X = R1X * R2X
                                                      
83BC 0E 00                                            _UMULT: LDI     0               ; R1H = 0
83BE 16 12 D0                                                 STA     R1.2
83C1 16 13 D0                                                 STA     R1.3
83C4 16 16 D0                                                 STA     R2.2            ; R2H = 0
83C7 16 17 D0                                                 STA     R2.3
83CA 16 1A D0                                                 STA     R3.2            ; R3H = 0
83CD 16 1B D0                                                 STA     R3.3
                                                      
83D0 15 10 D0                                                 LDA     R1.0            ; R3L = R1L
83D3 16 18 D0                                                 STA     R3.0
83D6 15 11 D0                                                 LDA     R1.1
83D9 16 19 D0                                                 STA     R3.1
                                                      
83DC 0E 00                                                    LDI     0               ; R1L = 0
83DE 16 10 D0                                                 STA     R1.0
83E1 16 11 D0                                                 STA     R1.1
                                                      
83E4 0E 10                                                    LDI     16              ; Set bit counter
83E6 16 1C D0                                                 STA     BC
                                                      
83E9 15 19 D0                                         _UMU10: LDA     R3.1            ; R3L = R3L >> 1
83EC 07                                                       LSR
83ED 16 19 D0                                                 STA     R3.1
83F0 15 18 D0                                                 LDA     R3.0
83F3 08                                                       ROR
83F4 16 18 D0                                                 STA     R3.0
83F7 3C FD 83                                                 BCC     _UMU20
                                                      
83FA 38 22 82                                                 JPS     _ADD32          ; R1X = R1X + R2X
                                                      
83FD 15 14 D0                                         _UMU20: LDA     R2.0            ; R2X = R2X << 1
8400 05                                                       LSL
8401 16 14 D0                                                 STA     R2.0
8404 15 15 D0                                                 LDA     R2.1
8407 06                                                       ROL
8408 16 15 D0                                                 STA     R2.1
840B 15 16 D0                                                 LDA     R2.2
840E 06                                                       ROL
840F 16 16 D0                                                 STA     R2.2
8412 15 17 D0                                                 LDA     R2.3
8415 06                                                       ROL
8416 16 17 D0                                                 STA     R2.3
                                                      
8419 27 1C D0                                                 DEB     BC
841C 3A E9 83                                                 BNE     _UMU10
841F 39                                                       RTS
                                                      
                                                      ; ------------------------------
                                                      ;       R1X / R2L
                                                      ;       R1H: Quotient
                                                      ;       R1L: Remainder
                                                      
8420 0E 10                                            _UDIV:  LDI     16              ; Set bit counter
8422 16 1C D0                                                 STA     BC              ; :
                                                              
8425 15 10 D0                                         _UDI10: LDA     R1.0            ; R1X = R1X << 1
8428 05                                                       LSL                     ; :
8429 16 10 D0                                                 STA     R1.0            ; :
842C 15 11 D0                                                 LDA     R1.1            ; :
842F 06                                                       ROL                     ; :
8430 16 11 D0                                                 STA     R1.1            ; :
8433 15 12 D0                                                 LDA     R1.2            ; :
8436 06                                                       ROL                     ; :
8437 16 12 D0                                                 STA     R1.2            ; :
843A 15 13 D0                                                 LDA     R1.3            ; :
843D 06                                                       ROL                     ; :
843E 16 13 D0                                                 STA     R1.3            ; :
                                                      
8441 15 12 D0                                                 LDA     R1.2            ; R3H = R1H
8444 16 1A D0                                                 STA     R3.2            ; :
8447 15 13 D0                                                 LDA     R1.3            ; :
844A 16 1B D0                                                 STA     R3.3            ; :
                                                              
844D 15 1A D0                                                 LDA     R3.2            ; R3H = R3H - R2L
8450 18 14 D0                                                 SBA     R2.0            ; :
8453 16 1A D0                                                 STA     R3.2            ; :
8456 15 1B D0                                                 LDA     R3.3            ; :
8459 1B 15 D0                                                 SCA     R2.1            ; :
845C 16 1B D0                                                 STA     R3.3            ; :
                                                              
845F 3C 71 84                                                 BCC     _UDI20
                                                              
8462 15 1A D0                                                 LDA     R3.2            ; R1H = R3H
8465 16 12 D0                                                 STA     R1.2            ; :
8468 15 1B D0                                                 LDA     R3.3            ; :
846B 16 13 D0                                                 STA     R1.3            ; :
                                                              
846E 2E 10 D0                                                 INW     R1.0            ; R1L++
                                                              
8471 27 1C D0                                         _UDI20: DEB     BC              ; All bits done?
8474 3A 25 84                                                 BNE     _UDI10          ; NO: Loop again
                                                              
8477 39                                                       RTS
                                                      
                                                      ; INCLUDE         inner.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; INNER INTERPRETER
                                                      
8478 2F 04 D0                                         IPUSH:  DEW     SP              ; -(SP) = R1H
847B 15 13 D0                                                 LDA     R1.3
847E 1E 04 D0                                                 STR     SP
8481 2F 04 D0                                                 DEW     SP
8484 15 12 D0                                                 LDA     R1.2
8487 1E 04 D0                                                 STR     SP
848A 2F 04 D0                                         PUSH:   DEW     SP              ; -(SP) = R1L
848D 15 11 D0                                                 LDA     R1.1
8490 1E 04 D0                                                 STR     SP
8493 2F 04 D0                                                 DEW     SP
8496 15 10 D0                                                 LDA     R1.0
8499 1E 04 D0                                                 STR     SP
849C 1D 00 D0                                         NEXT:   LDR     IP              ; WA = (IP)+
849F 16 02 D0                                                 STA     WA.0
84A2 2E 00 D0                                                 INW     IP
84A5 1D 00 D0                                                 LDR     IP
84A8 16 03 D0                                                 STA     WA.1
84AB 2E 00 D0                                                 INW     IP
84AE 1D 02 D0                                         NEXT10: LDR     WA              ; R1 = (WA)+
84B1 16 10 D0                                                 STA     R1.0
84B4 2E 02 D0                                                 INW     WA
84B7 1D 02 D0                                                 LDR     WA
84BA 16 11 D0                                                 STA     R1.1
84BD 2E 02 D0                                                 INW     WA
84C0 1C 10 D0                                                 JPR     R1              ; jump @(R1)
                                                      
                                                      ; ------------------------------
                                                      ;       Push TRUE and FALSE
                                                      
84C3 2C 10 D0                                         PUSHT:  CLW     R1              ; A zero
84C6 2F 10 D0                                                 DEW     R1              ; Make it into a -1 i.e. TRUE flag
84C9 14 8A 84                                                 JPA     PUSH
                                                      
84CC 2C 10 D0                                         PUSHF:  CLW     R1              ; A zero
84CF 14 8A 84                                                 JPA     PUSH
                                                      
                                                      ; ------------------------------
                                                      ;       Push R1X, MSB as TOS
                                                      
84D2 2F 04 D0                                         DPUSH:  DEW     SP              ; -(SP) = R1X
84D5 15 11 D0                                                 LDA     R1.1
84D8 1E 04 D0                                                 STR     SP
84DB 2F 04 D0                                                 DEW     SP
84DE 15 10 D0                                                 LDA     R1.0
84E1 1E 04 D0                                                 STR     SP
84E4 2F 04 D0                                                 DEW     SP
84E7 15 13 D0                                                 LDA     R1.3
84EA 1E 04 D0                                                 STR     SP
84ED 2F 04 D0                                                 DEW     SP
84F0 15 12 D0                                                 LDA     R1.2
84F3 1E 04 D0                                                 STR     SP
84F6 14 9C 84                                                 JPA     NEXT
                                                      
                                                      ; INCLUDE         primaries.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; FORTH PRIMARIES
                                                      ;
                                                      
84F9 83 4C 49 D4                                      HLIT:   DB      ^3 "LI" ^'T'                            ; ***** LIT
84FD 00 00                                                    DW      0
84FF 01 85                                            LIT:    DW      LIT0
8501 38 2A 80                                         LIT0:   JPS     _LIT            ; R1 = (IP)+
8504 14 8A 84                                                 JPA     PUSH            ; -(SP) = R1; NEXT
                                                      
8507 87 45 58 45 43 55 54 C5                          HEXEC:  DB      ^7 "EXECUT" ^'E'                        ; ***** EXECUTE
850F F9 84                                                    DW      HLIT
8511 13 85                                            EXEC:   DW      EXEC0
8513 1D 04 D0                                         EXEC0:  LDR     SP              ; WA = (SP)+
8516 16 02 D0                                                 STA     WA.0
8519 2E 04 D0                                                 INW     SP
851C 1D 04 D0                                                 LDR     SP
851F 16 03 D0                                                 STA     WA.1
8522 2E 04 D0                                                 INW     SP
8525 14 AE 84                                                 JPA     NEXT10          ; jump @(WA)+
                                                      
8528 86 42 52 41 4E 43 C8                             HBRAN:  DB      ^6 "BRANC" ^'H'                         ; ***** BRANCH
852F 07 85                                                    DW      HEXEC
8531 33 85                                            BRAN:   DW      BRAN0
8533 38 3D 80                                         BRAN0:  JPS     _BRAN           ; IP = IP + (IP)
8536 14 9C 84                                                 JPA     NEXT
                                                      
8539 87 30 42 52 41 4E 43 C8                          HZBRAN: DB      ^7 "0BRANC" ^'H'                        ; ***** 0BRANCH
8541 28 85                                                    DW      HBRAN
8543 45 85                                            ZBRAN:  DW      ZBRAN0
8545 1D 04 D0                                         ZBRAN0: LDR     SP
8548 11 00                                                    CPI     0               ; Low byte non-zero?
854A 3A 5E 85                                                 BNE     ZBRA10          ; YES: Do not branch
854D 2E 04 D0                                                 INW     SP
8550 1D 04 D0                                                 LDR     SP
8553 11 00                                                    CPI     0               ; High byte non-zero?
8555 3A 61 85                                                 BNE     ZBRA20          ; YES: Do not branch
8558 2E 04 D0                                                 INW     SP
855B 14 33 85                                                 JPA     BRAN0           ; IP = IP + (IP); NEXT
855E 2E 04 D0                                         ZBRA10: INW     SP
8561 2E 04 D0                                         ZBRA20: INW     SP
8564 2E 00 D0                                                 INW     IP              ; Just skip jump offset
8567 2E 00 D0                                                 INW     IP
856A 14 9C 84                                                 JPA     NEXT
                                                      
856D 87 28 2B 4C 4F 4F 50 A9                          HXPLOO: DB      ^7 "(+LOOP" ^')'                        ; ***** (+LOOP)
8575 39 85                                                    DW      HZBRAN
8577 79 85                                            XPLOO:  DW      XPLOO0
8579 38 AF 80                                         XPLOO0: JPS     _GET2           ; R2 = (SP) [only copying increment]
857C 38 1E 81                                                 JPS     _RPOP1          ; R1 = (RP)+
857F 38 15 82                                                 JPS     _ADD16          ; R1 = counter'
8582 38 35 81                                                 JPS     _RGET2          ; R2 = limit
8585 38 D2 81                                                 JPS     _RPUSH1         ; -(RP) = R1'
8588 38 F9 80                                                 JPS     _POP3           ; R3 = (SP)+ [now popping incr]
858B 15 19 D0                                                 LDA     R3.1            ; Is increment negative?
858E 11 00                                                    CPI     0               ; :
8590 3E 96 85                                                 BPL     XPLO10
                                                              ; Handle negative increment
8593 38 18 83                                                 JPS     _XCH16          ; R1 <-> R2
                                                              ; Compare counter to limit
8596 15 11 D0                                         XPLO10: LDA     R1.1            ; Compare MSB
8599 19 15 D0                                                 CPA     R2.1            ; :
859C 3F 33 85                                                 BMI     BRAN0           ; R2 is greater, continue looping
859F 3B A5 85                                                 BEQ     XPLO20          ; MSBs are equal, check LSBs
85A2 14 AE 85                                                 JPA     XPLO30          ; R1 is greater, stop looping
                                                              ; MSBs are equal
85A5 15 10 D0                                         XPLO20: LDA     R1.0            ; Compare LSB
85A8 19 14 D0                                                 CPA     R2.0            
85AB 3F 33 85                                                 BMI     BRAN0           ; R2 is greater, continue looping
                                                              ; Limit reached, cleanup rstack and stop looping
85AE 0E 04                                            XPLO30: LDI     4               ; Drop loop counter ...
85B0 30 06 D0                                                 ADW     RP              ; ... and loop limit
85B3 0E 02                                                    LDI     2               ; Skip branch offset
85B5 30 00 D0                                                 ADW     IP              ; :
85B8 14 9C 84                                                 JPA     NEXT
                                                      
85BB 86 28 4C 4F 4F 50 A9                             HXLOOP: DB      ^6 "(LOOP" ^')'                         ; ***** (LOOP)
85C2 6D 85                                                    DW      HXPLOO
85C4 C6 85                                            XLOOP:  DW      XLOOP0
85C6 2C 10 D0                                         XLOOP0: CLW     R1              ; Push a one
85C9 2E 10 D0                                                 INW     R1              ; :
85CC 38 78 81                                                 JPS     _PUSH1          ; :
85CF 14 79 85                                                 JPA     XPLOO0          ; (+LOOP)
                                                      
85D2 84 28 44 4F A9                                   HXDO:   DB      ^4 "(DO" ^')'                           ; ***** (DO)
85D7 BB 85                                                    DW      HXLOOP
85D9 DB 85                                            XDO:    DW      XDO0
85DB 38 00 81                                         XDO0:   JPS     _POP21          ; Loop counter, limit
85DE 38 D2 81                                                 JPS     _RPUSH1         ; Push limit onto rstack
85E1 38 F0 81                                                 JPS     _RPUSH2         ; Push loop counter onto rstack
85E4 14 9C 84                                                 JPA     NEXT
                                                      
85E7 81 C9                                            HI:     DB      ^1 ^'I'                                 ; ***** I
85E9 D2 85                                                    DW      HXDO
85EB ED 85                                            I:      DW      I0
85ED 38 17 81                                         I0:     JPS     _RGET1          ; Get loop counter
85F0 14 8A 84                                                 JPA     PUSH            ; Push it onto dstack
                                                      
85F3 85 44 49 47 49 D4                                HDIGIT: DB      ^5 "DIGI" ^'T'                          ; ***** DIGIT
85F9 E7 85                                                    DW      HI
85FB FD 85                                            DIGIT:  DW      DIGIT0
85FD 38 00 81                                         DIGIT0: JPS     _POP21          ; R2 = base, R1 = char
8600 15 10 D0                                                 LDA     R1.0            ; Get character into A
8603 10 30                                                    SBI     '0'             ; Assume '0' - '9'
8605 3F 21 86                                                 BMI     DIGI88          ; Oops! Negative
8608 11 0A                                                    CPI     10              ; Greater than 9?
860A 3F 0F 86                                                 BMI     DIGI10          ; No, it is 0 - 9
                                                              ; 'A' - 'Z' case
860D 10 07                                                    SBI     7               ; ch -= ('A' - '0') + 10
860F 19 14 D0                                         DIGI10: CPA     R2.0            ; Greater than base?
8612 3F 18 86                                                 BMI     DIGI77
8615 14 21 86                                                 JPA     DIGI88
8618 16 10 D0                                         DIGI77: STA     R1.0            ; Store binary value
861B 38 78 81                                                 JPS     _PUSH1          ; Push the value
861E 14 C3 84                                                 JPA     PUSHT           ; Push TRUE; NEXT
8621 14 CC 84                                         DIGI88: JPA     PUSHF           ; Push FALSE; NEXT
                                                      
8624 86 28 46 49 4E 44 A9                             HPFIND: DB      ^6 "(FIND" ^')'                         ; ***** (FIND)
862B F3 85                                                    DW      HDIGIT
862D 2F 86                                            PFIND:  DW      PFIND0
862F 38 73 80                                         PFIND0: JPS     _POP1           ; NFA
8632 38 F9 80                                                 JPS     _POP3           ; String address
8635 15 18 D0                                         PFIN10: LDA     R3.0            ; R2 = R3 (string address)
8638 16 14 D0                                                 STA     R2.0            ; :
863B 15 19 D0                                                 LDA     R3.1            ; :
863E 16 15 D0                                                 STA     R2.1            ; :
                                                              ; Fast comparison of length bytes
8641 1D 10 D0                                                 LDR     R1              ; Get lByte
8644 16 12 D0                                                 STA     R1.2            ; ... Store as potential result
8647 05                                                       LSL                     ; lByte &= 0x3F
8648 05                                                       LSL                     ; :
8649 07                                                       LSR                     ; :
864A 07                                                       LSR                     ; :
864B 16 16 D0                                                 STA     R2.2            ; R2.2 is counter for string match
864E 21 14 D0                                                 CPR     R2              ; lByte == string length?
8651 3A 70 86                                                 BNE     PFIN25
                                                              ; Length bytes match, check names
8654 2E 10 D0                                         PFIN20: INW     R1              ; Bump pointers
8657 2E 14 D0                                                 INW     R2              ; :
865A 1D 10 D0                                                 LDR     R1              ; Get char from dictionary
865D 05                                                       LSL                     ; char &= 0x7F
865E 07                                                       LSR
865F 21 14 D0                                                 CPR     R2              ; Is it a match with search string?
8662 3A 73 86                                                 BNE     PFIN30          ; NO: Look at next header in dictionary
8665 27 16 D0                                                 DEB     R2.2            ; Decrement character counter
8668 11 00                                                    CPI     0               ; :
866A 3B 94 86                                                 BEQ     PFIN77          ; YES: This is the word we are looking for
866D 14 54 86                                                 JPA     PFIN20          ; Match so far, try next char
                                                              ; Step to next header in dictionary
8670 2E 10 D0                                         PFIN25: INW     R1              ; Bump NFA pointer to actual characters
8673 2E 10 D0                                         PFIN30: INW     R1              ; Bump NFA pointer
8676 27 16 D0                                                 DEB     R2.2            ; Decrement character counter
8679 11 00                                                    CPI     0               ; End of name field?
867B 3A 73 86                                                 BNE     PFIN30          ; NO: Step to next char
867E 38 2B 83                                                 JPS     _AT             ; R1 = (R1)
8681 15 11 D0                                                 LDA     R1.1            ; At end of dictionary?
8684 11 00                                                    CPI     0               ; :
8686 3A 35 86                                                 BNE     PFIN10          ; NO: Try this word for match
8689 15 10 D0                                                 LDA     R1.0            ; :
868C 11 00                                                    CPI     0               ; :
868E 3A 35 86                                                 BNE     PFIN10          ; NO: Try this word for match
                                                              ; Word not found, return a single FALSE
8691 14 CC 84                                         PFIN88: JPA     PUSHF           ; Done
                                                              ; Word found, return PFA, lByte, TRUE
8694 0E 05                                            PFIN77: LDI     5               ; Bump ptr to PFA
8696 30 10 D0                                                 ADW     R1              ; :
8699 38 78 81                                                 JPS     _PUSH1          ; Push PFA
869C 15 12 D0                                                 LDA     R1.2            ; Get stored length byte
869F 16 10 D0                                                 STA     R1.0            ; :
86A2 24 11 D0                                                 CLB     R1.1            ; Clear MSB
86A5 38 78 81                                                 JPS     _PUSH1          ; Push length byte
86A8 14 C3 84                                                 JPA     PUSHT           ; Done
                                                      
86AB 87 45 4E 43 4C 4F 53 C5                          HENCL:  DB      ^7 "ENCLOS" ^'E'                        ; ***** ENCLOSE
86B3 24 86                                                    DW      HPFIND
86B5 B7 86                                            ENCL:   DW      ENCL0
86B7 38 F9 80                                         ENCL0:  JPS     _POP3           ; Get delimiter char
86BA 38 6C 80                                                 JPS     _GET1           ; Get addr of input
86BD 2C 14 D0                                                 CLW     R2              ; Initialize char index
                                                              ; Scan preceeding delimiters
86C0 1D 10 D0                                         ENCL10: LDR     R1              ; Get char from input
86C3 11 00                                                    CPI     0               ; Is it <NUL>?
86C5 3B FD 86                                                 BEQ     ENCL50          ; YES: <NUL> before first non-delimiter
86C8 19 18 D0                                                 CPA     R3.0            ; Is it a delimiter?
86CB 3A D7 86                                                 BNE     ENCL20          ; NO: We have the start of next token
86CE 2E 10 D0                                                 INW     R1              ; Bump to next char ...
86D1 26 14 D0                                                 INB     R2.0            ; ... also increase index
86D4 14 C0 86                                                 JPA     ENCL10          ; Go back to look at next char
                                                              ; Start of token
86D7 38 96 81                                         ENCL20: JPS     _PUSH2          ; Push result n1 (first char of token)
86DA 1D 10 D0                                         ENCL30: LDR     R1              ; Get char from input
86DD 11 00                                                    CPI     0               ; Is it <NUL>?
86DF 3B 0C 87                                                 BEQ     ENCL60          ; YES: <NUL> found
86E2 19 18 D0                                                 CPA     R3.0            ; Is it a delimiter?
86E5 3B F1 86                                                 BEQ     ENCL40          ; YES: We have the end of the token
86E8 2E 10 D0                                                 INW     R1              ; Bump to next char ...
86EB 26 14 D0                                                 INB     R2.0            ; ... also increase index
86EE 14 DA 86                                                 JPA     ENCL30          ; Go back to look at next char
                                                              ; End of token
86F1 38 96 81                                         ENCL40: JPS     _PUSH2          ; Push result n2 (ending delimiter)
86F4 26 14 D0                                                 INB     R2.0            ; Also push n3 ...
86F7 38 96 81                                                 JPS     _PUSH2          ; : ... (index to first non-scanned char)
86FA 14 9C 84                                                 JPA     NEXT            ; Done
                                                              ; <NUL> appears before token
86FD 26 14 D0                                         ENCL50: INB     R2.0            ; Push i + 1
8700 38 96 81                                                 JPS     _PUSH2          ; :
8703 27 14 D0                                                 DEB     R2.0            ; Push i
8706 38 96 81                                                 JPS     _PUSH2          ; : ... indicating <NUL> before token
8709 14 9C 84                                                 JPA     NEXT            ; Done
                                                              ; Token ends with a <NUL>
870C 38 96 81                                         ENCL60: JPS     _PUSH2          ; Push i twice to indicate ...
870F 38 96 81                                                 JPS     _PUSH2          ; : ... that token ends in a <NUL>
8712 14 9C 84                                                 JPA     NEXT            ; Done
                                                      
8715 84 45 4D 49 D4                                   HEMIT:  DB      ^4 "EMI" ^'T'                           ; ***** EMIT
871A AB 86                                                    DW      HENCL
871C 1E 87                                            EMIT:   DW      EMIT0
871E 38 73 80                                         EMIT0:  JPS     _POP1           ; Get character
8721 15 10 D0                                                 LDA     R1.0            ; Send char to terminal
8724 02                                                       OUT                     ;
8725 14 9C 84                                                 JPA     NEXT            ; Done
                                                      
8728 83 4B 45 D9                                      HKEY:   DB      ^3 "KE" ^'Y'                            ; ***** KEY
872C 15 87                                                    DW      HEMIT
872E 30 87                                            KEY:    DW      KEY0
8730 0A                                               KEY0:   INP                     ; Get char form terminal
8731 11 FF                                                    CPI     0xFF            ; Did we get a character?
8733 3B 30 87                                                 BEQ     KEY0            ; NO: Try again
8736 16 10 D0                                                 STA     R1.0            ; YES: Push character
8739 24 11 D0                                                 CLB     R1.1            ; :
873C 14 8A 84                                                 JPA     PUSH            ; Push R1; NEXT
                                                      
873F 89 3F 54 45 52 4D 49 4E 41 CC                    HQTERM: DB      ^9 "?TERMINA" ^'L'                      ; ***** ?TERMINAL
8749 28 87                                                    DW      HKEY
874B 4D 87                                            QTERM:  DW      QTERM0
874D 2C 10 D0                                         QTERM0: CLW     R1              ; Default FALSE to return
8750 0A                                                       INP                     ; Get char from terminal
8751 11 FF                                                    CPI     0xFF            ; Did we get a character?
8753 3B 59 87                                                 BEQ     QTER10          ; NO: Return FALSE
8756 2F 10 D0                                                 DEW     R1              ; Make default FALSE into TRUE
8759 14 8A 84                                         QTER10: JPA     PUSH            ; Push R1; NEXT
                                                      
875C 82 43 D2                                         HCR:    DB      ^2 "C" ^'R'                             ; ***** CR
875F 3F 87                                                    DW      HQTERM
8761 63 87                                            CR:     DW      CR0
8763 0E 0A                                            CR0:    LDI     CH_LF           ; Output a linefeed ...
8765 02                                                       OUT                     ; ... to the terminal
8766 14 9C 84                                                 JPA     NEXT            ; Done
                                                      
8769 85 43 4D 4F 56 C5                                HCMOVE: DB      ^5 "CMOV" ^'E'                          ; ***** CMOVE
876F 5C 87                                                    DW      HCR
8771 73 87                                            CMOVE:  DW      CMOVE0
8773 38 F9 80                                         CMOVE0: JPS     _POP3           ; R3 = count
8776 38 00 81                                                 JPS     _POP21          ; R2 = dst, R1 = src
8779 1D 10 D0                                         CMOV10: LDR     R1              ; Get byte from source
877C 1E 14 D0                                                 STR     R2              ; Store to destination
877F 2E 10 D0                                                 INW     R1              ; Bump source pointer
8782 2E 14 D0                                                 INW     R2              ; Bump destination pointer
8785 2F 18 D0                                                 DEW     R3              ; Decrement count
8788 3B 8E 87                                                 BEQ     CMOV20          ; Count zero: We are done
878B 14 79 87                                                 JPA     CMOV10          ; Count non-zero: Next byte
878E 14 9C 84                                         CMOV20: JPA     NEXT            ; Done
                                                      
8791 82 55 AA                                         HUSTAR: DB      ^2 "U" ^'*'                             ; ***** U*
8794 69 87                                                    DW      HCMOVE
8796 98 87                                            USTAR:  DW      USTAR0
8798 38 00 81                                         USTAR0: JPS     _POP21          ; R2 = oper2, R1 = oper1
879B 38 BC 83                                                 JPS     _UMULT          ; u32 = u16 * u16
879E 14 D2 84                                                 JPA     DPUSH           ; Done
                                                      
87A1 82 55 AF                                         HUSLAS: DB      ^2 "U" ^'/'                             ; ***** U/
87A4 91 87                                                    DW      HUSTAR
87A6 A8 87                                            USLAS:  DW      USLAS0
87A8 38 00 81                                         USLAS0: JPS     _POP21          ; R2 = divisor, R1 = dividend-hi
87AB 15 10 D0                                                 LDA     R1.0            ; Move high part to R1.2 and R1.3
87AE 16 12 D0                                                 STA     R1.2            ; :
87B1 15 11 D0                                                 LDA     R1.1            ; :
87B4 16 13 D0                                                 STA     R1.3            ; :
87B7 38 73 80                                                 JPS     _POP1           ; dividend, low 16b
87BA 38 20 84                                                 JPS     _UDIV           ; u32 / u16 --> quot_u16, rem_u16
87BD 14 78 84                                                 JPA     IPUSH           ; Push R1H; Push R1L; NEXT
                                                      
87C0 83 41 4E C4                                      HAND:   DB      ^3 "AN" ^'D'                            ; ***** AND
87C4 A1 87                                                    DW      HUSLAS
87C6 C8 87                                            AND:    DW      AND0
87C8 38 00 81                                         AND0:   JPS     _POP21          ; R2 = oper2, R1 = oper1
87CB 38 95 83                                                 JPS     _AND16          ; R1 = R1 & R2
87CE 14 8A 84                                                 JPA     PUSH            ; Done
                                                      
87D1 82 4F D2                                         HOR:    DB      ^2 "O" ^'R'                             ; ***** OR
87D4 C0 87                                                    DW      HAND
87D6 D8 87                                            OR:     DW      OR0
87D8 38 00 81                                         OR0:    JPS     _POP21          ; R2 = oper2, R1 = oper1
87DB 38 A2 83                                                 JPS     _OR16           ; R1 = R1 | R2
87DE 14 8A 84                                                 JPA     PUSH            ; Done
                                                      
87E1 83 58 4F D2                                      HXOR:   DB      ^3 "XO" ^'R'                            ; ***** XOR
87E5 D1 87                                                    DW      HOR
87E7 E9 87                                            XOR:    DW      XOR0
87E9 38 00 81                                         XOR0:   JPS     _POP21          ; R2 = oper2, R1 = oper1
87EC 38 AF 83                                                 JPS     _XOR16          ; R1 = R1 ^ R2
87EF 14 8A 84                                                 JPA     PUSH            ; Done
                                                      
87F2 83 53 50 C0                                      HSPAT:  DB      ^3 "SP" ^'@'                            ; ***** SP@
87F6 E1 87                                                    DW      HXOR
87F8 FA 87                                            SPAT:   DW      SPAT0
87FA 15 04 D0                                         SPAT0:  LDA     SP.0            ; Get stack pointer
87FD 16 10 D0                                                 STA     R1.0            ; : into R1
8800 15 05 D0                                                 LDA     SP.1            ; :
8803 16 11 D0                                                 STA     R1.1            ; :
8806 14 8A 84                                                 JPA     PUSH            ; Push R1; NEXT
                                                      
8809 83 53 50 A1                                      HSPSTO: DB      ^3 "SP" ^'!'                            ; ***** SP!
880D F2 87                                                    DW      HSPAT
880F 11 88                                            SPSTO:  DW      SPSTO0
8811 0E 06                                            SPSTO0: LDI     6               ; Index of SP0
8813 16 14 D0                                                 STA     R2.0            ; : in USER table
8816 38 5D 83                                                 JPS     _USER           ; R1 = &USER[R2]
8819 38 2B 83                                                 JPS     _AT             ; R1 = (R1)
881C 15 10 D0                                                 LDA     R1.0            ; SP = R1
881F 16 04 D0                                                 STA     SP.0            ; :
8822 15 11 D0                                                 LDA     R1.1            ; :
8825 16 05 D0                                                 STA     SP.1            ; :
8828 14 9C 84                                                 JPA     NEXT            ; Done
                                                      
882B 83 52 50 A1                                      HRPSTO: DB      ^3 "RP" ^'!'                            ; ***** RP!
882F 09 88                                                    DW      HSPSTO
8831 33 88                                            RPSTO:  DW      RPSTO0
8833 0E 18                                            RPSTO0: LDI     24              ; Index of SP0
8835 16 14 D0                                                 STA     R2.0            ; : in boot table
8838 38 4C 83                                                 JPS     _PORIG          ; R1 = &bootTable[R2]
883B 38 2B 83                                                 JPS     _AT             ; R1 = XRP
883E 15 10 D0                                                 LDA     R1.0            ; SP = R1
8841 16 06 D0                                                 STA     RP.0            ; :
8844 15 11 D0                                                 LDA     R1.1            ; :
8847 16 07 D0                                                 STA     RP.1            ; :
884A 14 9C 84                                                 JPA     NEXT            ; Done
                                                      
884D 82 3B D3                                         HSEMIS: DB      ^2 ";" ^'S'                             ; ***** ;S
8850 2B 88                                                    DW      HRPSTO
8852 54 88                                            SEMIS:  DW      SEMIS0
8854 1D 06 D0                                         SEMIS0: LDR     RP              ; IP = (RP)+
8857 16 00 D0                                                 STA     IP.0            ; :
885A 2E 06 D0                                                 INW     RP              ; :
885D 1D 06 D0                                                 LDR     RP              ; :
8860 16 01 D0                                                 STA     IP.1            ; :
8863 2E 06 D0                                                 INW     RP              ; :
8866 14 9C 84                                                 JPA     NEXT            ; Done
                                                      
8869 85 4C 45 41 56 C5                                HLEAVE: DB      ^5 "LEAV" ^'E'                          ; ***** LEAVE
886F 4D 88                                                    DW      HSEMIS
8871 73 88                                            LEAVE:  DW      LEAVE0
8873 38 1E 81                                         LEAVE0: JPS     _RPOP1          ; 2(RP) = (RP)
8876 38 CB 81                                                 JPS     _RPUT1          ; :
8879 38 D2 81                                                 JPS     _RPUSH1         ; :
887C 14 9C 84                                                 JPA     NEXT
                                                      
887F 82 3E D2                                         HTOR:   DB      ^2 ">" ^'R'                             ; ***** >R
8882 69 88                                                    DW      HLEAVE
8884 86 88                                            TOR:    DW      TOR0
8886 38 73 80                                         TOR0:   JPS     _POP1           ; -(RP) = (SP)+
8889 38 D2 81                                                 JPS     _RPUSH1         ; :
888C 14 9C 84                                                 JPA     NEXT
                                                      
888F 82 52 BE                                         HFROMR: DB      ^2 "R" ^'>'                             ; ***** R>
8892 7F 88                                                    DW      HTOR
8894 96 88                                            FROMR:  DW      FROMR0
8896 38 1E 81                                         FROMR0: JPS     _RPOP1          ; -(SP) = (RP)+
8899 14 8A 84                                                 JPA     PUSH            ; :
                                                      
889C 81 D2                                            HR:     DB      ^1 ^'R'                                 ; ***** R
889E 8F 88                                                    DW      HFROMR
88A0 A2 88                                            R:      DW      R0
88A2 38 17 81                                         R0:     JPS     _RGET1          ; -(SP) = (RP)
88A5 14 8A 84                                                 JPA     PUSH            ; :
                                                      
88A8 82 30 BD                                         HZEQU:  DB      ^2 "0" ^'='                             ; ***** 0=
88AB 9C 88                                                    DW      HR
88AD AF 88                                            ZEQU:   DW      ZEQU0
88AF 1D 04 D0                                         ZEQU0:  LDR     SP              ; Get low byte
88B2 11 00                                                    CPI     0               ; Is it zero?
88B4 3A C8 88                                                 BNE     ZEQU10          ; NO: Return FALSE
88B7 2E 04 D0                                                 INW     SP              ; YES: Have to inspect
88BA 1D 04 D0                                                 LDR     SP              ; : high byte as well
88BD 11 00                                                    CPI     0               ; Is it zero?
88BF 3A CB 88                                                 BNE     ZEQU20          ; NO: Return FALSE
88C2 2E 04 D0                                                 INW     SP              ; Make POP complete
88C5 14 C3 84                                                 JPA     PUSHT           ; YES: Return TRUE
88C8 2E 04 D0                                         ZEQU10: INW     SP              ; POP argument off dstack
88CB 2E 04 D0                                         ZEQU20: INW     SP              ; : Make POP complete
88CE 14 CC 84                                                 JPA     PUSHF           ; Return FALSE
                                                      
88D1 82 30 BC                                         HZLESS: DB      ^2 "0" ^'<'                             ; ***** 0<
88D4 A8 88                                                    DW      HZEQU
88D6 D8 88                                            ZLESS:  DW      ZLESS0
88D8 2E 04 D0                                         ZLESS0: INW     SP              ; Inspect high byte only
88DB 1D 04 D0                                                 LDR     SP              ; Get high byte
88DE 11 00                                                    CPI     0               ; Is high byte negative?
88E0 3F E9 88                                                 BMI     ZLES10          ; YES: Return TRUE
88E3 2E 04 D0                                                 INW     SP              ; NO: POP high byte also
88E6 14 CC 84                                                 JPA     PUSHF           ; Return FALSE
88E9 2E 04 D0                                         ZLES10: INW     SP              ; POP high byte also
88EC 14 C3 84                                                 JPA     PUSHT           ; Return TRUE
                                                      
88EF 81 AB                                            HPLUS:  DB      ^1 ^'+'                                 ; ***** +
88F1 D1 88                                                    DW      HZLESS
88F3 F5 88                                            PLUS:   DW      PLUS0
88F5 38 00 81                                         PLUS0:  JPS     _POP21          ; R2 = oper2, R1 = oper1
88F8 38 15 82                                                 JPS     _ADD16          ; R1 = R1 + R2
88FB 14 8A 84                                                 JPA     PUSH            ; -(SP) = R1; NEXT
                                                      
88FE 82 44 AB                                         HDPLUS: DB      ^2 "D" ^'+'                             ; ***** D+
8901 EF 88                                                    DW      HPLUS
8903 05 89                                            DPLUS:  DW      DPLUS0
8905 38 BD 80                                         DPLUS0: JPS     _DPOP2          ; Get second operand
8908 38 7A 80                                                 JPS     _DPOP1          ; Get first operand
890B 38 22 82                                                 JPS     _ADD32          ; R1X = R1X + R2X
890E 14 D2 84                                                 JPA     DPUSH           ; -(SP) = R1X; NEXT
                                                      
8911 85 4D 49 4E 55 D3                                HMINUS: DB      ^5 "MINU" ^'S'                          ; ***** MINUS
8917 FE 88                                                    DW      HDPLUS
8919 1B 89                                            MINUS:  DW      MINUS0
891B 38 73 80                                         MINUS0: JPS     _POP1           ; Get operand
891E 38 F7 82                                                 JPS     _NEG16          ; Negate
8921 14 8A 84                                                 JPA     PUSH
                                                      
8924 86 44 4D 49 4E 55 D3                             HDMINU: DB      ^6 "DMINU" ^'S'                         ; ***** DMINUS
892B 11 89                                                    DW      HMINUS
892D 2F 89                                            DMINU:  DW      DMINU0
892F 38 7A 80                                         DMINU0: JPS     _DPOP1          ; Get operand
8932 38 05 83                                                 JPS     _NEG32          ; Negate
8935 14 D2 84                                                 JPA     DPUSH
                                                      
8938 84 4F 56 45 D2                                   HOVER:  DB      ^4 "OVE" ^'R'                           ; **** OVER
893D 24 89                                                    DW      HDMINU
893F 41 89                                            OVER:   DW      OVER0
8941 38 B6 80                                         OVER0:  JPS     _POP2           ; n1 n2 -- n1 n2 n1
8944 38 6C 80                                                 JPS     _GET1           ; :
8947 38 96 81                                                 JPS     _PUSH2          ; :
894A 14 8A 84                                                 JPA     PUSH            ; :
                                                      
894D 84 44 52 4F D0                                   HDROP:  DB      ^4 "DRO" ^'P'                           ; **** DROP
8952 38 89                                                    DW      HOVER
8954 56 89                                            DROP:   DW      DROP0
8956 2E 04 D0                                         DROP0:  INW     SP              ; n1 --
8959 2E 04 D0                                                 INW     SP              ; :
895C 14 9C 84                                                 JPA     NEXT            ; Done
                                                      
895F 84 53 57 41 D0                                   HSWAP:  DB      ^4 "SWA" ^'P'                           ; **** SWAP
8964 4D 89                                                    DW      HDROP
8966 41 89                                            SWAP:   DW      OVER0
8968 38 00 81                                         SWAP0:  JPS     _POP21          ; n1 n2 -- n2 n1
896B 38 96 81                                                 JPS     _PUSH2          ; :
896E 14 8A 84                                                 JPA     PUSH            ; :
                                                      
8971 83 44 55 D0                                      HDUP:   DB      ^3 "DU" ^'P'                            ; **** DUP
8975 5F 89                                                    DW      HSWAP
8977 79 89                                            DUP:    DW      DUP0
8979 38 6C 80                                         DUP0:   JPS     _GET1           ; n1 -- n1 n1
897C 14 8A 84                                                 JPA     PUSH            ; :
                                                      
897F 82 2B A1                                         HPSTOR: DB      ^2 "+" ^'!'                             ; ***** +!
8982 71 89                                                    DW      HDUP
8984 85                                               PSTOR:  DB      PSTOR0
8985 38 F9 80                                         PSTOR0: JPS     _POP3           ; R3 = addr
8988 38 B6 80                                                 JPS     _POP2           ; R2 = incr
898B 38 3B 82                                                 JPS     _LD16           ; R1 = (R3)
898E 38 15 82                                                 JPS     _ADD16          ; R1 = R1 + R2
8991 38 4E 82                                                 JPS     _ST16           ; (R3) = R1
8994 14 9C 84                                                 JPA     NEXT            ; Done
                                                      
8997 86 54 4F 47 47 4C C5                             HTOGGL: DB      ^6 "TOGGL" ^'E'                         ; ***** TOGGLE
899E 7F 89                                                    DW      HPSTOR
89A0 A2 89                                            TOGGL:  DW      TOGGL0
89A2 38 B6 80                                         TOGGL0: JPS     _POP2           ; R2 = bit mask
89A5 38 F9 80                                                 JPS     _POP3           ; R3 = addr
89A8 38 3B 82                                                 JPS     _LD16           ; R1 = (R3)
89AB 38 AF 83                                                 JPS     _XOR16          ; R1 = R1 ^ R2
89AE 38 4E 82                                                 JPS     _ST16           ; (R3) = R1
89B1 14 9C 84                                                 JPA     NEXT            ; Done
                                                      
89B4 81 C0                                            HAT:    DB      ^1 ^'@'                                 ; ***** @
89B6 97 89                                                    DW      HTOGGL
89B8 BA 89                                            AT:     DW      AT0
89BA 38 F9 80                                         AT0:    JPS     _POP3           ; R3 = addr
89BD 38 3B 82                                                 JPS     _LD16           ; R1 = (R3)
89C0 14 8A 84                                                 JPA     PUSH            ; -(SP) = R1; NEXT
                                                      
89C3 82 43 C0                                         HCAT:   DB      ^2 "C" ^'@'                             ; ***** C@
89C6 B4 89                                                    DW      HAT
89C8 CA 89                                            CAT:    DW      CAT0
89CA 2C 10 D0                                         CAT0:   CLW     R1              ; R1 = 0
89CD 38 F9 80                                                 JPS     _POP3           ; R3 = addr
89D0 1D 18 D0                                                 LDR     R3              ; A = (R3)
89D3 16 10 D0                                                 STA     R1.0            ; R1 = A
89D6 14 8A 84                                                 JPA     PUSH            ; -(SP) = R1; NEXT
                                                      
89D9 81 A1                                            HSTORE: DB      ^1 ^'!'                                 ; ***** !
89DB C3 89                                                    DW      HCAT
89DD DF 89                                            STORE:  DW      STORE0
89DF 38 F9 80                                         STORE0: JPS     _POP3           ; R3 = addr
89E2 38 73 80                                                 JPS     _POP1           ; R1 = data
89E5 38 4E 82                                                 JPS     _ST16           ; (R3) = R1
89E8 14 9C 84                                                 JPA     NEXT            ; Done
                                                      
89EB 82 43 A1                                         HCSTOR: DB      ^2 "C" ^'!'                             ; ***** C!
89EE D9 89                                                    DW      HSTORE
89F0 F2 89                                            CSTOR:  DW      CSTOR0
89F2 38 F9 80                                         CSTOR0: JPS     _POP3           ; R3 = addr
89F5 38 73 80                                                 JPS     _POP1           ; R1 = data
89F8 15 10 D0                                                 LDA     R1.0            ; A = R1.0
89FB 1E 18 D0                                                 STR     R3              ; (R3) = A
89FE 14 9C 84                                                 JPA     NEXT            ; Done
                                                      
                                                      ; INCLUDE         precompiled.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; PRECOMPILED FORTH WORDS
                                                      ;
                                                      
8A01 C1 BA                                            HCOLON: DB      ^^1 ^':'                                ; ***** :
8A03 EB 89                                                    DW      HCSTOR
8A05 19 8A B9 8D 74 8D DC 8B B8 89 CE 8B DD 89        COLON:  DW      DOCOL QEXEC SCSP CURR AT CONT STORE
8A13 DB 92 3E 8E A5 8E                                        DW      CREAT RBRAC PSCOD
8A19 2F 06 D0                                         DOCOL:  DEW     RP              ; -(RP) = IP
8A1C 15 01 D0                                                 LDA     IP.1            ; :
8A1F 1E 06 D0                                                 STR     RP              ; :
8A22 2F 06 D0                                                 DEW     RP              ; :
8A25 15 00 D0                                                 LDA     IP.0            ; :
8A28 1E 06 D0                                                 STR     RP              ; :
8A2B 15 02 D0                                                 LDA     WA.0            ; IP = WA
8A2E 16 00 D0                                                 STA     IP.0            ; :
8A31 15 03 D0                                                 LDA     WA.1            ; :
8A34 16 01 D0                                                 STA     IP.1            ; :
8A37 14 9C 84                                                 JPA     NEXT
                                                      
8A3A C1 BB                                            HSEMI:  DB      ^^1 ^';'                                ; ***** ;
8A3C 01 8A                                                    DW      HCOLON
8A3E E3 8D 1A 8E 52 88 53 8E 30 8E 52 88              SEMI:   DW      QCSP COMP SEMIS SMUDG LBRAC SEMIS
                                                      
8A4A 88 43 4F 4E 53 54 41 4E D4                       HCON:   DB      ^8 "CONSTAN" ^'T'                       ; ***** CONSTANT
8A53 3A 8A                                                    DW      HSEMI
8A55 19 8A DB 92 53 8E 7A 8C A5 8E                    CON:    DW      DOCOL CREAT SMUDG COMMA PSCOD
8A5F 1D 02 D0                                         DOCON:  LDR     WA              ; -(SP) = (WA)
8A62 16 10 D0                                                 STA     R1.0            ; :
8A65 2E 02 D0                                                 INW     WA              ; :
8A68 1D 02 D0                                                 LDR     WA              ; :
8A6B 16 11 D0                                                 STA     R1.1            ; :
8A6E 2F 02 D0                                                 DEW     WA              ; :
8A71 14 8A 84                                                 JPA     PUSH            ; Done
                                                      
8A74 88 56 41 52 49 41 42 4C C5                       HVAR:   DB      ^8 "VARIABL" ^'E'                       ; ***** VARIABLE
8A7D 4A 8A                                                    DW      HCON
8A7F 19 8A 55 8A A5 8E                                VAR:    DW      DOCOL CON PSCOD
8A85 2F 04 D0                                         DOVAR:  DEW     SP              ; -(SP) = WA
8A88 15 03 D0                                                 LDA     WA.1            ; :
8A8B 1E 04 D0                                                 STR     SP              ; :
8A8E 2F 04 D0                                                 DEW     SP              ; :
8A91 15 02 D0                                                 LDA     WA.0            ; :
8A94 1E 04 D0                                                 STR     SP              ; :
8A97 14 9C 84                                                 JPA     NEXT            ; Done
                                                      
8A9A 84 55 53 45 D2                                   HUSER:  DB      ^4 "USE" ^'R'                           ; ***** USER
8A9F 74 8A                                                    DW      HVAR
8AA1 19 8A 55 8A A5 8E                                USER:   DW      DOCOL CON PSCOD
8AA7 38 73 80                                         DOUSE:  JPS     _POP1           ; Get index
8AAA 15 10 D0                                                 LDA     R1.0            ; Compute UP[index]
8AAD 17 08 D0                                                 ADA     UP.0            ; :
8AB0 16 10 D0                                                 STA     R1.0            ; :
8AB3 15 11 D0                                                 LDA     R1.1            ; :
8AB6 1A 09 D0                                                 ACA     UP.1            ; :
8AB9 16 11 D0                                                 STA     R1.1            ; :
8ABC 14 8A 84                                                 JPA     PUSH            ; Push address; NEXT
                                                      
                                                      ; ------------------------------
                                                      ; PRECOMPILED CONSTANTS
                                                      
8ABF 81 B0                                            HZERO:  DB      ^1 ^'0'                                 ; ***** 0
8AC1 9A 8A                                                    DW      HUSER
8AC3 5F 8A 00 00                                      ZERO:   DW      DOCON 0
                                                      
8AC7 81 B1                                            HONE:   DB      ^1 ^'1'                                 ; ***** 1
8AC9 BF 8A                                                    DW      HZERO
8ACB 5F 8A 01 00                                      ONE:    DW      DOCON 1
                                                      
8ACF 81 B2                                            HTWO:   DB      ^1 ^'2'                                 ; ***** 2
8AD1 C7 8A                                                    DW      HONE
8AD3 5F 8A 02 00                                      TWO:    DW      DOCON 2
                                                      
8AD7 81 B3                                            HTHREE: DB      ^1 ^'3'                                 ; ***** 3
8AD9 CF 8A                                                    DW      HTWO
8ADB 5F 8A 03 00                                      THREE:  DW      DOCON 3
                                                      
8ADF 82 42 CC                                         HBL:    DB      ^2 "B" ^'L'                             ; ***** BL
8AE2 D7 8A                                                    DW      HTHREE
8AE4 5F 8A 20 00                                      BL:     DW      DOCON 32
                                                      
8AE8 83 43 2F CC                                      HCL:    DB      ^3 "C/" ^'L'                            ; ***** C/L
8AEC DF 8A                                                    DW      HBL
8AEE 5F 8A 50 00                                      CL:     DW      DOCON 80
                                                      
8AF2 85 42 2F 42 55 C6                                HBBUF:  DB      ^5 "B/BU" ^'F'                          ; ***** B/BUF
8AF8 E8 8A                                                    DW      HCL
8AFA 5F 8A 00 04                                      BBUF:   DW      DOCON 1024
                                                      
8AFE 85 42 2F 53 43 D2                                HBSCR:  DB      ^5 "B/SC" ^'R'                          ; ***** B/SCR
8B04 F2 8A                                                    DW      HBBUF
8B06 5F 8A 01 00                                      BSCR:   DW      DOCON 1
                                                      
8B0A 87 2B 4F 52 49 47 49 CE                          HPORIG: DB      ^7 "+ORIGI" ^'N'                        ; ***** +ORIGIN
8B12 FE 8A                                                    DW      HBSCR
8B14 19 8A FF 84 00 80 F3 88 52 88                    PORIG:  DW      DOCOL LIT ORIGIN PLUS SEMIS
                                                      
                                                      ; ------------------------------
                                                      ; USER VARIABLES
                                                      
8B1E 82 53 B0                                         HSZERO: DB      ^2 "S" ^'0'                             ; ***** S0
8B21 0A 8B                                                    DW      HPORIG
8B23 A7 8A 06 00                                      SZERO:  DW      DOUSE 6
                                                      
8B27 82 52 B0                                         HRZERO: DB      ^2 "R" ^'0'                             ; ***** R0
8B2A 1E 8B                                                    DW      HSZERO
8B2C A7 8A 08 00                                      RZERO:  DW      DOUSE 8
                                                      
8B30 83 54 49 C2                                      HTIB:   DB      ^3 "TI" ^'B'                            ; ***** TIB
8B34 27 8B                                                    DW      HRZERO
8B36 A7 8A 0A 00                                      TIB:    DW      DOUSE 10
                                                      
8B3A 85 57 49 44 54 C8                                HWIDTH: DB      ^5 "WIDT" ^'H'                          ; ***** WIDTH
8B40 30 8B                                                    DW      HTIB
8B42 A7 8A 0C 00                                      WIDTH:  DW      DOUSE 12
                                                      
8B46 87 57 41 52 4E 49 4E C7                          HWARN:  DB      ^7 "WARNIN" ^'G'                        ; ***** WARNING
8B4E 3A 8B                                                    DW      HWIDTH
8B50 A7 8A 0E 00                                      WARN:   DW      DOUSE 14
                                                      
8B54 85 46 45 4E 43 C5                                HFENCE: DB      ^5 "FENC" ^'E'                          ; ***** FENCE
8B5A 46 8B                                                    DW      HWARN
8B5C A7 8A 10 00                                      FENCE:  DW      DOUSE 16
                                                      
8B60 82 44 D0                                         HDP:    DB      ^2 "D" ^'P'                             ; ***** DP
8B63 54 8B                                                    DW      HFENCE
8B65 A7 8A 12 00                                      DP:     DW      DOUSE 18
                                                      
8B69 88 56 4F 43 2D 4C 49 4E CB                       HVOCL:  DB      ^8 "VOC-LIN" ^'K'                       ; ***** VOC-LINK
8B72 60 8B                                                    DW      HDP
8B74 A7 8A 14 00                                      VOCL:   DW      DOUSE 20
                                                      
8B78 85 46 49 52 53 D4                                HFIRST: DB      ^5 "FIRS" ^'T'                          ; ***** FIRST
8B7E 69 8B                                                    DW      HVOCL
8B80 A7 8A 16 00                                      FIRST:  DW      DOUSE 22
                                                      
8B84 85 4C 49 4D 49 D4                                HLIMIT: DB      ^5 "LIMI" ^'T'                          ; ***** LIMIT
8B8A 78 8B                                                    DW      HFIRST
8B8C A7 8A 18 00                                      LIMIT:  DW      DOUSE 24
                                                      
8B90 83 42 4C CB                                      HBLK:   DB      ^3 "BL" ^'K'                            ; ***** BLK
8B94 84 8B                                                    DW      HLIMIT
8B96 A7 8A 1E 00                                      BLK:    DW      DOUSE 30
                                                      
8B9A 82 49 C9                                         HIN:    DB      ^2 "I" ^'I'                             ; ***** IN
8B9D 90 8B                                                    DW      HBLK
8B9F A7 8A 20 00                                      IN:     DW      DOUSE 32
                                                      
8BA3 83 4F 55 D4                                      HOUT:   DB      ^3 "OU" ^'T'                            ; ***** OUT
8BA7 9A 8B                                                    DW      HIN
8BA9 A7 8A 22 00                                      OUT:    DW      DOUSE 34
                                                      
8BAD 83 53 43 D2                                      HSCR:   DB      ^3 "SC" ^'R'                            ; ***** SCR
8BB1 A3 8B                                                    DW      HOUT
8BB3 A7 8A 24 00                                      SCR:    DW      DOUSE 36
                                                      
8BB7 86 4F 46 46 53 45 D4                             HOFFSE: DB      ^6 "OFFSE" ^'T'                         ; ***** OFFSET
8BBE AD 8B                                                    DW      HSCR
8BC0 A7 8A 26 00                                      OFFSE:  DW      DOUSE 38
                                                      
8BC4 87 43 4F 4E 54 45 58 D4                          HCONT:  DB      ^7 "CONTEX" ^'T'                        ; ***** CONTEXT
8BCC B7 8B                                                    DW      HOFFSE
8BCE A7 8A 28 00                                      CONT:   DW      DOUSE 40
                                                      
8BD2 87 43 55 52 52 45 4E D4                          HCURR:  DB      ^7 "CURREN" ^'T'                        ; ***** CURRENT
8BDA C4 8B                                                    DW      HCONT
8BDC A7 8A 2A 00                                      CURR:   DW      DOUSE 42
                                                      
8BE0 85 53 54 41 54 C5                                HSTATE: DB      ^5 "STAT" ^'E'                          ; ***** STATE
8BE6 D2 8B                                                    DW      HCURR
8BE8 A7 8A 2C 00                                      STATE:  DW      DOUSE 44
                                                      
8BEC 84 42 41 53 C5                                   HBASE:  DB      ^4 "BAS" ^'E'                           ; ***** BASE
8BF1 E0 8B                                                    DW      HSTATE
8BF3 A7 8A 2E 00                                      BASE:   DW      DOUSE 46
                                                      
8BF7 83 44 50 CC                                      HDPL:   DB      ^3 "DP" ^'L'                            ; ***** DPL
8BFB EC 8B                                                    DW      HBASE
8BFD A7 8A 32 00                                      DPL:    DW      DOUSE 50
                                                      
8C01 83 46 4C C4                                      HFLD:   DB      ^3 "FL" ^'D'                            ; ***** FLD
8C05 F7 8B                                                    DW      HDPL
8C07 A7 8A 34 00                                      FLD:    DW      DOUSE 52
                                                      
8C0B 83 43 53 D0                                      HCSP:   DB      ^3 "CS" ^'P'                            ; ***** CSP
8C0F 01 8C                                                    DW      HFLD
8C11 A7 8A 34 00                                      CSP:    DW      DOUSE 52
                                                      
8C15 82 52 A3                                         HRNUM:  DB      ^2 "R" ^'#'                             ; ***** R#
8C18 0B 8C                                                    DW      HCSP
8C1A A7 8A 36 00                                      RNUM:   DW      DOUSE 54
                                                      
8C1E 83 48 4C C4                                      HHLD:   DB      ^3 "HL" ^'D'                            ; ***** HLD
8C22 15 8C                                                    DW      HRNUM
8C24 A7 8A 38 00                                      HLD:    DW      DOUSE 56
                                                      
8C28 83 55 53 C5                                      HUSE:   DB      ^3 "US" ^'E'                            ; ***** USE
8C2C 1E 8C                                                    DW      HHLD
8C2E A7 8A 3A 00                                      USE:    DW      DOUSE 58
                                                      
8C32 84 50 52 45 D6                                   HPREV:  DB      ^4 "PRE" ^'V'                           ; ***** PREV
8C37 28 8C                                                    DW      HUSE
8C39 A7 8A 3C 00                                      PREV:   DW      DOUSE 60
                                                      
                                                      ; END OF USER VARIABLES
                                                      ; ------------------------------
                                                      
8C3D 82 31 AB                                         HONEP:  DB      ^2 "1" ^'+'                             ; ***** 1+
8C40 32 8C                                                    DW      HPREV
8C42 19 8A CB 8A F3 88 52 88                          ONEP:   DW      DOCOL ONE PLUS SEMIS
                                                      
8C4A 82 32 AB                                         HTWOP:  DB      ^2 "2" ^'+'                             ; ***** 2+
8C4D 32 8C                                                    DW      HPREV
8C4F 19 8A D3 8A F3 88 52 88                          TWOP:   DW      DOCOL TWO PLUS SEMIS
                                                      
8C57 84 48 45 52 C5                                   HHERE:  DB      ^4 "HER" ^'E'                           ; ***** HERE
8C5C 4A 8C                                                    DW      HTWOP
8C5E 19 8A 65 8B B8 89 52 88                          HERE:   DW      DOCOL DP AT SEMIS
                                                      
8C66 85 41 4C 4C 4F D4                                HALLOT: DB      ^5 "ALLO" ^'T'                          ; ***** ALLOT
8C6C 57 8C                                                    DW      HHERE
8C6E 19 8A 65 8B 84 89 52 88                          ALLOT:  DW      DOCOL DP PSTOR SEMIS
                                                      
8C76 81 AC                                            HCOMMA: DB      ^1 ^','                                 ; ***** ,
8C78 66 8C                                                    DW      HALLOT
8C7A 19 8A 5E 8C DD 89 D3 8A 6E 8C 52 88              COMMA:  DW      DOCOL HERE STORE TWO ALLOT SEMIS
                                                      
8C86 81 AD                                            HSUB:   DB      ^1 ^'-'                                 ; ***** -
8C88 76 8C                                                    DW      HCOMMA
8C8A 19 8A 19 89 F3 88 52 88                          SUB:    DW      DOCOL MINUS PLUS SEMIS
                                                      
8C92 81 BD                                            HEQUAL: DB      ^1 ^'='                                 ; ***** =
8C94 86 8C                                                    DW      HSUB
8C96 19 8A 8A 8C AD 88 52 88                          EQUAL:  DW      DOCOL SUB ZEQU SEMIS
                                                      
8C9E 81 BC                                            HLESS:  DB      ^1 ^'<'                                 ; ***** <
8CA0 92 8C                                                    DW      HEQUAL
8CA2 19 8A 8A 8C D6 88 52 88                          LESS:   DW      DOCOL SUB ZLESS SEMIS
                                                      
8CAA 81 BE                                            HGREAT: DB      ^1 ^'>'                                 ; ***** >
8CAC 9E 8C                                                    DW      HLESS
8CAE 19 8A 66 89 A2 8C 52 88                          GREAT:  DW      DOCOL SWAP LESS SEMIS
                                                      
8CB6 83 52 4F D4                                      HROT:   DB      ^3 "RO" ^'T'                            ; ***** ROT
8CBA AA 8C                                                    DW      HGREAT
8CBC 19 8A 84 88 66 89 94 88 66 89 52 88              ROT:    DW      DOCOL TOR SWAP FROMR SWAP SEMIS
                                                      
8CC8 85 53 50 41 43 C5                                HSPACE: DB      ^5 "SPAC" ^'E'                          ; ***** SPACE
8CCE B6 8C                                                    DW      HROT
8CD0 19 8A E4 8A 1C 87 52 88                          SPACE:  DW      DOCOL BL EMIT SEMIS
                                                      
8CD8 84 2D 44 55 D0                                   HDDUP:  DB      ^4 "-DU" ^'P'                           ; ***** -DUP
8CDD C8 8C                                                    DW      HSPACE
8CDF 19 8A 77 89 43 85 04 00                          DDUP:   DW      DOCOL DUP ZBRAN +DDU10
8CE7 77 89                                                    DW      DUP
8CE9 52 88                                            DDU10:  DW      SEMIS
                                                      
8CEB 88 54 52 41 56 45 52 53 C5                       HTRAV:  DB      ^8 "TRAVERS" ^'E'                       ; ***** TRAVERSE
8CF4 D8 8C                                                    DW      HDDUP
8CF6 19 8A 66 89                                      TRAV:   DW      DOCOL SWAP
8CFA 3F 89 F3 88 FF 84 FF 00                          TRAV10: DW      OVER PLUS LIT 0xFF
8D02 3F 89 C8 89 A2 8C 31 85 F0 FF                            DW      OVER CAT LESS BRAN +TRAV10
8D0C 66 89 54 89 52 88                                        DW      SWAP DROP SEMIS
                                                      
8D12 86 4C 41 54 45 53 D4                             HLATES: DB      ^6 "LATES" ^'T'                         ; ***** LATEST
8D19 EB 8C                                                    DW      HTRAV
8D1B 19 8A DC 8B B8 89 B8 89 52 88                    LATES:  DW      DOCOL CURR AT AT SEMIS
                                                      
8D25 83 4C 46 C1                                      HLFA:   DB      ^3 "LF" ^'A'                            ; ***** LFA
8D29 12 8D                                                    DW      HLATES
8D2B 19 8A FF 84 04 00 8A 8C 52 88                    LFA:    DW      DOCOL LIT 4 SUB SEMIS
                                                      
8D35 83 43 46 C1                                      HCFA:   DB      ^3 "CF" ^'A'                            ; ***** CFA
8D39 25 8D                                                    DW      HLFA
8D3B 19 8A D3 8A 8A 8C 52 88                          CFA:    DW      DOCOL TWO SUB SEMIS
                                                      
8D43 83 4E 46 C1                                      HNFA:   DB      ^3 "NF" ^'A'                            ; ***** NFA
8D47 35 8D                                                    DW      HCFA
8D49 19 8A FF 84 05 00 8A 8C FF 84 FF FF F6 8C 52 88  NFA:    DW      DOCOL LIT 5 SUB LIT -1 TRAV SEMIS
                                                      
8D59 83 50 46 C1                                      HPFA:   DB      ^3 "PF" ^'A'                            ; ***** PFA
8D5D 43 8D                                                    DW      HNFA
8D5F 19 8A CB 8A F6 8C FF 84 05 00 F3 88 52 88        PFA:    DW      DOCOL ONE TRAV LIT 5 PLUS SEMIS
                                                      
                                                      ; ------------------------------
                                                      ; COMPILE TIME CHECKS
                                                      
8D6D 84 21 43 53 D0                                   HSCSP:  DB      ^4 "!CS" ^'P'                           ; ***** !CSP
8D72 59 8D                                                    DW      HPFA
8D74 19 8A F8 87 11 8C DD 89 52 88                    SCSP:   DW      DOCOL SPAT CSP STORE SEMIS
                                                      
8D7E 86 3F 45 52 52 4F D2                             HQERR:  DB      ^6 "?ERRO" ^'R'                         ; ***** ?ERROR
8D85 6D 8D                                                    DW      HSCSP
8D87 19 8A 66 89 43 85 08 00                          QERR:   DW      DOCOL SWAP ZBRAN +QERR10
8D8F 76 92 31 85 04 00                                        DW      ERROR BRAN +QERR20
8D95 54 89                                            QERR10: DW      DROP
8D97 52 88                                            QERR20: DW      SEMIS
                                                      
8D99 85 3F 43 4F 4D D0                                HQCOMP: DB      ^5 "?COM" ^'P'                          ; ***** ?COMP
8D9F 7E 8D                                                    DW      HQERR
8DA1 19 8A E8 8B B8 89 AD 88 FF 84 11 00 87 8D 52 88  QCOMP:  DW      DOCOL STATE AT ZEQU LIT 17 QERR SEMIS
                                                      
8DB1 85 3F 45 58 45 C3                                HQEXEC: DB      ^5 "?EXE" ^'C'                          ; ***** ?EXEC
8DB7 99 8D                                                    DW      HQCOMP
8DB9 19 8A E8 8B B8 89 FF 84 12 00 87 8D 52 88        QEXEC:  DW      DOCOL STATE AT LIT 18 QERR SEMIS
                                                      
8DC7 86 3F 50 41 49 52 D3                             HQPAIR: DB      ^6 "?PAIR" ^'S'                         ; ***** ?PAIRS
8DCE B1 8D                                                    DW      HQEXEC
8DD0 19 8A 8A 8C FF 84 13 00 87 8D 52 88              QPAIR:  DW      DOCOL SUB LIT 19 QERR SEMIS
                                                      
8DDC 84 3F 43 53 D0                                   HQCSP:  DB      ^4 "?CS" ^'P'                           ; ***** ?CSP
8DE1 C7 8D                                                    DW      HQPAIR
8DE3 19 8A F8 87 11 8C B8 89 8A 8C                    QCSP:   DW      DOCOL SPAT CSP AT SUB
8DED FF 84 14 00 87 8D 52 88                                  DW      LIT 20 QERR SEMIS
                                                      
8DF5 88 3F 4C 4F 41 44 49 4E C7                       HQLOAD: DB      ^8 "?LOADIN" ^'G'                       ; ***** ?LOADING
8DFE DC 8D                                                    DW      HQCSP
8E00 19 8A 96 8B B8 89 AD 88 FF 84 16 00 87 8D 52 88  QLOAD:  DW      DOCOL BLK AT ZEQU LIT 22 QERR SEMIS
                                                      
                                                      ; ------------------------------
                                                      ; COMPILER WORDS
                                                      
8E10 87 43 4F 4D 50 49 4C C5                          HCOMP:  DB      ^7 "COMPIL" ^'E'                        ; ***** COMPILE
8E18 F5 8D                                                    DW      HQLOAD
8E1A 19 8A A1 8D 94 88 77 89                          COMP:   DW      DOCOL QCOMP FROMR DUP
8E22 4F 8C 84 88 B8 89 7A 8C 52 88                            DW      TWOP TOR AT COMMA SEMIS
                                                      
8E2C C1 DB                                            HLBRAC: DB      ^^1 ^'['                                ; ***** [
8E2E 10 8E                                                    DW      HCOMP
8E30 19 8A C3 8A E8 8B DD 89 52 88                    LBRAC:  DW      DOCOL ZERO STATE STORE SEMIS
                                                      
8E3A 81 DD                                            HRBRAC: DB      ^1 ^']'                                 ; ***** ]
8E3C 2C 8E                                                    DW      HLBRAC
8E3E 19 8A FF 84 C0 00 E8 8B DD 89 52 88              RBRAC:  DW      DOCOL LIT 0xC0 STATE STORE SEMIS
                                                      
8E4A 86 53 4D 55 44 47 C5                             HSMUDG: DB      ^6 "SMUDG" ^'E'                         ; ***** SMUDGE
8E51 3A 8E                                                    DW      HRBRAC
8E53 19 8A 1B 8D FF 84 20 00 A0 89 52 88              SMUDG:  DW      DOCOL LATES LIT 0x20 TOGGL SEMIS
                                                      
8E5F 83 48 45 D8                                      HHEX:   DB      ^3 "HE" ^'X'                            ; ***** HEX
8E63 4A 8E                                                    DW      HSMUDG
8E65 19 8A FF 84 10 00 F3 8B DD 89 52 88              HEX:    DW      DOCOL LIT 16 BASE STORE SEMIS
                                                      
8E71 87 44 45 43 49 4D 41 CC                          HDEC:   DB      ^7 "DECIMA" ^'L'                        ; ***** DECIMAL
8E79 5F 8E                                                    DW      HHEX
8E7B 19 8A FF 84 0A 00 F3 8B DD 89 52 88              DEC:    DW      DOCOL LIT 10 BASE STORE SEMIS
                                                      
8E87 85 4F 43 54 41 CC                                HOCTAL: DB      ^5 "OCTA" ^'L'                          ; ***** OCTAL
8E8D 71 8E                                                    DW      HDEC
8E8F 19 8A FF 84 08 00 F3 8B DD 89 52 88              OCTAL:  DW      DOCOL LIT 8 BASE STORE SEMIS
                                                      
8E9B 87 28 3B 43 4F 44 45 A9                          HPSCOD: DB      ^7 "(;CODE" ^')'                        ; ***** (;CODE)
8EA3 87 8E                                                    DW      HOCTAL
8EA5 19 8A 94 88 1B 8D 5F 8D 3B 8D DD 89 52 88        PSCOD:  DW      DOCOL FROMR LATES PFA CFA STORE SEMIS
                                                      
8EB3 87 3C 42 55 49 4C 44 D3                          HBUILD: DB      ^7 "<BUILD" ^'S'                        ; ***** <BUILDS
8EBB 9B 8E                                                    DW      HPSCOD
8EBD 19 8A C3 8A 55 8A 52 88                          BUILD:  DW      DOCOL ZERO CON SEMIS
                                                      
8EC5 85 44 4F 45 53 BE                                HDOES:  DB      ^5 "DOES" ^'>'                          ; ***** DOES>
8ECB B3 8E                                                    DW      HBUILD
8ECD 19 8A 94 88 1B 8D 5F 8D DD 89 A5 8E              DOES:   DW      DOCOL FROMR LATES PFA STORE PSCOD
8ED9 2F 06 D0                                         DODOE:  DEW     RP              ; -(RP) = IP
8EDC 15 01 D0                                                 LDA     IP.1            ; :
8EDF 1E 06 D0                                                 STR     RP              ; :
8EE2 2F 06 D0                                                 DEW     RP              ; :
8EE5 15 00 D0                                                 LDA     IP.0            ; :
8EE8 1E 06 D0                                                 STR     RP              ; :
8EEB 1D 02 D0                                                 LDR     WA              ; IP = (WA)+
8EEE 16 00 D0                                                 STA     IP.0            ; :
8EF1 2E 02 D0                                                 INW     WA              ; :
8EF4 1D 02 D0                                                 LDR     WA              ; :
8EF7 16 01 D0                                                 STA     IP.1            ; :
8EFA 2E 02 D0                                                 INW     WA              ; :
8EFD 2F 04 D0                                                 DEW     SP              ; -(SP) = WA
8F00 15 03 D0                                                 LDA     WA.1            ; :
8F03 1E 04 D0                                                 STR     SP              ; :
8F06 2F 04 D0                                                 DEW     SP              ; :
8F09 15 02 D0                                                 LDA     WA.0            ; :
8F0C 1E 04 D0                                                 STR     SP              ; :
8F0F 14 9C 84                                                 JPA     NEXT            ; Done
                                                      
                                                      ; ------------------------------
                                                      ; MISC WORDS RELATED TO PRINTING
                                                      
8F12 85 43 4F 55 4E D4                                HCOUNT: DB      ^5 "COUN" ^'T'                          ; ***** COUNT
8F18 C5 8E                                                    DW      HDOES
8F1A 19 8A 77 89 42 8C 66 89 C8 89 52 88              COUNT:  DW      DOCOL DUP ONEP SWAP CAT SEMIS
                                                      
8F26 84 54 59 50 C5                                   HTYPE:  DB      ^4 "TYP" ^'E'                           ; ***** TYPE
8F2B 12 8F                                                    DW      HCOUNT
8F2D 19 8A DF 8C 43 85 18 00                          TYPE:   DW      DOCOL DDUP ZBRAN +TYPE20
8F35 3F 89 F3 88 66 89 D9 85                                  DW      OVER PLUS SWAP XDO
8F3D EB 85 C8 89 1C 87 C4 85 F8 FF                    TYPE10: DW      I CAT EMIT XLOOP +TYPE10
8F47 31 85 04 00                                              DW      BRAN +TYPE30
8F4B 54 89                                            TYPE20: DW      DROP
8F4D 52 88                                            TYPE30: DW      SEMIS
                                                      
8F4F 89 2D 54 52 41 49 4C 49 4E C7                    HDTRAI: DB      ^9 "-TRAILIN" ^'G'                      ; ***** -TRAILING
8F59 26 8F                                                    DW      HTYPE
8F5B 19 8A 77 89 C3 8A D9 85                          DTRAI:  DW      DOCOL DUP ZERO XDO
8F63 3F 89 3F 89 F3 88 CB 8A 8A 8C                    DTRA10: DW      OVER OVER PLUS ONE SUB
8F6D C8 89 E4 8A 8A 8C 43 85 08 00                            DW      CAT BL SUB ZBRAN +DTRA20
8F77 71 88 31 85 06 00                                        DW      LEAVE BRAN +DTRA30
8F7D CB 8A 8A 8C                                      DTRA20: DW      ONE SUB
8F81 C4 85 E0 FF                                      DTRA30: DW      XLOOP +DTRA10
8F85 52 88                                                    DW      SEMIS
                                                      
8F87 84 28 2E 22 A9                                   HPDOTQ: DB      ^4 "(." '"' ^')'                        ; ***** (.")
8F8C 4F 8F                                                    DW      HDTRAI
8F8E 19 8A A0 88 1A 8F 77 89 42 8C                    PDOTQ:  DW      DOCOL R COUNT DUP ONEP
8F98 94 88 F3 88 84 88 2D 8F 52 88                            DW      FROMR PLUS TOR TYPE SEMIS
                                                      
8FA2 C2 2E A2                                         HDOTQ:  DB      ^^2 "." ^'"'                            ; ***** ."
8FA5 87 8F                                                    DW      HPDOTQ
8FA7 19 8A FF 84 22 00 E8 8B B8 89 43 85 14 00        DOTQ:   DW      DOCOL LIT '"' STATE AT ZBRAN +DOTQ10
8FB5 1A 8E 8E 8F 0A 91 5E 8C C8 89 42 8C                      DW      COMP PDOTQ WORD HERE CAT ONEP
8FC1 6E 8C 31 85 0A 00                                        DW      ALLOT BRAN +DOTQ20
8FC7 0A 91 5E 8C 1A 8F 2D 8F                          DOTQ10: DW      WORD HERE COUNT TYPE
8FCF 52 88                                            DOTQ20: DW      SEMIS
                                                      
                                                      ; ------------------------------
                                                      ; OUTER INTERPRETER
                                                      
8FD1 86 45 58 50 45 43 D4                             HEXPEC: DB      ^6 "EXPEC" ^'T'                         ; ***** EXPECT
8FD8 A2 8F                                                    DW      HDOTQ
8FDA 19 8A 3F 89 F3 88 3F 89 D9 85                    EXPECT: DW      DOCOL OVER PLUS OVER XDO
8FE4 2E 87 77 89 FF 84 0E 00 14 8B                    EXPE10: DW      KEY DUP LIT 14 PORIG
8FEE B8 89 96 8C 43 85 20 00                                  DW      AT EQUAL ZBRAN +EXPE20
8FF6 54 89 FF 84 08 00 3F 89 EB 85 96 8C 77 89 94 88          DW      DROP LIT 8 OVER I EQUAL DUP FROMR
9006 D3 8A 8A 8C F3 88 84 88 8A 8C 31 85 28 00                DW      TWO SUB PLUS TOR SUB BRAN +EXPE50
9014 77 89 FF 84 0D 00 96 8C 43 85 0E 00              EXPE20: DW      DUP LIT 13 EQUAL ZBRAN +EXPE30
9020 71 88 54 89 E4 8A C3 8A 31 85 04 00                      DW      LEAVE DROP BL ZERO BRAN +EXPE40
902C 77 89                                            EXPE30: DW      DUP
902E EB 85 F0 89 C3 8A EB 85 42 8C DD 89              EXPE40: DW      I CSTOR ZERO I ONEP STORE
903A 1C 87 C4 85 A6 FF                                EXPE50: DW      EMIT XLOOP +EXPE10
9040 54 89 52 88                                              DW      DROP SEMIS
                                                      
9044 86 51 55 45 52 D9                                HQUERY: DB      ^6 "QUER" ^'Y'                          ; ***** QUERY
904A D1 8F                                                    DW      HEXPEC
904C 19 8A 36 8B B8 89 FF 84 50 00 00 00              QUERY:  DW      DOCOL TIB AT LIT 80 EXPEC
9058 C3 8A 9F 8B DD 89 52 88                                  DW      ZERO IN STORE SEMIS
                                                      
9060 C1 80                                            HNULL:  DB      ^^1 ^0                                  ; ***** <the NULL word>
9062 44 90                                                    DW      HQUERY
9064 19 8A 96 8B B8 89 43 85 26 00                    NULL:   DW      DOCOL BLK AT ZBRAN +NULL20
906E CB 8A 96 8B 84 89 C3 8A 9F 8B DD 89                      DW      ONE BLK PSTOR ZERO IN STORE
907A 96 8B B8 89 06 8B 00 00 AD 88 43 85 08 00                DW      BLK AT BSCR MOD ZEQU ZBRAN +NULL10
9088 B9 8D 94 88 54 89                                        DW      QEXEC FROMR DROP
908E 31 85 06 00                                      NULL10: DW      BRAN +NULL30
9092 94 88 54 89                                      NULL20: DW      FROMR DROP
9096 52 88                                            NULL30: DW      SEMIS
                                                      
9098 84 46 49 4C CC                                   HFILL:  DB      ^4 "FIL" ^'L'                           ; ***** FILL
909D 60 90                                                    DW      HNULL
909F 19 8A 66 89 84 88 3F 89 F0 89 77 89              FILL:   DW      DOCOL SWAP TOR OVER CSTOR DUP
90AB 42 8C 94 88 CB 8A 8A 8C 71 87 52 88                      DW      ONEP FROMR ONE SUB CMOVE SEMIS
                                                      
90B7 85 45 52 41 53 C5                                HERASE: DB      ^5 "ERAS" ^'E'                          ; ***** ERASE
90BD 98 90                                                    DW      HFILL
90BF 19 8A C3 8A 9F 90 52 88                          ERASE:  DW      DOCOL ZERO FILL SEMIS
                                                      
90C7 86 42 4C 41 4E 4B D3                             HBLANK: DB      ^6 "BLANK" ^'S'                         ; ***** BLANKS
90CE B7 90                                                    DW      HERASE
90D0 19 8A E4 8A 9F 90 52 88                          BLANK:  DW      DOCOL BL FILL SEMIS
                                                      
90D8 84 48 4F 4C C4                                   HHOLD:  DB      ^4 "HOL" ^'D'                           ; ***** HOLD
90DD C7 90                                                    DW      HBLANK
90DF 19 8A FF 84 FF FF 24 8C 84 89                    HOLD:   DW      DOCOL LIT -1 HLD PSTOR
90E9 24 8C B8 89 F0 89 52 88                                  DW      HLD AT CSTOR SEMIS
                                                      
90F1 83 50 41 C4                                      HPAD:   DB      ^3 "PA" ^'D'                            ; ***** PAD
90F5 D8 90                                                    DW      HHOLD
90F7 19 8A 5E 8C FF 84 54 00 F3 88 52 88              PAD:    DW      DOCOL HERE LIT 84 PLUS SEMIS
                                                      
9103 84 57 4F 52 C4                                   HWORD:  DB      ^4 "WOR" ^'D'                           ; ***** WORD
9108 F1 90                                                    DW      HPAD
910A 19 8A 96 8B B8 89 43 85 0C 00                    WORD:   DW      DOCOL BLK AT ZBRAN +WORD10
9114 96 8B B8 89 00 00 31 85 06 00                            DW      BLK AT BLOCK BRAN +WORD20
911E 36 8B B8 89                                      WORD10: DW      TIB AT
9122 00 00 F3 88 66 89 B5 86                          WORD20: DW      INAT PLUS SWAP ENCL
912A 5E 8C FF 84 22 00 D0 90 9F 8B                            DW      HERE LIT 34 BLANK IN
9134 84 89 3F 89 8A 8C 84 88 A0 88 5E 8C F0 89 F3 88          DW      PSTOR OVER SUB TOR R HERE CSTOR PLUS
9144 5E 8C 42 8C 94 88 71 87 52 88                            DW      HERE ONEP FROMR CMOVE SEMIS
                                                      
914E 88 28 4E 55 4D 42 45 52 A9                       HPNUMB: DB      ^8 "(NUMBER" ^')'                       ; ***** (NUMBER)
9157 03 91                                                    DW      HWORD
9159 19 8A                                            PNUMB:  DW      DOCOL
915B 42 8C 77 89 84 88 C8 89                          PNUM10: DW      ONEP DUP TOR CAT
9163 F3 8B B8 89 FB 85 43 85 2C 00                            DW      BASE AT DIGIT ZBRAN +PNUM30
916D 66 89 F3 8B B8 89 96 87 54 89 BC 8C F3 8B B8 89          DW      SWAP BASE AT USTAR DROP ROT BASE AT
917D 96 87 03 89 FD 8B B8 89 42 8C 43 85 08 00                DW      USTAR DPLUS DPL AT ONEP ZBRAN +PNUM20
918B CB 8A FD 8B 84 89                                        DW      ONE DPL PSTOR
9191 94 88 31 85 C6 FF                                PNUM20: DW      FROMR BRAN +PNUM10
9197 94 88 52 88                                      PNUM30: DW      FROMR SEMIS
                                                      
919B 86 4E 55 4D 42 45 D2                             HNUMB:  DB      ^6 "NUMBE" ^'R'                         ; ***** NUMBER
91A2 4E 91                                                    DW      HPNUMB
91A4 19 8A C3 8A C3 8A BC 8C 77 89 42 8C C8 89        NUMB:   DW      DOCOL ZERO ZERO ROT DUP ONEP CAT
91B2 FF 84 2D 00 96 8C 77 89 84 88 F3 88 FF 84 FF FF          DW      LIT '-' EQUAL DUP TOR PLUS LIT -1
91C2 FD 8B DD 89 59 91 77 89                          NUMB10: DW      DPL STORE PNUMB DUP
91CA C8 89 E4 8A 8A 8C 43 85 16 00                            DW      CAT BL SUB ZBRAN +NUMB20
91D4 77 89 C8 89 FF 84 2E 00 8A 8C                            DW      DUP CAT LIT '.' SUB
91DE C3 8A 87 8D C3 8A 31 85 DC FF                            DW      ZERO QERR ZERO BRAN +NUMB10
91E8 54 89 94 88 43 85 04 00                          NUMB20: DW      DROP FROMR ZBRAN +NUMB30
91F0 2D 89                                                    DW      DMINU
91F2 52 88                                            NUMB30: DW      SEMIS
                                                      
91F4 85 2D 46 49 4E C4                                HDFIND: DB      ^5 "-FIN" ^'D'                          ; ***** -FIND
91FA 9B 91                                                    DW      HNUMB
91FC 19 8A E4 8A 0A 91 5E 8C 1A 8F 2C 92              DFIND:  DW      DOCOL BL WORD HERE COUNT UPPER
9208 5E 8C CE 8B B8 89 B8 89 2D 86                            DW      HERE CONT AT AT PFIND
9212 77 89 AD 88 43 85 0A 00                                  DW      DUP ZEQU ZBRAN +DFIN10
921A 54 89 5E 8C 1B 8D 2D 86                                  DW      DROP HERE LATES PFIND
9222 52 88                                            DFIN10: DW      SEMIS
                                                      
9224 85 55 50 50 45 D2                                HUPPER: DB      ^5 "UPPE" ^'R'                          ; ***** UPPER
922A F4 91                                                    DW      HDFIND
922C 19 8A 3F 89 F3 88 66 89 D9 85                    UPPER:  DW      DOCOL OVER PLUS SWAP XDO
9236 EB 85 C8 89 FF 84 60 00 AE 8C                    UPPE10: DW      I CAT LIT 0x60 GREAT
9240 EB 85 C8 89 FF 84 7B 00 A2 8C                            DW      I CAT LIT 0x7B LESS
924A C6 87 43 85 0A 00                                        DW      AND ZBRAN +UPPE20
9250 EB 85 FF 84 20 00 A0 89                                  DW      I LIT 0x20 TOGGL
9258 C4 85 DC FF                                      UPPE20: DW      XLOOP +UPPE10
925C 52 88                                                    DW      SEMIS
                                                      
925E 87 28 41 42 4F 52 54 A9                          HPABOR: DB      ^7 "(ABORT" ^')'                        ; ***** (ABORT)
9266 24 92                                                    DW      HUPPER
9268 19 8A 00 00 52 88                                PABOR:  DW      DOCOL ABORT SEMIS
                                                      
926E 85 45 52 52 4F D2                                HERROR: DB      ^5 "ERRO" ^'R'                          ; ***** ERROR
9274 5E 92                                                    DW      HPABOR
9276 19 8A 50 8B B8 89 D6 88 43 85 04 00              ERROR:  DW      DOCOL WARN AT ZLESS ZBRAN +ERRO10
9282 68 92                                                    DW      PABOR
9284 5E 8C 1A 8F 2D 8F 8E 8F                          ERRO10: DW      HERE COUNT TYPE PDOTQ
928C 03 20 3F 20                                              DB      3 32 '?' 32
9290 00 00 0F 88 9F 8B B8 89 96 8B B8 89 00 00 52 88          DW      MESS SPSTO IN AT BLK AT QUIT SEMIS
                                                      
92A0 83 49 44 AE                                      HIDDOT: DB      ^3 "ID" ^'.'                            ; ***** ID.
92A4 6E 92                                                    DW      HERROR
92A6 19 8A F7 90 E4 8A FF 84 5F 00 9F 90              IDDOT:  DW      DOCOL PAD BL LIT 95 FILL
92B2 77 89 5F 8D 2B 8D 3F 89 8A 8C F7 90 66 89 71 87          DW      DUP PFA LFA OVER SUB PAD SWAP CMOVE
92C2 F7 90 1A 8F FF 84 1F 00 C6 87 2D 8F D0 8C 52 88          DW      PAD COUNT LIT 31 AND TYPE SPACE SEMIS
                                                      
92D2 86 43 52 45 41 54 C5                             HCREAT: DB      ^6 "CREAT" ^'E'                         ; ***** CREATE
92D9 A0 92                                                    DW      HIDDOT
92DB 19 8A FC 91 43 85 10 00                          CREAT:  DW      DOCOL DFIND ZBRAN +CREA10
92E3 54 89 49 8D A6 92 FF 84 04 00 00 00 D0 8C                DW      DROP NFA IDDOT LIT 4 MESS SPACE
92F1 5E 8C 77 89 C8 89 42 8B B8 89 00 00 42 8C 6E 8C  CREA10: DW      HERE DUP CAT WIDTH AT MIN ONEP ALLOT
9301 77 89 FF 84 A0 00 A0 89 5E 8C CB 8A 8A 8C                DW      DUP LIT 0xA0 TOGGL HERE ONE SUB
930F FF 84 80 00 A0 89 1B 8D 7A 8C DC 8B B8 89 DD 89          DW      LIT 0x80 TOGGL LATES COMMA CURR AT STORE
931F 5E 8C 4F 8C 7A 8C 52 88                                  DW      HERE TWOP COMMA SEMIS
                                                      
9327 C9 5B 43 4F 4D 50 49 4C 45 DD                    HBCOMP: DB      ^^9 "[COMPILE" ^']'                     ; ***** [COMPLIE]
9331 D2 92                                                    DW      HCREAT
9333 19 8A FC 91 AD 88 C3 8A 87 8D                    BCOMP:  DW      DOCOL DFIND ZEQU ZERO QERR
933D 54 89 3B 8D 7A 8C 52 88                                  DW      DROP CFA COMMA SEMIS
                                                      
                                                      
                                                      ; INCLUDE         coldwarm.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; COLD AND WARM START ENTRY POINTS
                                                      
9345 0E FE                                            CENT:   LDI     0xFE            ; Initialize Minimal stack pointer
9347 16 FF FF                                                 STA     0xFFFF          ; :
934A 0E 30                                                    LDI     <XSP            ; Initialize FORTH SP
934C 16 04 D0                                                 STA     SP.0            ; :
934F 0E D0                                                    LDI     >XSP            ; :
9351 16 05 D0                                                 STA     SP.1            ; :
9354 0E 40                                                    LDI     <XRP            ; Initialize FORTH RP
9356 16 06 D0                                                 STA     RP.0            ; :
9359 0E D0                                                    LDI     >XRP            ; :
935B 16 07 D0                                                 STA     RP.1            ; :
935E 0E 6B                                                    LDI     <TEST           ; Initialize FORTH IP
9360 16 00 D0                                                 STA     IP.0            ; :
9363 0E 93                                                    LDI     >TEST           ; :
9365 16 01 D0                                                 STA     IP.1            ; :
9368 14 9C 84                                                 JPA     NEXT            ; ... and over to FORTH VM
                                                      
936B FF 84 20 00                                      TEST:   DW      LIT 32
936F 77 89 1C 87 42 8C                                TEST10: DW      DUP EMIT ONEP
9375 77 89 FF 84 80 00 A2 8C AD 88 43 85 EE FF                DW      DUP LIT 128 LESS ZEQU ZBRAN +TEST10
9383 47 83                                                    DW      _HALT
                                                      
9385 00                                               WENT:   NOP
                                                      
9386 20 20 54 4F 4B 45 4E 00 20 20 00                 STRING: DB      32 32 "TOKEN" 0 32 32 0
                                                      
                                                              ORG     0xD000
                                                      
                                                      ; INCLUDE         regs.asm
                                                      
                                                      ; ----------------------------------------------------------------------
                                                      ; THE VIRTUAL FORTH MACHINE REGISTERS
                                                      
                                                              ORG     0xD000
                                                      
                                                      IP:                             ; Instruction Pointer
D000 00                                               IP.0:   DB      0
D001 00                                               IP.1:   DB      0
                                                      
                                                      WA:                             ; Word Address Register
D002 00                                               WA.0:   DB      0
D003 00                                               WA.1:   DB      0
                                                      
                                                      SP:                             ; Data stack pointer
D004 00                                               SP.0:   DB      0
D005 00                                               SP.1:   DB      0
                                                      
                                                      RP:                             ; Return stack pointer
D006 00                                               RP.0:   DB      0
D007 00                                               RP.1:   DB      0
                                                      
                                                      UP:                             ; User area pointer
D008 00                                               UP.0:   DB      0
D009 00                                               UP.1:   DB      0
                                                      
                                                              ORG     0xD010
                                                      
                                                      R1:                             ; Working register R1
D010 00                                               R1.0:   DB      0
D011 00                                               R1.1:   DB      0
                                                      R1H:
D012 00                                               R1.2:   DB      0
D013 00                                               R1.3:   DB      0
                                                      
                                                      R2:                             ; Working register R2
D014 00                                               R2.0:   DB      0
D015 00                                               R2.1:   DB      0
                                                      R2H:
D016 00                                               R2.2:   DB      0
D017 00                                               R2.3:   DB      0
                                                      
                                                      R3:                             ; Working register R3
D018 00                                               R3.0:   DB      0
D019 00                                               R3.1:   DB      0
                                                      R3H:
D01A 00                                               R3.2:   DB      0
D01B 00                                               R3.3:   DB      0
                                                      
D01C 00                                               BC:     DB      0               ; "Hidden" registers
D01D 00                                               TMP:    DB      0               ; (used by _AND8 _OR8 _XOR8)
                                                      
                                                              ORG     0xD020
D020 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  XDP:    DW      0 0 0 0 0 0 0 0    
D030 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  XSP:    DW      0 0 0 0 0 0 0 0
D040 00 00                                            XRP:    DW      0
